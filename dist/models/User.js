'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _index=require('../actions/index');var _Consumer=require('../models/Consumer');var _Consumer2=_interopRequireDefault(_Consumer);var _requestPromise=require('request-promise');var _requestPromise2=_interopRequireDefault(_requestPromise);var _config=require('config');var _config2=_interopRequireDefault(_config);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var FACEBOOK_GRAPH=_config2.default.get('FACEBOOK_GRAPH');var User=Parse.Object.extend('User',{initialize:function initialize(attrs,options){//console.log('new user');
//console.log();
//console.log(options);
},signUpWithFacebookData:function signUpWithFacebookData(data){var facebookId=this.get('facebookId');return this.signUp(Object.assign(data,{username:facebookId.toString(),password:facebookId.toString()})).fail(function(error){console.log('Error code: '+error.message);});},registered:function registered(){return new Parse.Query('User').equalTo('facebookId',this.get('facebookId')).first().fail(function(error){console.log('Error code: '+error.message);});},createConsumer:function createConsumer(store,recipientId,conversationToken){var consumer=new _Consumer2.default({conversationId:parseInt(recipientId),conversationToken:conversationToken});consumer.setUser(this);return consumer.save().then(function(){return consumer.saveInStore(store,recipientId);});},saveInStore:function saveInStore(store,recipientId){return store.dispatch((0,_index.setUser)(recipientId,this)).fail(function(error){console.log('Error code: '+error.message);});}},{loadInStore:function loadInStore(store,recipientId){return store.dispatch((0,_index.loadUser)(recipientId)).fail(function(error){console.log('Error code: '+error.message);});},getFacebookUserData:function getFacebookUserData(facebookId,conversationToken){return(0,_requestPromise2.default)({uri:FACEBOOK_GRAPH+facebookId,qs:{access_token:conversationToken,fields:'first_name,last_name,locale,timezone,gender'},method:'GET'}).then(function(body){return JSON.parse(body);}).catch(function(error){console.log('error');console.log(error);});},createUser:function createUser(store,recipientId,facebookId,conversationToken){var user=new User({facebookId:parseInt(facebookId)});return User.getFacebookUserData(facebookId,conversationToken).then(function(data){delete data.id;return user.signUpWithFacebookData(data).then(function(){return user.saveInStore(store,recipientId);});});}});exports.default=User;