{"version":3,"sources":["../../src/app.js"],"names":["bot","types","Actions","APP_SECRET","process","env","MESSENGER_APP_SECRET","get","PAGE_ACCESS_TOKEN","MESSENGER_PAGE_ACCESS_TOKEN","SERVER_URL","PARSE_APP_ID","PARSE_SERVER_URL","PARSE_CLIENT_KEY","FACEBOOK_APP_ID","REDIRECT_URI","BUSINESS_ID","GOOGLE_MAPS_URL","GOOGLE_MAPS_KEY","rules","set","sendMenu","sendAddressesWithTitle","sendCart","sendOrders","sendAddresses","newAddress","sendAccount","sendCreditCards","registerCreditCard","sendHelp","renderYouAreWelcome","payloadRules","setAddressComplement","confirmAddress","setAddress","editAddress","removeAddress","sendCategories","sendProducts","addProduct","addModifier","removeProduct","increaseOneProduct","decreaseOneProduct","sendProductDescription","sendContinueOrder","searchProducts","sendCartDetails","editCart","clearCart","clearAndSendCart","sendPurchaseOptions","checkout","checkPayment","checkAddress","checkOrder","registerCreditCardAndPay","sendRegisteredCreditCards","cancelRegisterCreditCard","payWithCreditCard","sendOrder","newOrder","cancelOrder","removeCreditCard","setScore","defaultSearch","initialState","userData","reducer","state","action","console","log","data","hasOwnProperty","recipientId","type","APP_LOADED","app","CUSTOMER_LOADED","customer","CONSUMER_LOADED","consumer","USER_LOADED","user","CONSUMER_ADDRESSES_LOADED","addresses","map","a","SET_CURRENT_ADDRESS","address","PAYMENT_METHODS_LOADED","paymentMethods","p","SET_PAYMENT_METHOD","paymentMethod","SET_ORDERS","ongoing","orders","delivered","CONSUMER_UPDATED","CONSUMER_NOT_FOUND","CONSUMER_ORDERS_LOADED","USER_CREDITCARDS_LOADED","creditCards","SET_CUSTOMER_POINT_SALE","pointSale","SET_ORDER","order","SET_USER","SET_CONSUMER","SET_CUSTOMER","SET_ORDER_STATE","orderState","RENDER_MENU","renderMenu","RENDER_ADDRESS_MENU","renderAddress","signUp","facebookId","conversationToken","createUser","store","then","userObject","rawParseObject","createConsumer","resolve","reject","login","username","password","Parse","User","logIn","success","error","message","authentication","getCustomer","getUser","getConsumer","loadInStore","Promise","as","userObj","consumerObj","sendSignUp","sendTypingOn","renderSignUp","image_url","messageData","recipient","id","attachment","payload","template_type","elements","sendTypingOff","callSendAPI","image","url","first_name","name","renderAddressTitle","push","length","limit","description","city","location","lat","lng","objectId","renderCreditCards","userBuffer","buffer","creditCardImage","creditCardPayload","creditCard","creditCardImages","has","lastFour","cardHolderName","setDataBuffer","writeAddress","setListener","addressCheck","setLocationCheck","renderMapMessage","renderNullMapMessage","sendMap","renderMap","sendMapConfirmation","renderMapConfirmation","geocode","status","setAddressComponetsInBuffer","results","formatted_address","geometry","address_components","component","includes","route","long_name","street_number","short_name","locality","administrative_area","country","country_code","postal_code","addressPayload","saveAddress","startsWith","split","GeoPoint","latitude","parseFloat","longitude","Query","consumerAddress","complement","save","undefined","renderAddressUpdate","address_name","__type","className","result","renderAddressSave","setEmail","setEmailCheck","value","email","saveInStore","setTelephone","setTelephoneCheck","setPhone","telephone","reverseGeocode","dispatch","Cloud","run","businessId","setCustomerPointSale","renderAddressConfirmation","code","renderAddressOutOfCoverage","destroy","renderRemoveAddress","renderRemoveCreditCard","renderCategoriesInitialMessage","index","pointSaleIsOpen","parseInt","renderCategories","categories","sendScheduleRestriction","pointSaleSchedules","splitCategories","idx","forEach","item","title","buttons","Object","keys","catIni","catFin","subtitle","renderProductsInitialMessage","categoryId","text","category","object","proIdx","products","renderEmptyProducts","renderProducts","splitProducts","product","createCart","assign","items","Map","cart","productId","productObject","promises","quantity","price","priceDefault","modifiers","obj","array","modifier","when","undefinedModifiers","checkModifiers","modifierItem","modifierItems","renderModifierMenu","saveCart","renderAddProduct","renderContinueOrder","quick_replies","modifierId","itemId","orderItemModifier","exist","itemModifier","checkModifiersComplete","orderItem","delete","itemsPointers","key","size","consumerCart","properties","saveAll","method","saveOrder","state0","orderStates","total","deliveryCost","phone","setOrder","sendEmptyCartOptions","customer_image_url","element","orderLimit","ind","renderCartEmpty","renderCart","alert","cartId","payment_method","addressData","street_1","street_2","postalCode","countryCode","recipient_name","last_name","order_number","currency","timestamp","Math","trunc","Date","now","toString","summary","subtotal","shipping_cost","total_cost","renderCartDetails","renderEditCartOptions","minOrderPrice","sendMinOrderPriceRestriction","loadPaymentMethods","renderCheckPayment","i","substring","setPaymentMethod","paymentFunction","paymentTypes","renderMinOrderPriceRestriction","days","pointSaleSchedule","daysActive","allDay","dayID","renderScheduleRestriction","sendCash","renderCash","orderConfirmation","renderCancelRegisterCreditCard","renderNoRegisteredCreditCards","renderRegisteredCreditCards","card","creditCardId","renderOrderConfirmation","messagePush","renderOrderState","orderSent","renderOrderSent","serviceRating","sendOrderState","score","orderId","Number","comment","thank","query","q","renderSearchEmpty","renderSearchInitial","splitSearchResult","productObjects","renderHelp","sendContactUs","consumerId","setOrders","renderOrders","fail","datetime","dateString","createdAt","orderNumber","currentOrder","amount","renderOrder","renderCancelOrder","renderAccount","addCreditCard","token","expiration","replace","uri","headers","json","catch","createOrder","checkSchedulesDeliveryPointSale","params","date","toJSON","slice","renderShoppingCartOptions","updateCart","localCart","setPayment","sendRegisterFacebookUser","req","res","sendFile","join","__dirname","post","body","psid","uid","accessToken","end","consumerID","getSessionToken","setOrderState","find","methods","tmpMethod","states","module","exports","getData"],"mappings":"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","file":"app.js","sourcesContent":["import * as bot from './bot';\nimport * as types from './constants/actionTypes';\nimport * as Actions from './actions/index';\nimport { extractParseAttributes } from './parseUtils';\nimport {createLocalStore, getData} from './localStore'\nimport {Customer, User, Consumer, ConsumerAddress, Category, Product, Cart, Order, OrderItem, OrderState, Modifier, ModifierItem, OrderItemModifier, PaymentMethod, CreditCard} from './models/ParseModels';\n\nimport config from 'config';\nimport rp from 'request-promise';\nimport Promise from 'promise';\nimport objectAssign from 'object-assign';\nimport geocoder from 'geocoder';\nimport path from 'path';\nimport DateTime from 'datetime-converter-nodejs';\nimport dateFormat from 'dateformat'\n\nconst APP_SECRET = (process.env.MESSENGER_APP_SECRET) ? process.env.MESSENGER_APP_SECRET : config.get('APP_SECRET');\n\nconst PAGE_ACCESS_TOKEN = (process.env.MESSENGER_PAGE_ACCESS_TOKEN) ? (process.env.MESSENGER_PAGE_ACCESS_TOKEN) : config.get('PAGE_ACCESS_TOKEN');\n\nconst SERVER_URL = (process.env.SERVER_URL) ? (process.env.SERVER_URL) : config.get('SERVER_URL');\n\nconst PARSE_APP_ID = (process.env.PARSE_APP_ID) ? (process.env.PARSE_APP_ID) : config.get('PARSE_APP_ID');\n\nconst PARSE_SERVER_URL = (process.env.PARSE_SERVER_URL) ? (process.env.PARSE_SERVER_URL) : config.get('PARSE_SERVER_URL');\n\nconst PARSE_CLIENT_KEY = (process.env.PARSE_CLIENT_KEY) ? (process.env.PARSE_CLIENT_KEY) : config.get('PARSE_CLIENT_KEY');\n\nconst FACEBOOK_APP_ID = (process.env.FACEBOOK_APP_ID) ? (process.env.FACEBOOK_APP_ID) : config.get('FACEBOOK_APP_ID');\n\nconst REDIRECT_URI = (process.env.REDIRECT_URI) ? (process.env.REDIRECT_URI) : config.get('REDIRECT_URI');\n\nconst BUSINESS_ID = (process.env.BUSINESS_ID) ? (process.env.BUSINESS_ID) : config.get('BUSINESS_ID');\n\nconst GOOGLE_MAPS_URL = (process.env.GOOGLE_MAPS_URL) ? (process.env.GOOGLE_MAPS_URL) : config.get('GOOGLE_MAPS_URL');\n\nconst GOOGLE_MAPS_KEY = (process.env.GOOGLE_MAPS_KEY) ? (process.env.GOOGLE_MAPS_KEY) : config.get('GOOGLE_MAPS_KEY');\n\nbot.rules.set('hola', sendMenu);\nbot.rules.set('iniciar', sendMenu);\nbot.rules.set('empezar', sendMenu);\nbot.rules.set('comenzar', sendMenu);\nbot.rules.set('buenos dias', sendMenu);\nbot.rules.set('buenas tardes', sendMenu);\nbot.rules.set('menú', sendMenu);\nbot.rules.set('pedir domicilio', sendAddressesWithTitle);\nbot.rules.set('carrito', sendCart);\nbot.rules.set('cuenta', sendCart);\nbot.rules.set('mi orden', sendOrders);\nbot.rules.set('mis órdenes', sendOrders);\nbot.rules.set('mi dirección', sendAddresses);\nbot.rules.set('mis direcciones', sendAddresses);\nbot.rules.set('nueva dirección', newAddress);\nbot.rules.set('agregar dirección', newAddress);\nbot.rules.set('mi cuenta', sendAccount);\nbot.rules.set('mi tarjeta', sendCreditCards);\nbot.rules.set('mis tarjetas', sendCreditCards);\nbot.rules.set('nueva tarjeta', registerCreditCard);\nbot.rules.set('agregar tarjeta', registerCreditCard);\n\nbot.rules.set('ayuda', sendHelp);\nbot.rules.set('help', sendHelp);\nbot.rules.set('gracias', renderYouAreWelcome);\n\nbot.payloadRules.set('Greeting', sendMenu);\n\nbot.payloadRules.set('SendAddressesWithTitle', sendAddressesWithTitle);\nbot.payloadRules.set('SendAddresses', sendAddresses);\nbot.payloadRules.set('NewAddress', newAddress);\nbot.payloadRules.set('SetAddressComplement', setAddressComplement);\nbot.payloadRules.set('ConfirmAddress', confirmAddress);\nbot.payloadRules.set('SetAddress', setAddress);\nbot.payloadRules.set('EditAddress', editAddress);\nbot.payloadRules.set('RemoveAddress', removeAddress);\n\nbot.payloadRules.set('SendCategories', sendCategories);\nbot.payloadRules.set('SendProducts', sendProducts);\nbot.payloadRules.set('AddProduct', addProduct);\nbot.payloadRules.set('AddModifier', addModifier);\nbot.payloadRules.set('RemoveProduct', removeProduct);\nbot.payloadRules.set('IncreaseOneProduct', increaseOneProduct);\nbot.payloadRules.set('DecreaseOneProduct', decreaseOneProduct);\nbot.payloadRules.set('SendProductDescription', sendProductDescription);\nbot.payloadRules.set('SendContinueOrder', sendContinueOrder);\n\nbot.payloadRules.set('Search', searchProducts);\nbot.payloadRules.set('SendCart', sendCart);\nbot.payloadRules.set('SendCartDetails', sendCartDetails);\nbot.payloadRules.set('EditCart', editCart);\nbot.payloadRules.set('ClearCart', clearCart);\nbot.payloadRules.set('ClearAndSendCart', clearAndSendCart);\nbot.payloadRules.set('SendPurchaseOptions', sendPurchaseOptions);\n\nbot.payloadRules.set('Checkout', checkout);\nbot.payloadRules.set('CheckPayment', checkPayment);\nbot.payloadRules.set('CheckAddress', checkAddress);\nbot.payloadRules.set('CheckOrder', checkOrder);\nbot.payloadRules.set('RegisterCreditCard', registerCreditCard);\nbot.payloadRules.set('RegisterCreditCardAndPay', registerCreditCardAndPay);\n\nbot.payloadRules.set('SendRegisteredCreditCards', sendRegisteredCreditCards);\nbot.payloadRules.set('CancelRegisterCreditCard', cancelRegisterCreditCard);\nbot.payloadRules.set('PayWithCreditCard', payWithCreditCard);\nbot.payloadRules.set('SendOrders', sendOrders);\nbot.payloadRules.set('SendOrder', sendOrder);\nbot.payloadRules.set('NewOrder', newOrder);\nbot.payloadRules.set('CancelOrder', cancelOrder);\nbot.payloadRules.set('SendCreditCards', sendCreditCards);\nbot.payloadRules.set('RemoveCreditCard', removeCreditCard);\nbot.payloadRules.set('SetScore', setScore);\nbot.payloadRules.set('SendAccount', sendAccount);\nbot.payloadRules.set('SendHelp', sendHelp);\nbot.payloadRules.set('CustomerService', sendHelp);\n\nbot.defaultSearch = searchProducts;\n\nconst initialState = {\n    userData: {}\n\n    /*\n    geocodedLocation: {lat: -1, lng: -1},\n    addresses: [],\n    mapBounds: {},\n    mapAddress: '',\n    useSubCategories: false,\n    products: [],\n    pointOfSales: [],\n    categories: [],\n    paymentMethods: [],\n    consumer: {},\n    customer: {},\n    orders: { ongoing: [], delivered: [] },\n    orderToRate: null,\n    currentOrder: {\n        consumerAddress:{},\n        items: []\n    },\n    locationZoom: 3,\n    profileIsOpen: false,\n    mapAddressIsOpen: false,\n    addressFormIsOpen: false,\n    addressListIsOpen: false,\n    savingAddress: false,\n    creatingOrder: false,\n    paymentMethodNotSelected: false,\n    cartTotalIsBelowMinimumPrice: false,\n    currentCategory: {},\n    consumerNotFound: false,\n    updatingConsumer: false,\n    currentUser: {},\n    pendingOrder: false*/\n};\n\nconst reducer = (state = initialState, action) => {\n    console.log('ACTION');\n    console.log(action);\n    let data = action.data;\n\n    if(data && data.hasOwnProperty('recipientId')){\n        if(typeof state.userData[data.recipientId] != 'object'){\n            state.userData[data.recipientId] = {};\n        }\n    }\n\n    switch (action.type) {\n        case types.APP_LOADED: {\n            console.log('Application is running on port', bot.app.get('port'));\n            return {...state};\n        }\n        case types.CUSTOMER_LOADED: {\n            let customer = extractParseAttributes(data.customer);\n\n            if(typeof state.userData[data.recipientId] != 'object'){\n                state.userData[data.recipientId] = {};\n            }\n            objectAssign(state.userData[data.recipientId], {customer});\n            return {...state};\n        }\n        case types.CONSUMER_LOADED: {\n            let consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n        }\n        case types.USER_LOADED: {\n            let user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n        }\n        case types.CONSUMER_ADDRESSES_LOADED: {\n            let addresses = data.addresses.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {addresses});\n            return {...state};\n        }\n        case types.SET_CURRENT_ADDRESS: {\n            let address = extractParseAttributes(data.address);\n            objectAssign(state.userData[data.recipientId], {address});\n            return {...state};\n        }\n        case types.PAYMENT_METHODS_LOADED: {\n            let paymentMethods = data.paymentMethods.map(p => extractParseAttributes(p))\n            objectAssign(state.userData[data.recipientId], {paymentMethods})\n            return {...state};\n        }\n        case types.SET_PAYMENT_METHOD: {\n            let paymentMethod = extractParseAttributes(data.paymentMethod);\n            objectAssign(state.userData[data.recipientId], {paymentMethod});\n            return {...state};\n        }\n        case types.SET_ORDERS: {\n            let ongoing = data.orders.ongoing.map(a => extractParseAttributes(a));\n            let delivered = data.orders.delivered.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {orders: {ongoing: ongoing, delivered: delivered}});\n            return {...state};\n        }\n        case types.CONSUMER_UPDATED: {\n            return {...state};\n        }\n        case types.CONSUMER_NOT_FOUND: {\n            return {...state};\n        }\n        case types.CONSUMER_ORDERS_LOADED: {\n            let orders = data.orders.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {orders});\n            return {...state};\n        }\n        case types.USER_CREDITCARDS_LOADED: {\n            let creditCards = data.creditCards.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {creditCards});\n            return {...state};\n        }\n        case types.SET_CUSTOMER_POINT_SALE: {\n            let pointSale = extractParseAttributes(data.pointSale);\n            objectAssign(state.userData[data.recipientId], {pointSale});\n            return {...state};\n        }\n        case types.SET_ORDER: {\n            let order = extractParseAttributes(data.order);\n            objectAssign(state.userData[data.recipientId], {order});\n            return {...state};\n        }\n        case types.SET_USER: {\n            let user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n        }\n        case types.SET_CONSUMER: {\n            let consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n        }\n        case types.SET_CUSTOMER:{\n            let customer = extractParseAttributes(data.customer);\n            objectAssign(state.userData[data.recipientId], {customer});\n            return {...state};\n        }\n        case types.SET_ORDER_STATE: {\n            let orderState = extractParseAttributes(data.orderState);\n            objectAssign(state.userData[data.recipientId], {orderState});\n            return {...state};\n        }\n        case types.RENDER_MENU: {\n            renderMenu()\n            return state;\n        }\n        case types.RENDER_ADDRESS_MENU: {\n            renderAddress();\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\ncreateLocalStore(reducer);\n\nfunction signUp(recipientId, facebookId, conversationToken){\n    return User.createUser(store, recipientId, facebookId, conversationToken).then(()=>{\n        let userObject = getData(recipientId, 'user');\n        let user = userObject.rawParseObject;\n\n        return user.createConsumer(store, recipientId, conversationToken).then(consumer => {\n            return new Promise(function(resolve, reject){\n                resolve(userObject)\n            });\n        });\n    });\n}\n\nfunction login(username, password){\n    return Parse.User.logIn(username, password, {\n        success : user => {\n            //let val = JSON.stringify({sessionToken: user.getSessionToken()});\n            //console.log(val);\n            return user;\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }});\n}\n\nfunction authentication(recipientId){\n    return getCustomer(recipientId).then(customer => {\n        return getUser(recipientId).then(user => {\n            if(typeof user == 'undefined'){\n                //sendSignUp(recipientId)\n                return User.createUser(store, recipientId, recipientId, PAGE_ACCESS_TOKEN).then(()=>{\n                    let userObject = getData(recipientId, 'user');\n                    let user = userObject.rawParseObject;\n\n                    return user.createConsumer(store, recipientId, PAGE_ACCESS_TOKEN).then(consumer => {\n                        return new Promise(function(resolve, reject){\n                            resolve(userObject)\n                        });\n                    });\n                })\n            }\n            else{\n                return getConsumer(recipientId, user.rawParseObject).then(consumer => {\n                    return new Promise(function(resolve, reject){\n                        resolve(user)\n                    });\n\n                    /*Parse.Promise.as().then(() => {\n                        return user;\n                    });*/\n                });\n            }\n            //return login(user.username, user.username).then(()=>{\n\n            //});\n        });\n    });\n}\n\nfunction getCustomer(recipientId){\n    let customer = getData(recipientId, 'customer');\n    if(typeof customer == 'undefined'){\n        return Customer.loadInStore(store, recipientId, BUSINESS_ID).then(()=>{\n            return getData(recipientId, 'customer');\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return customer;\n        })\n    }\n}\n\nfunction getUser(recipientId){\n    let userObj = getData(recipientId, 'user');\n    if(typeof userObj == 'undefined'){\n        return User.loadInStore(store, recipientId).then(()=>{\n            return getData(recipientId, 'user');\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return userObj;\n        })\n    }\n}\n\nfunction getConsumer(recipientId, user){\n    let consumerObj = getData(recipientId, 'consumer');\n\n    if(typeof consumerObj == 'undefined'){\n        return Consumer.loadInStore(store, recipientId, user).then(()=>{\n            consumerObj = getData(recipientId, 'consumer');\n\n            if(typeof consumerObj != 'undefined'){\n                return Parse.Promise.as().then(() => {\n                    return consumerObj;\n                })\n            }else{\n                console.log('create consumer');\n                /*return createConsumer(recipientId, user).then( () => {\n                    return getData(recipientId, 'consumer');\n                });*/\n            }\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return consumerObj;\n        })\n    }\n}\n\nfunction sendSignUp(recipientId) {\n    bot.sendTypingOn(recipientId);\n\n    renderSignUp(recipientId);\n}\n\nfunction renderSignUp(recipientId) {\n    let image_url = SERVER_URL+\"assets/images/love.jpg\";\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        \"title\":     \"Hola, soy un Bot\",\n                        \"subtitle\":  \"Soy tu asistente virtual. Quieres registrarte en nuestro sistema?\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\": \"web_url\",\n                                \"url\": SERVER_URL + \"login?psid=\"+recipientId,\n                                \"title\": \"Registrarme\",\n                                \"webview_height_ratio\": \"full\",\n                                \"messenger_extensions\": true\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMenu(recipientId) {\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then(() =>{\n        renderMenu(recipientId);\n    });\n}\n\nfunction renderMenu(recipientId) {\n    let customer = getData(recipientId, 'customer');\n    let user = getData(recipientId, 'user');\n\n    let image_url = customer.image.url;\n\n    //bot.sendGeneric(title, subtitle, image_url, buttons)\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        \"title\":     \"Hola \"+user.first_name+\", Bienvenido a \"+customer.name,\n                        \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir domicilio\",\n                                \"payload\": \"SendAddressesWithTitle\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Servicio al cliente\",\n                                \"payload\": \"CustomerService\"\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendAddressesWithTitle(recipientId){\n    renderAddressTitle(recipientId).then(()=>{\n        sendAddresses(recipientId);\n    });\n}\n\nfunction renderAddressTitle(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A cual dirección vas hacer tu pedido?\\n\\nPuedes escoger entre agregar una nueva dirección o seleccionar una de tus direcciones guardadas\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendAddresses(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let consumer = getData(recipientId, 'consumer');\n\n        ConsumerAddress.loadInStore(store, recipientId, consumer).then(() => {\n            renderAddress(recipientId);\n        });\n    });\n}\n\nfunction renderAddress(recipientId){\n    let addresses = getData(recipientId, 'addresses');\n    let elements = [];\n\n    elements.push({\n        \"title\": \"Nueva dirección\",\n        \"subtitle\": \"Puedes agregar una nueva dirección\",\n        \"image_url\": SERVER_URL+\"assets/images/addAddress.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva dirección\",\n                \"payload\": \"NewAddress\"\n            }\n        ]\n    });\n\n    for(let address of addresses) {\n        if (elements.length < bot.limit){\n            elements.push({\n                \"title\": address.name,\n                \"subtitle\": address.address +\", \"+address.description+\", \"+address.city+\", \"+address.state,\n                \"image_url\": GOOGLE_MAPS_URL+ \"?center=\"+address.location.lat+\",\"+address.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+address.location.lat+\",\"+address.location.lng+\"&key=\"+GOOGLE_MAPS_KEY,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Seleccionar\",\n                        \"payload\": \"SetAddress-\"+address.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Modificar\",\n                        \"payload\": \"EditAddress-\"+address.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Quitar\",\n                        \"payload\": \"RemoveAddress-\"+address.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n    \n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCreditCards(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let user = getData(recipientId, 'user');\n        CreditCard.loadInStore(store, recipientId, user).then(() => {\n            renderCreditCards(recipientId);\n        });\n\n    });\n}\n\nfunction renderCreditCards(recipientId){\n    let creditCards = getData(recipientId, 'creditCards');\n    let elements = [];\n    let userBuffer = bot.buffer[recipientId];\n    let creditCardImage;\n\n    if(typeof userBuffer != 'undefined' && userBuffer.hasOwnProperty('creditCardPayload')){\n        delete userBuffer.creditCardPayload;\n    }\n\n    elements.push({\n        \"title\": \"Registro de tarjeta\",\n        \"subtitle\": \"Puedes agregar una tarjeta\",\n        \"image_url\": SERVER_URL+\"assets/images/creditCards.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva tarjeta\",\n                \"payload\": \"RegisterCreditCard\"\n            }\n        ]\n    });\n\n    for(let creditCard of creditCards) {\n        if (elements.length < bot.limit){\n            creditCardImage = creditCardImages.has(creditCard.type) ? creditCardImages.get(creditCard.type) : creditCardImages.get('DEFAULT')\n            elements.push({\n                \"title\": creditCard.type+' '+creditCard.lastFour,\n                \"subtitle\": creditCard.cardHolderName,\n                \"image_url\": SERVER_URL+creditCardImage,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Quitar\",\n                        \"payload\": \"RemoveCreditCard-\"+creditCard.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction newAddress(recipientId){\n    bot.sendTypingOff(recipientId);\n    bot.setDataBuffer(recipientId, 'addressPayload', 'NewAddress');\n    writeAddress(recipientId);\n}\n\nfunction writeAddress(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Puedes escribir o compartir tu ubicación actual?\\n\\nEjemplo: Calle 67 #52-20, Medellín.\\n\\nNo olvides escribir la ciudad al final de la dirección.\",\n            \"quick_replies\":[\n                {\n                    \"content_type\": \"location\",\n                    \"title\": \"Enviar ubicación\"\n                }\n            ]\n        }\n    };\n\n    bot.setListener(recipientId, 'address', 'text', addressCheck);\n    bot.setListener(recipientId, 'location', 'attachment', setLocationCheck);\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderMapMessage(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"text\": \"Encontré esta dirección en Google Maps:\\n\\n\"+userBuffer.address+\"\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderNullMapMessage(recipientId){\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"text\": \"La dirección no ha sido encontrada en Google Maps, por favor intenta de nuevo\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMap(recipientId){\n    renderMap(recipientId).then(() => {\n        sendMapConfirmation(recipientId);\n    });\n}\n\nfunction renderMap(recipientId){\n    bot.sendTypingOff(recipientId);\n    let userBuffer = bot.buffer[recipientId];\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"attachment\": {\n                \"type\": \"image\",\n                \"payload\": {\n                    \"url\": GOOGLE_MAPS_URL+\"?center=\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&key=\"+GOOGLE_MAPS_KEY\n                }\n            }\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMapConfirmation(recipientId){\n    renderMapConfirmation(recipientId)\n}\n\nfunction renderMapConfirmation(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Es correcta?\",\n            \"quick_replies\":[\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Si\",\n                    \"payload\": \"SetAddressComplement\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"No\",\n                    \"payload\": \"NewAddress\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction addressCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n\n    geocoder.geocode(userBuffer.address, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            setAddressComponetsInBuffer(recipientId, data.results[0]);\n        }\n        else{\n            console.log('Geocode not found');\n            console.log(error);\n            renderNullMapMessage(recipientId).then(()=>{\n                newAddress(recipientId)\n            });\n        }\n    });\n}\n\nfunction setAddressComponetsInBuffer(recipientId, data){\n    let userBuffer = bot.buffer[recipientId];\n    userBuffer.address = data.formatted_address;\n    userBuffer.location = data.geometry.location;\n\n    for(let component of data.address_components){\n        if(component.types.includes('route')){\n            userBuffer.route = component.long_name;\n        }\n        else if(component.types.includes('street_number')){\n            userBuffer.street_number = component.short_name;\n        }\n        else if(component.types.includes('locality')){\n            userBuffer.locality = component.short_name;\n        }\n        else if(component.types.includes('administrative_area_level_1')){\n            userBuffer.state = component.short_name;\n        }\n        else if(component.types.includes('administrative_area_level_2')){\n            userBuffer.administrative_area = component.short_name;\n        }\n        else if(component.types.includes('country')){\n            userBuffer.country = component.long_name;\n            userBuffer.country_code = component.short_name\n        }\n        else if(component.types.includes('postal_code')){\n            userBuffer.postal_code = component.short_name;\n        }\n    }\n\n    renderMapMessage(recipientId).then(() => {\n        sendMap(recipientId);\n    });\n}\n\nfunction setAddressComplement(recipientId){\n    bot.sendTypingOff(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe el complemento de tu dirección actual.\\n\\nEjemplo: Apto 303, edificio el palmar.\\n\\nNo olvides colocar el nombre del edificio o del barrio\"\n        }\n    };\n    bot.setListener(recipientId, 'complement', 'text', confirmAddress);\n    return bot.callSendAPI(messageData);\n}\n\nfunction confirmAddress(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let addressPayload = userBuffer['addressPayload'];\n\n    if(addressPayload == 'NewAddress'){\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": \"Por favor coloca un nombre a esta dirección para guardarla. \\n\\nEjemplo: casa, apartamento o oficina\"\n            }\n        };\n        bot.setListener(recipientId, 'address_name', 'text', saveAddress);\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    }\n    else if(addressPayload.startsWith('EditAddress')){\n        let data = addressPayload.split('-');\n        let location = new Parse.GeoPoint({latitude: parseFloat(userBuffer.location.lat), longitude: parseFloat(userBuffer.location.lng)});\n\n        new Parse.Query(ConsumerAddress).get(data[1]).then((consumerAddress) => {\n\n            consumerAddress.set('address', userBuffer.route+\" # \"+userBuffer.street_number);\n            consumerAddress.set('location', location);\n            consumerAddress.set('country', userBuffer.country);\n            consumerAddress.set('countryCode', userBuffer.country_code);\n            consumerAddress.set('postalCode', userBuffer.postal_code);\n            consumerAddress.set('state', userBuffer.state);\n            consumerAddress.set('description', userBuffer.complement);\n\n            consumerAddress.save(undefined, {\n                success: function(address) {\n                    delete userBuffer.address;\n                    delete userBuffer.location;\n                    delete userBuffer.complement;\n\n                    renderAddressUpdate(recipientId).then(() => {\n                        setAddress(recipientId, address.id)\n                    });\n                },\n                error: function(user, error) {\n                   console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n        });\n    }\n}\n\nfunction renderAddressUpdate(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido actualizada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction saveAddress(recipientId){\n    let consumer = getData(recipientId, 'consumer');\n    let userBuffer = bot.buffer[recipientId];\n    let location = new Parse.GeoPoint({latitude: parseFloat(userBuffer.location.lat), longitude: parseFloat(userBuffer.location.lng)});\n\n    let consumerAddress = new ConsumerAddress();\n    consumerAddress.set('name', userBuffer.address_name);\n    consumerAddress.set('address', userBuffer.route+\" # \"+userBuffer.street_number);\n    consumerAddress.set('consumer', {\n        __type: \"Pointer\",\n        className: \"Consumer\",\n        objectId: consumer.objectId\n    });\n    consumerAddress.set('location', location);\n    consumerAddress.set('city', userBuffer.locality);\n    consumerAddress.set('country', userBuffer.country);\n    consumerAddress.set('countryCode', userBuffer.country_code);\n    consumerAddress.set('postalCode', userBuffer.postal_code);\n    consumerAddress.set('state', userBuffer.state);\n    consumerAddress.set('description', userBuffer.complement);\n\n    consumerAddress.save(undefined, {\n        success: function(result) {\n\n            delete userBuffer.address;\n            delete userBuffer.location;\n            delete userBuffer.complement;\n            delete userBuffer['address_name'];\n\n            renderAddressSave(recipientId).then(() => {\n                setAddress(recipientId, result.id)\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction renderAddressSave(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido almacenada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction setEmail(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu email:\"\n        }\n    };\n    bot.setListener(recipientId, 'email', 'text', setEmailCheck);\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setEmailCheck(recipientId, value){\n    let userBuffer = bot.buffer[recipientId];\n    let consumer = getData(recipientId, 'consumer').rawParseObject;\n\n    consumer.setEmail(userBuffer.email);\n    consumer.saveInStore(store, recipientId).then(()=>{\n        delete userBuffer.email;\n        checkOrder(recipientId)\n    });\n}\n\nfunction setTelephone(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu número telefónico:\"\n        }\n    };\n    bot.setListener(recipientId, 'telephone', 'text', setTelephoneCheck);\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setTelephoneCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let consumer = getData(recipientId, 'consumer').rawParseObject;\n\n    consumer.setPhone(userBuffer.telephone);\n    consumer.saveInStore(store, recipientId).then(()=>{\n        delete userBuffer.telephone;\n        checkOrder(recipientId)\n    });\n}\n\nfunction setLocationCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n\n    geocoder.reverseGeocode( userBuffer.location.lat, userBuffer.location.lng, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            setAddressComponetsInBuffer(recipientId, data.results[0])\n        }\n        else{\n            console.log('Geocode not found');\n            console.log(error);\n            renderNullMapMessage(recipientId).then(()=>{\n                newAddress(recipientId)\n            });\n        }\n    });\n}\n\nfunction setAddress(recipientId, id){\n    bot.sendTypingOn(recipientId);\n\n    store.dispatch(Actions.setAddress(recipientId, id)).then(() => {\n            let address = getData(recipientId, 'address');\n\n            Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, lat: address.location.lat, lng: address.location.lng}).then(\n                function(result){\n                    let pointSale = result.pointSale;\n\n                    store.dispatch(Actions.setCustomerPointSale(recipientId, pointSale.id)).then(() => {\n                        renderAddressConfirmation(recipientId).then(()=>{\n                            sendCategories(recipientId, 0);\n                        });\n                    });\n                },\n                function(error) {\n                    if(error.code == '141'){\n                        renderAddressOutOfCoverage(recipientId).then(()=>{\n                            sendAddressesWithTitle(recipientId)\n                        });\n                    }\n                    else{\n                        console.log('error');\n                        console.log(error);\n                    }\n                });\n        }\n    );\n}\n\nfunction editAddress(recipientId, id){\n    bot.sendTypingOff(recipientId);\n    bot.setDataBuffer(recipientId, 'addressPayload', 'EditAddress-'+id);\n\n    writeAddress(recipientId);\n\n}\n\nfunction removeAddress(recipientId, id){\n    new Parse.Query(ConsumerAddress).get(id).then((consumerAddress) => {\n        consumerAddress.destroy().then(()=>{\n            renderRemoveAddress(recipientId).then(()=>{\n                sendAddresses(recipientId);\n            });\n        });\n    });\n}\n\nfunction renderRemoveAddress(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido eliminada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction removeCreditCard(recipientId, id){\n    new Parse.Query(CreditCard).get(id).then((creditCard) => {\n        creditCard.destroy().then(()=>{\n            renderRemoveCreditCard(recipientId).then(()=> {\n                sendCreditCards(recipientId);\n            });\n        });\n    });\n}\n\nfunction renderRemoveCreditCard(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La tarjeta de credito ha sido eliminada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderAddressOutOfCoverage(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección seleccionada no está dentro de la cobertura de nuestras sedes, por favor intenta con otra dirección\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderAddressConfirmation(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Perfecto, ya seleccioné tu dirección para este pedido\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderCategoriesInitialMessage(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A continuación te presentamos las categorías de productos disponibles.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCategories(recipientId, index){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then(()=>{\n        Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID }).then(function(result){\n            if(result.pointSaleIsOpen) {\n                if(typeof index == 'undefined')\n                    index = 0;\n                else if( typeof index == 'string')\n                    index = parseInt(index);\n\n                if(index == 0){\n                    renderCategoriesInitialMessage(recipientId)\n                    bot.sendTypingOn(recipientId);\n                }\n\n                renderCategories(recipientId, result.categories, index);\n\n            }else{\n                sendScheduleRestriction(recipientId, result.pointSaleSchedules);\n            }\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n    });\n}\n\nfunction splitCategories(recipientId, categories, index){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n\n    let idx = 0;\n    let elements = [];\n\n    categories.forEach(function(item){\n        if(item && item.get('name')){\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                let image = item.get('image');\n                image_url = (typeof image != 'undefined') ? image.url() : customer.image.url;\n                elements.push({\n                    title: item.get('name'),\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: 'Ver categoría',\n                        payload: \"SendProducts-\"+item.id+\"-0\",\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction renderCategories(recipientId, categories, index){\n    let elements = splitCategories(recipientId, categories, index);\n    let idx = Object.keys(categories).length;\n    let buttons = [];\n    let catIni = (index + 1) * bot.limit;\n    let catFin = (idx > catIni + bot.limit) ? catIni + bot.limit : idx;\n\n    if (idx > (index + 1) * bot.limit) {\n        buttons.push({\n            type: \"postback\",\n            title: \"Categorías \" + (catIni + 1) + \"-\" + catFin,\n            payload: \"SendCategories-\" + (index + 1),\n        });\n\n        elements.push({\n            title: \"Ver más categorias \",\n            subtitle: \"Categorías disponibles\",\n            buttons: buttons\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: elements\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderProductsInitialMessage(recipientId, categoryId){\n    return new Parse.Query(Category).get(categoryId).then(\n        category => {\n            let messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    text: \"Selecciona \"+category.get('name')+\":\"\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            return bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    )\n}\n\nfunction sendProducts(recipientId, categoryId, proIdx){\n    bot.sendTypingOn(recipientId);\n    proIdx = parseInt(proIdx);\n    if(proIdx == 0){\n        renderProductsInitialMessage(recipientId, categoryId);\n        bot.sendTypingOn(recipientId);\n    }\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, category: categoryId }).then(result => {\n        if(result.hasOwnProperty('categories')){\n            renderCategories(recipientId, result.categories, 0);\n        }else{\n            if(result.products.length == 0){\n                renderEmptyProducts(recipientId)\n            }\n            else{\n                renderProducts(recipientId, categoryId, result.products, proIdx);\n            }\n        }\n    },\n    function(error) {\n        console.log('error');\n        console.log(error);\n    })\n}\n\nfunction splitProducts(recipientId, products, proIdx){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n\n    let idx = 0;\n    let elements = [];\n\n    products.forEach(function(product){\n        if(product && product.get('name')){\n            if(idx >= (proIdx)*bot.limit && idx < (proIdx+1)*bot.limit){\n                let image = product.get('image');\n                image_url = (typeof image != 'undefined') ? image.url() : customer.image.url;\n\n                elements.push({\n                    title: product.get('name') +\": $\"+ product.get('priceDefault'),\n                    subtitle: product.get('description'),\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: \"Agregar\",\n                        payload: \"AddProduct-\"+product.id,\n                    },\n                    {\n                        type: \"postback\",\n                        title: 'Ver descripción',\n                        payload: \"SendProductDescription-\"+product.id,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction renderProducts(recipientId, categoryId, products, index){\n    let elements = splitProducts(recipientId, products, index);\n    let idx = Object.keys(products).length;\n    let buttons = [];\n    let catIni = (index+1)*bot.limit;\n    let catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n    if(idx > (index+1)*bot.limit){\n        buttons.push({\n            type: \"postback\",\n            title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n            payload: \"SendProducts-\"+categoryId+\"-\"+(index+1),\n        });\n\n        elements.push({\n            title: \"Ver más productos \",\n            subtitle: \"Productos disponibles\",\n            buttons: buttons\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderEmptyProducts(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"No existen productos en esta categoría\",\n            \"quick_replies\": [\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Seguir pidiendo\",\n                    \"payload\": \"SendContinueOrder\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Ver carrito\",\n                    \"payload\": \"SendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction createCart(recipientId){\n    let userData = getData(recipientId);\n    Object.assign(userData, {'cart': {items: new Map()}});\n    return userData.cart;\n}\n\nfunction addProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(typeof cart == 'undefined'){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n\n    new Parse.Query(Product).get(productId).then(product => {\n        let productObject = extractParseAttributes(product);\n        let item = items.get(productId);\n        let promises = [];\n\n        if(typeof item == 'undefined'){\n            items.set(productId, {quantity: 1, price: productObject.priceDefault});\n            item = items.get(productId);\n        }\n        else{\n            item.quantity += 1;\n        }\n\n        if(typeof item.modifiers == 'undefined'){\n            item.modifiers = [];\n        }\n\n        if(typeof productObject.modifiers != 'undefined'){\n            productObject.modifiers.forEach(function(obj, index, array){\n                promises.push(new Parse.Query(Modifier).get(obj.objectId).then(modifier => {\n                    return extractParseAttributes(modifier);\n                }));\n            });\n        }\n\n        Parse.Promise.when(promises).then(function(modifiers) {\n            let undefinedModifiers = checkModifiers(recipientId, productId, modifiers);\n\n            console.log(undefinedModifiers);\n\n            //checkModifiersComplete(recipientId, productId, modifiers).then(result =>{\n            //    console.log('result: '+result);\n            //});\n            if(undefinedModifiers.length > 0){\n                //Show multiples modifiers\n                promises = [];\n\n                undefinedModifiers[0].items.forEach(function (modifierItem) {\n                    promises.push(new Parse.Query(ModifierItem).get(modifierItem.objectId).then(modifierItem => {\n                        return extractParseAttributes(modifierItem);\n                    }));\n                });\n\n                Parse.Promise.when(promises).then(function (modifierItems) {\n                    renderModifierMenu(recipientId, productId, undefinedModifiers[0], modifierItems);\n                })\n            }\n            else{\n                saveCart(recipientId);\n                renderAddProduct(recipientId, productId);\n            }\n        });\n    },\n    (object, error) => {\n        console.log(error);\n    });\n}\n\nfunction renderAddProduct(recipientId, productId){\n    return new Parse.Query(Product).get(productId).then(product => {\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": \"El producto \" + product.get('name') + \" ha sido agregado.\\n\\nDeseas seguir pidiendo o ver tu carrito?\",\n                \"quick_replies\": [\n                    {\n                        \"content_type\": \"text\",\n                        \"title\": \"Seguir pidiendo\",\n                        \"payload\": \"SendContinueOrder\"\n                    },\n                    {\n                        \"content_type\": \"text\",\n                        \"title\": \"Ver carrito\",\n                        \"payload\": \"SendCart\"\n                    }\n                ]\n            }\n        };\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    },\n    (object, error) => {\n        console.log(error);\n    })\n}\n\nfunction sendContinueOrder(recipientId){\n    renderContinueOrder(recipientId).then( ()=> {\n        sendCategories(recipientId, 0);\n    });\n}\n\nfunction renderContinueOrder(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Puedes escribir el nombre de un producto, ej: Ensalada mediterranea, o seleccionarlo en el siguiente menú:\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderModifierMenu(recipientId, productId, modifier, items){\n    let quick_replies = [];\n\n    items.forEach(function (item){\n        if(quick_replies.length <= bot.limit){\n            quick_replies.push({\n                \"content_type\": \"text\",\n                \"title\": item.name,\n                \"payload\": \"AddModifier-\"+productId+\"-\"+modifier.objectId+\"-\"+item.objectId\n            });\n        }\n    });\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Escoge \" + modifier.name + \":\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction addModifier(recipientId, productId, modifierId, itemId){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let orderItemModifier = new OrderItemModifier();\n\n    orderItemModifier.set('modifier', {\n        __type: \"Pointer\",\n        className: \"Modifier\",\n        objectId: modifierId\n    });\n\n    orderItemModifier.set('modifierItem', {\n        __type: \"Pointer\",\n        className: \"ModifierItem\",\n        objectId: itemId\n    });\n\n    //orderItemModifier.set('price', itemId.price)\n\n    orderItemModifier.save(undefined, {\n        success: function(result) {\n            item.modifiers.push({\n                __type: \"Pointer\",\n                className: \"OrderItemModifier\",\n                objectId: result.id\n            });\n\n            saveCart(recipientId);\n            renderAddProduct(recipientId, productId)\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n\n}\n\nfunction checkModifiers(recipientId, productId, modifiers){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let exist = false;\n    let result = [];\n\n    modifiers.forEach(function (modifier) {\n        exist = false;\n\n        item.modifiers.forEach(function (itemModifier){\n            console.log(itemModifier.objectId)\n            //exist true\n        });\n\n        if(!exist){\n            result.push(modifier);\n        }\n    });\n\n    return result;\n}\n\nfunction checkModifiersComplete(recipientId, productId, modifiers){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let promises = [];\n\n    console.log(modifiers);\n    console.log(modifiers.length)\n    console.log(cart.items);\n    console.log(item);\n    console.log(item.modifiers.length);\n\n    if(modifiers.length != item.modifiers.length){\n        promises = [];\n        modifiers.forEach(function (modifier) {\n            modifier.items.forEach(function (modifierItem) {\n                promises.push(new Parse.Query(ModifierItem).get(modifierItem.objectId).then(modifierItem => {\n                    return extractParseAttributes(modifierItem);\n                }));\n            });\n\n            return Parse.Promise.when(promises).then(function (elements) {\n                renderModifierMenu(recipientId, productId, modifier, elements);\n                return true;\n            });\n        });\n    }\n\n}\n\nfunction removeProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    new Parse.Query(OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.destroy({});\n            items.delete(productId);\n            let itemsPointers = [];\n\n            for(let [key, value] of items) {\n                itemsPointers.push({\"__type\": \"Pointer\", \"className\": \"OrderItem\", \"objectId\": value.id})\n            }\n\n            cart.itemsPointers = itemsPointers;\n            if(items.size == 0){\n                sendCart(recipientId);\n            }\n            else{\n                sendCartDetails(recipientId)\n            }\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction increaseOneProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    item.quantity++;\n\n    new Parse.Query(OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.set('amount', item.quantity);\n            orderItem.save();\n            sendCartDetails(recipientId)\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction decreaseOneProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    item.quantity--;\n\n    if(item.quantity > 0){\n        new Parse.Query(OrderItem).get(item.id, {\n            success: (orderItem) => {\n                orderItem.set('amount', item.quantity);\n                orderItem.save();\n                sendCartDetails(recipientId)\n            },\n            error: (orderItem, error) => {\n                console.log('error');\n                console.log(error);\n            }\n        });\n    }\n    else{\n        removeProduct(recipientId, productId)\n    }\n}\n\nfunction sendProductDescription(recipientId, productId){\n    let product = new Product();\n\n    new Parse.Query(product).get(productId).then(\n        product => {\n            let messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    \"text\": product.get('name')+\": \"+product.get('description'),\n                    \"quick_replies\":[\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Agregar\",\n                            \"payload\":\"AddProduct-\"+productId\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Seguir pidiendo\",\n                            \"payload\":\"SendContinueOrder\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Ver carrito\",\n                            \"payload\":\"SendCart\"\n                        }\n                    ]\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            return bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    );\n}\n\nfunction saveCart(recipientId){\n    let consumerCart = new Cart();\n    let consumer = getData(recipientId, 'consumer');\n    let address = getData(recipientId, 'address');\n    let cart = getData(recipientId, 'cart');\n    let paymentMethod = getData(recipientId, 'paymentMethod');\n    let items = [];\n    let item;\n\n    for(let [id, properties] of cart.items){\n\n        item = new OrderItem();\n\n        if(properties.hasOwnProperty('id')){\n            item.set('id', properties.id);\n        }\n\n        item.set('product', {\n            __type: \"Pointer\",\n            className: \"Product\",\n            objectId: id\n        });\n        item.set('price', properties.price);\n        item.set('amount', properties.quantity);\n        item.set('modifiers', properties.modifiers);\n        item.set('modifiersGroups', []);\n        items.push(item);\n    }\n\n    Parse.Object.saveAll(items, {\n        success: function(result) {\n            let itemsPointers = [];\n            for(let item of result){\n                let itemId = item.get('product').objectId;\n                cart.items.get(itemId).id = item.id;\n\n                itemsPointers.push({\"__type\":\"Pointer\", \"className\": \"OrderItem\", \"objectId\": item.id})\n            }\n\n            if(cart.hasOwnProperty('id')){\n                consumerCart.set('id', cart.id);\n            }\n\n            if(typeof paymentMethod != 'undefined'){\n                consumerCart.set('paymentMethod', paymentMethod.method)\n            }\n\n            consumerCart.set('consumerAddress', {\n                __type: \"Pointer\",\n                className: \"ConsumerAddress\",\n                objectId: address.objectId\n            });\n            consumerCart.set('consumer', {\n                __type: \"Pointer\",\n                className: \"Consumer\",\n                objectId: consumer.objectId\n            });\n            consumerCart.set('items', itemsPointers);\n\n            consumerCart.save(undefined, {\n                success: function(result) {\n                    cart['id'] = result.id;\n                    cart['rawParseObject'] = result;\n                    cart['itemsPointers'] = itemsPointers;\n                },\n                error: function(user, error) {\n                    console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction saveOrder(recipientId){\n    let order = new Order();\n    let consumer = getData(recipientId, 'consumer');\n    let customer = getData(recipientId, 'customer');\n    let cart = getData(recipientId, 'cart');\n    let address = getData(recipientId, 'address');\n    let paymentMethod = getData(recipientId, 'paymentMethod');\n    let pointSale = getData(recipientId, 'pointSale');\n    let state0 = orderStates.get(0);\n    let total = 0 ;\n\n    cart.items.forEach(function(value, key){\n        total += value.quantity * value.price;\n    });\n\n    order.set('consumer', { __type: 'Pointer', className: 'Consumer', objectId: consumer.objectId });\n    order.set('consumerAddress', { __type: 'Pointer', className: 'ConsumerAddress', objectId: address.objectId });\n    order.set('pointSale', { __type: 'Pointer', className: 'CustomerPointSale', objectId: pointSale.objectId });\n    order.set('state', { __type: 'Pointer', className: 'OrderState', objectId: state0.objectId });\n    order.set('items', cart.itemsPointers);\n    order.set('deliveryCost', pointSale.deliveryCost);\n    order.set('total', total);\n    order.set('paymentMethod', paymentMethod.method);\n    order.set('name', consumer.name);\n    order.set('email', consumer.email);\n    order.set('phone', consumer.phone);\n    order.set('platform', 'Bot');\n\n    order.save(undefined, {\n        success: function(order) {\n\n            store.dispatch(Actions.setOrder(recipientId, order)).then(() => {\n                clearCart(recipientId);\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n            console.log(error);\n        }\n    });\n}\n\nfunction sendPurchaseOptions(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tenemos las siguientes opciones disponibles:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver categorias\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver carrito\",\n                    \"payload\":\"SendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendEmptyCartOptions(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tenemos las siguientes opciones disponibles:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver categorias\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Mis órdenes\",\n                    \"payload\":\"SendOrders\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCart(recipientId){\n    authentication(recipientId).then( () =>{\n        let user = getData(recipientId, 'user');\n        let customer = getData(recipientId, 'customer');\n        let consumer = getData(recipientId, 'consumer');\n        let cart = getData(recipientId, 'cart');\n        let address = getData(recipientId, 'address');\n        let customer_image_url;\n\n        if(typeof customer != 'undefined'){\n            customer_image_url = customer.image.url;\n        }\n\n        if(cart == undefined){\n            cart = createCart(recipientId);\n        }\n\n        let items = cart.items;\n\n        bot.sendTypingOn(recipientId);\n\n        let elements = [];\n        let element = {};\n        let total = 0;\n        let orderLimit = items.size;\n        let ind = 0;\n        let image;\n        let image_url;\n\n        if(orderLimit == 0){\n            renderCartEmpty(recipientId).then(()=>{\n                sendEmptyCartOptions(recipientId);\n            });\n        }\n        else{\n            items.forEach(function(value, key){\n                let product = new Parse.Query(Product);\n\n                product.get(key, {\n                    success: function (item) {\n                        image = item.get('image');\n                        image_url = customer_image_url\n                        if(image){\n                            image_url = image.url();\n                        }\n\n                        element = {};\n                        element['title'] = item.get('name');\n                        element['subtitle'] = item.get('description');\n                        element['quantity'] = value.quantity;\n                        element['price'] = parseInt(item.get('priceDefault'));\n                        element['currency'] = \"COP\";\n                        element['image_url'] = image_url;\n\n                        elements.push(element);\n                        total += element['quantity']*element['price'];\n\n                        ind++;\n\n                        if(ind == orderLimit){\n                            renderCart(recipientId, cart.id, elements, total)\n                        }\n                    },\n                    error: function (error) {\n                        alert(\"Error: \" + error.code + \" \" + error.message);\n                    }\n                })\n            });\n        }\n    });\n}\n\nfunction renderCart(recipientId, cartId, elements, total){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let address = getData(recipientId, 'address');\n    let pointSale = getData(recipientId, 'pointSale');\n    let payment_method = getData(recipientId, 'payment_method');\n    let addressData = undefined;\n\n    if(typeof payment_method == 'undefined'){\n        payment_method = {name: 'Sin definir'}\n    }\n\n    if(typeof address != 'undefined'){\n        addressData = {\n            street_1: address.address ? address.address : 'Dirección no definida',\n            street_2: address.description ? address.description : 'Sin complemento',\n            city: address.city ? address.city : 'No definida',\n            postal_code: address.postalCode ? address.postalCode : 'No definido',\n            state: address.state ? address.state : 'No definido',\n            country: address.countryCode ? address.countryCode : 'No definido'\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message:{\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"receipt\",\n                    recipient_name: user.first_name+\" \"+user.last_name,\n                    order_number: cartId,\n                    currency: \"COP\",\n                    payment_method: payment_method.name,\n                    timestamp: Math.trunc(Date.now()/1000).toString(),\n                    elements: elements,\n                    address: addressData,\n                    summary: {\n                        subtotal: total,\n                        shipping_cost: pointSale.deliveryCost,\n                        total_cost: total+pointSale.deliveryCost\n                    }\n                }\n            },\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir Pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Modificar carrito\",\n                    \"payload\":\"SendCartDetails\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Borrar carrito\",\n                    \"payload\": \"ClearAndSendCart\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction sendCartDetails(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderCartDetails(recipientId).then(()=>{\n        renderEditCartOptions(recipientId)\n    });\n}\n\nfunction renderCartDetails(recipientId){\n    let cart = getData(recipientId, 'cart');\n    let customer = getData(recipientId, 'customer');\n    let consumer = getData(recipientId, 'consumer');\n    let image_url = customer.image.url;\n    let items = cart.items;\n    let promises = [];\n\n    items.forEach(function(value, key) {\n        if (promises.length <= bot.limit) {\n            promises.push(new Parse.Query(Product).get(key).then(product => {\n                let image = product.get('image');\n                if(image){\n                    image_url = image.url();\n                }\n\n                return {\n                    \"title\": product.get('name')+\": $\"+value.price,\n                    \"subtitle\": \"Cantidad solicitada: \"+value.quantity,\n                    \"image_url\": image_url,\n                    \"buttons\": [\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Quitar\",\n                            \"payload\": \"RemoveProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Aumentar 1\",\n                            \"payload\": \"IncreaseOneProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Disminuir 1\",\n                            \"payload\": \"DecreaseOneProduct-\" + key\n                        }\n                    ]\n                };\n            }));\n        }\n    });\n\n    return Parse.Promise.when(promises).then(function(elements) {\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\":{\n                    \"type\": \"template\",\n                    \"payload\":{\n                        \"template_type\": \"generic\",\n                        \"elements\": elements\n                    }\n                }\n            }\n        };\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData)\n    });\n}\n\nfunction renderEditCartOptions(recipientId){\n\n    let messageData = {\n        \"recipient\": {\n            \"id\": recipientId\n        },\n        \"message\": {\n            \"text\": \"Opciones del carrito:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                }\n            ]\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderCartEmpty(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu carrito de compras está vacío.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction editCart(recipientId){\n    let cart = getData(recipientId, 'cart');\n\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\": {\n                \"type\": \"template\",\n                \"payload\": {\n                    \"template_type\": \"generic\",\n                    \"elements\": [\n                        {\n                            \"title\": \"Opciones\",\n                            \"image_url\": SERVER_URL+\"assets/thinking.jpg\",\n                            \"buttons\": [\n                                {\n                                    \"type\": \"web_url\",\n                                    \"url\": SERVER_URL+\"cart?\"+cart.id,\n                                    \"title\": \"Remover producto\",\n                                    \"webview_height_ratio\": \"full\",\n                                    \"messenger_extensions\": true\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction clearCart(recipientId){\n    let cart = getData(recipientId, 'cart');\n\n    if(typeof cart != 'undefined'){\n        let items = cart.items;\n        cart.itemsPointers = [];\n\n        items.forEach(function(value, key){\n            items.delete(key);\n        });\n    }\n    return Parse.Promise.as()\n}\n\nfunction clearAndSendCart(recipientId){\n    clearCart(recipientId).then(()=>{\n        sendCart(recipientId)\n    });\n}\n\nfunction checkOrder(recipientId){\n    let cart = getData(recipientId, 'cart');\n    let consumer = getData(recipientId, 'consumer');\n    let pointSale = getData(recipientId, 'pointSale');\n    let total = 0;\n\n    cart.items.forEach(function(value, key){\n        total += value.quantity * value.price;\n    });\n\n    if(pointSale.minOrderPrice && pointSale.minOrderPrice > total ){\n        sendMinOrderPriceRestriction(recipientId);\n    }\n    else if(typeof consumer.phone == 'undefined' || consumer.phone == ''){\n        setTelephone(recipientId)\n    }\n    else if(typeof consumer.email == 'undefined' || consumer.email == ''){\n        setEmail(recipientId)\n    }\n    else{\n        checkPayment(recipientId);\n    }\n\n}\n\nfunction checkAddress(recipientId){\n\n}\n\nfunction checkPayment(recipientId){\n    bot.sendTypingOn(recipientId);\n    store.dispatch(Actions.loadPaymentMethods(recipientId)).then(() => {\n        renderCheckPayment(recipientId)\n    });\n}\n\nfunction renderCheckPayment(recipientId){\n    let paymentMethods = getData(recipientId, 'paymentMethods');\n    let quick_replies = [];\n\n    for(let i in paymentMethods){\n\n        quick_replies.push({\n            \"content_type\": \"text\",\n            \"title\": paymentMethods[i].name.substring(0,20),\n            \"payload\": \"Checkout-\"+paymentMethods[i].objectId\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Como vas a pagar tu pedido? (Tu pedido se cobra cuando lo recibes)\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction checkout(recipientId, id){\n    bot.sendTypingOn(recipientId);\n\n    store.dispatch(Actions.setPaymentMethod(recipientId, id)).then(() => {\n        let paymentMethod = getData(recipientId, 'paymentMethod');\n        let paymentFunction = paymentTypes.get(paymentMethod.method.objectId);\n\n        paymentFunction(recipientId);\n    });\n}\n\nfunction sendMinOrderPriceRestriction(recipientId){\n    renderMinOrderPriceRestriction(recipientId).then(()=>{\n        sendPurchaseOptions(recipientId);\n    });\n}\n\nfunction renderMinOrderPriceRestriction(recipientId){\n    let pointSale = getData(recipientId, 'pointSale');\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"El valor minimo de una orden con domicilio es \"+pointSale.minOrderPrice+\", \\npor favor modifica tu pedido para cumplir este requisito\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendScheduleRestriction(recipientId, pointSaleSchedules){\n    let pointSale = getData(recipientId, 'pointSale');\n\n    let days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado', 'Domingo'];\n    let text ='En este momento nuestros puntos de venta estan cerrados, \\npor favor solicita tu domicilio en los siguientes horarios:\\n\\n';\n\n    for(let pointSaleSchedule of pointSaleSchedules) {\n        let daysActive = pointSaleSchedule.get('daysActive');\n        let allDay = pointSaleSchedule.get('allDay');\n\n        for(let dayID in daysActive){\n            if((daysActive.length-1) != dayID){\n                text += days[daysActive[dayID]-1]+\", \"\n            }\n            else{\n                text += \"y \"+days[daysActive[dayID]-1]+\" \"\n            }\n        }\n\n        if(allDay){\n            text += 'las 24 horas\\n'\n        }\n        else{\n            text += \"desde las \"+pointSaleSchedule.get('hourStart')+\" \";\n            text += \"hasta las \"+pointSaleSchedule.get('hourEnd');\n        }\n        text +=\"\\n\"\n    }\n    renderScheduleRestriction(recipientId, text).then(()=>{\n        sendMenu(recipientId)\n    });\n}\n\nfunction renderScheduleRestriction(recipientId, text){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": text\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendCash(recipientId){\n    saveCart(recipientId);\n\n    renderCash(recipientId).then(()=>{\n        orderConfirmation(recipientId);\n    });\n}\n\nfunction renderCash(recipientId){\n    let paymentMethod = getData(recipientId, 'paymentMethod')\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se ha registrado el pago con \"+paymentMethod.name\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction registerCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n    authentication(recipientId).then( () => {\n        let consumer = getData(recipientId, 'consumer');\n\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\": {\n                    \"type\": \"template\",\n                    \"payload\": {\n                        \"template_type\": \"generic\",\n                        \"elements\": [{\n                            \"title\": \"Registro de tarjeta de credito y finalización de tu pedido.\\n\\nEstas de acuerdo?\",\n                            \"image_url\": SERVER_URL + \"assets/images/creditCards.jpg\",\n                            \"subtitle\": \"Por razones de seguridad te redireccionaremos a una página web segura.\",\n                            \"buttons\": [\n                                {\n                                    \"type\": \"web_url\",\n                                    \"title\": \"Si\",\n                                    \"url\": SERVER_URL + \"creditCard?id=\" + consumer.objectId,\n                                    \"webview_height_ratio\": \"full\",\n                                    \"messenger_extensions\": true\n                                },\n                                {\n                                    \"type\": \"postback\",\n                                    \"title\": \"No\",\n                                    \"payload\": \"CancelRegisterCreditCard\"\n                                }]\n                        }]\n                    }\n                }\n            }\n        };\n\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    });\n}\n\nfunction registerCreditCardAndPay(recipientId){\n    bot.setDataBuffer(recipientId, 'creditCardPayload', 'SendCreditCards');\n\n    registerCreditCard(recipientId)\n}\n\nfunction cancelRegisterCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    let userBuffer = bot.buffer[recipientId];\n\n    renderCancelRegisterCreditCard(recipientId).then(()=> {\n        if (typeof userBuffer != 'undefined' && userBuffer.hasOwnProperty('creditCardPayload')) {\n            checkPayment(recipientId);\n        }\n        else{\n            sendAccount(recipientId);\n        }\n    });\n}\n\nfunction renderCancelRegisterCreditCard(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Si no ingresas los datos de tu tarjeta en nuestro sitio seguro, no podras comprar con tarjeta online\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendRegisteredCreditCards(recipientId){\n    bot.sendTypingOn(recipientId);\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n\n    CreditCard.loadInStore(store, recipientId, user).then(() => {\n        let creditCards = getData(recipientId, 'creditCards');\n        if (creditCards.length == 0) {\n            renderNoRegisteredCreditCards(recipientId);\n        }\n        else {\n            renderRegisteredCreditCards(recipientId);\n        }\n    });\n}\n\nfunction renderNoRegisteredCreditCards(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Aun no tienes tarjetas registradas, deseas registrar una tarjeta?\",\n            \"quick_replies\": [\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Si\",\n                    \"payload\":\"RegisterCreditCardAndPay\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"No\",\n                    \"payload\":\"CheckPayment\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderRegisteredCreditCards(recipientId){\n    let creditCards = getData(recipientId, 'creditCards');\n    let quick_replies = [];\n\n    quick_replies.push({\n        \"content_type\": \"text\",\n        \"title\": \"Agregar tarjeta\",\n        \"payload\": \"RegisterCreditCardAndPay\"\n    });\n\n    for(let card of creditCards){\n        if (quick_replies.length < bot.limit) {\n            quick_replies.push({\n                \"content_type\": \"text\",\n                \"title\": card.type+\" \"+card.lastFour,\n                \"payload\": \"PayWithCreditCard-\" + card.lastFour\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Con cual tarjeta quieres pagar?\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction payWithCreditCard(recipientId, creditCardId){\n    bot.sendTypingOn(recipientId);\n\n    orderConfirmation(recipientId)\n}\n\nfunction orderConfirmation(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    saveOrder(recipientId);\n\n    renderOrderConfirmation(recipientId).then(()=>{\n        bot.sendTypingOff(recipientId);\n    });\n}\n\nfunction renderOrderConfirmation(recipientId){\n    let state0 = orderStates.get(0);\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": state0.messagePush+\"\\n\\nEn un momento te estaremos dando información en tiempo real sobre tu pedido\"\n        }\n    };\n\n    return bot.callSendAPI(messageData)\n}\n\nfunction orderState(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderOrderState(recipientId).then(()=>{\n        orderSent(recipientId)\n    });\n}\n\nfunction renderOrderState(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu pedido ha sido Aceptado. \\n\\nLo estan preparando en nuestra sede y te lo enviaremos en aproximadamente 10 minutos\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction orderSent(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderOrderSent(recipientId).then(()=>{\n        serviceRating(recipientId);\n    });\n}\n\nfunction renderOrderSent(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Buenas noticias, Tu pedido ha sido Enviado. \\n\\nHaz click en el mapa para vel tu pedido\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendOrderState(recipientId){\n    let orderState = getData(recipientId, 'orderState');\n    bot.sendTypingOn(recipientId);\n\n\n    renderOrderState(recipientId).then(()=>{\n        if(orderState.order == 5){\n            serviceRating(recipientId);\n        }\n    });\n}\n\nfunction renderOrderState(recipientId){\n    let orderState = getData(recipientId, 'orderState');\n    if(orderState.order == 6){\n        return Parse.Promise.as()\n    }\n    else{\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": orderState.messagePush\n            }\n        };\n        bot.sendTypingOff(recipientId);\n\n        return bot.callSendAPI(messageData);\n    }\n}\n\nfunction serviceRating(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Califica tu experiencia para ayudarnos a mejorar. \\n\\nDe 1 a 5 cuantas extrellas merece nuestro servicio?\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"5 (Excelente)\",\n                    \"payload\":\"SetScore-5\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"4 (Bien)\",\n                    \"payload\":\"SetScore-4\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"3 (Regular)\",\n                    \"payload\":\"SetScore-3\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Mal)\",\n                    \"payload\":\"SetScore-2\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Muy mal)\",\n                    \"payload\":\"SetScore-1\"\n                },\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setScore(recipientId, score){\n    let order = getData(recipientId, 'order');\n\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('rateOrder', { orderId: order.objectId, score: Number(score), comment: ''}).then(\n        function(result){\n            thank(recipientId)\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n}\n\nfunction thank(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Gracias, esperamos tener el gusto de atenderle nuevamente\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction searchProducts(recipientId, query, index){\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('search', { businessId: BUSINESS_ID, q: query }).then(\n        function(result){\n            if(result.length == 0){\n                renderSearchEmpty(recipientId);\n            }\n            else if(result.length == 1 && result[0].type == 'Category'){\n                sendProducts(recipientId, result[0].id, 0)\n            }\n            else{\n                if(index == undefined)\n                    index = 0;\n                else if( typeof index == 'string')\n                    index = parseInt(index);\n\n                if(index == 0){\n                    renderSearchInitial(recipientId);\n                    bot.sendTypingOn(recipientId);\n                }\n\n                splitSearchResult(recipientId, result, index).then(elements => {\n                    let idx = Object.keys(result).length;\n                    let buttons = [];\n                    let catIni = (index+1)*bot.limit;\n                    let catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n                    if(idx > (index+1)*bot.limit){\n                        buttons.push({\n                            type: \"postback\",\n                            title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n                            payload: \"Search-\"+(index+1),\n                        });\n\n                        elements.push({\n                            title: \"Ver más productos \",\n                            subtitle: \"Productos disponibles\",\n                            buttons: buttons\n                        });\n                    }\n\n                    let messageData = {\n                        recipient: {\n                            id: recipientId\n                        },\n                        message: {\n                            attachment: {\n                                type: \"template\",\n                                payload: {\n                                    template_type: \"generic\",\n                                    elements: elements\n                                }\n                            }\n                        }\n                    };\n\n                    bot.sendTypingOff(recipientId);\n                    return bot.callSendAPI(messageData);\n                });\n            }\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        }\n    );\n}\n\nfunction renderSearchInitial(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se han encontrado los siguientes productos:\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderSearchEmpty(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"No se han encontrado productos que coincidan\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction splitSearchResult(recipientId, products, index){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n    let idx = 0;\n    let elements = [];\n    let promises = [];\n\n    products.forEach(function(item){\n        if(item && item.name && item.type == 'Product'){\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                promises.push(new Parse.Query(Product).get(item.id).then(product => {\n                    return extractParseAttributes(product);\n                }));\n                idx = idx+1;\n            }\n        }\n    });\n\n    return Parse.Promise.when(promises).then(function(productObjects) {\n        productObjects.forEach(function(product) {\n            let image = product.image;\n            image_url = (typeof image != 'undefined') ? image.url : customer.image.url;\n            elements.push({\n                title: product.name +\": $\"+ product.priceDefault,\n                subtitle: product.description,\n                image_url: image_url,\n                buttons: [{\n                    type: \"postback\",\n                    title: 'Agregar',\n                    payload: \"AddProduct-\"+product.objectId,\n                },\n                    {\n                        type: \"postback\",\n                        title: 'Ver descripción',\n                        payload: \"SendProductDescription-\"+product.objectId,\n                    }]\n            });\n        })\n        return elements;\n    });\n\n    //    subtitle: item.get('description'),\n}\n\nfunction sendHelp(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderHelp(recipientId).then(()=>{\n        sendContactUs(recipientId);\n    });\n}\n\nfunction renderHelp(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"InOut Bot.\\n\\nTe permite visualizar las opciones de productos, agregarlos al carrito y realizar tu compra por medio del chat de facebook.\\n\\nFuncionalidades disponibles: \\n\\n'Hola', para iniciar la conversación\\n'Pedir Domicilio', si quieres realizar un domicilio\\n'Carrito', para ver el estado actual de tu carrito\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendContactUs(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \" Para mayor información puedes contactarnos en:\\n\\n Web: http://www.inoutdelivery.com/\\n\\n Email: soporte@inoutdelivery.com\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendOrders(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let consumer = getData(recipientId, 'consumer');\n        Parse.Cloud.run('ordersBot', { businessId: BUSINESS_ID, consumerId: consumer.objectId}).then( orders => {\n            store.dispatch(Actions.setOrders(recipientId, orders)).then(() => {\n                renderOrders(recipientId);\n            });\n        }).fail(error => {\n            console.log('error');\n            console.log(error);\n        });\n    });\n}\n\nfunction renderOrders(recipientId){\n    let customer = getData(recipientId, 'customer');\n    let orders = getData(recipientId, 'orders');\n    let elements = [];\n\n    elements.push({\n        \"title\": \"Nueva orden\",\n        \"subtitle\": \"Puedes realizar una orden\",\n        \"image_url\": SERVER_URL+\"assets/images/newOrden.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva orden\",\n                \"payload\": \"NewOrder\"\n            }\n        ]\n    });\n\n    for(let order of orders.ongoing) {\n        if (elements.length < bot.limit){\n            let datetime = DateTime.dateString(order.createdAt);\n            let image_url = customer.image.url;\n            let title = (order.orderNumber)? 'Orden: '+order.orderNumber :  'Orden: '+dateFormat(datetime, \"h:MM:ss TT dd/mm/yyyy\")\n\n            elements.push({\n                \"title\": title,\n                \"subtitle\": 'Estado: '+order.state.name+', Valor: $'+order.total,\n                \"image_url\": image_url,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Ver orden\",\n                        \"payload\": \"SendOrder-\"+order.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Cancelar orden\",\n                        \"payload\": \"CancelOrder-\"+order.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendOrder(recipientId, id){\n    bot.sendTypingOn(recipientId);\n    authentication(recipientId).then( () =>{\n        let orders = getData(recipientId, 'orders');\n        let customer = getData(recipientId, 'customer');\n        let customer_image_url = customer.image.url;\n        let currentOrder;\n        let elements = [];\n        let element;\n        let image_url;\n        let product;\n\n        for(let order of orders.ongoing){\n            if(order.objectId == id){\n                currentOrder = order;\n            }\n        }\n\n        for(let item of currentOrder.items){\n            product = item.product;\n            image_url = customer_image_url;\n\n            if(product.image){\n                image_url = product.image.url;\n            }\n\n            element = {};\n            element['title'] = product.name;\n            element['quantity'] = item.amount;\n            element['price'] = item.price;\n            element['currency'] = \"COP\";\n            element['image_url'] = image_url;\n\n            elements.push(element);\n        }\n\n        renderOrder(recipientId, currentOrder, elements)\n    });\n}\n\nfunction renderOrder(recipientId, order, elements){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let address = order.consumerAddress;\n    let pointSale = order.pointSale;\n    let payment_method = order.paymentMethod;\n    let addressData = undefined;\n\n    if(typeof payment_method == 'undefined'){\n        payment_method = {name: 'Sin definir'}\n    }\n\n    if(typeof address != 'undefined'){\n        addressData = {\n            street_1: address.address ? address.address : 'Dirección no definida',\n            street_2: address.description ? address.description : 'Sin complemento',\n            city: address.city ? address.city : 'No definida',\n            postal_code: address.postalCode ? address.postalCode : 'No definido',\n            state: address.state ? address.state : 'No definido',\n            country: address.countryCode ? address.countryCode : 'No definido'\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message:{\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"receipt\",\n                    recipient_name: user.first_name+\" \"+user.last_name,\n                    order_number: order.objectId,\n                    currency: \"COP\",\n                    payment_method: payment_method.name,\n                    timestamp: Math.trunc(Date.now()/1000).toString(),\n                    elements: elements,\n                    address: addressData,\n                    summary: {\n                        subtotal: order.total,\n                        shipping_cost: pointSale.deliveryCost,\n                        total_cost: order.total+pointSale.deliveryCost\n                    }\n                }\n            },\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Nueva orden\",\n                    \"payload\":\"NewOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver órdenes\",\n                    \"payload\":\"SendOrders\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Cancelar orden\",\n                    \"payload\":\"CancelOrder-\"+order.objectId\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction newOrder(recipientId){\n    clearCart(recipientId).then(()=>{\n        sendCart(recipientId);\n        sendAddressesWithTitle(recipientId);\n    });\n\n}\n\nfunction cancelOrder(recipientId, id){\n    Parse.Cloud.run('changeStatusOrder', { status: \"canceledByUser\", orderId: id}).then( () => {\n        renderCancelOrder(recipientId).then(()=>{\n            sendOrders(recipientId);\n        });\n    }).fail(error => {\n        console.log('error');\n        console.log(error);\n    });\n}\n\nfunction renderCancelOrder(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La orden ha sido cancelada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendAccount(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( ()=> {\n        renderAccount(recipientId)\n    });\n}\n\nfunction renderAccount(recipientId){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let elements = [{\n        \"title\": 'Ver direcciones',\n        \"subtitle\": 'Editar y eliminar direcciones',\n        \"image_url\": SERVER_URL+\"assets/images/addresses.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": 'Ver direcciones',\n                \"payload\": \"SendAddresses\"\n            }\n        ]\n    },{\n        \"title\": 'Ver tarjetas de credito',\n        \"subtitle\": 'Editar y eliminar tarjetas de credito',\n        \"image_url\": SERVER_URL+\"assets/images/creditCards.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": 'Ver tarjetas',\n                \"payload\": \"SendCreditCards\"\n            }\n        ]\n    }];\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderYouAreWelcome(recipientId){\n    bot.sendTypingOff(recipientId);\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"De nada, gracias por usar nuestros servicios\"\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction addCreditCard(recipientId, token, data){\n    console.log('addCreditCard');\n    let expiration = data['expiry'].replace(/\\s+/g,\"\").split('/');\n\n    return rp({\n        uri: PARSE_SERVER_URL+'/functions/addCreditCard',\n        headers: {\n            'Content-Type': 'text/plain;charset=UTF-8',\n            'X-Parse-Application-Id': PARSE_APP_ID,\n            'X-Parse-Session-Token': token\n        },\n        method: 'POST',\n        json: { \"number\": data['number'].replace(/\\s+/g,\"\"),\n            \"holderName\": data['holderName'],\n            \"verificationNumber\": data['cvc'],\n            \"expirationMonth\": expiration[0],\n            \"expirationYear\": expiration[1]\n        }\n    }).then( body => {\n        rp({\n            uri: SERVER_URL+'creditCardRegistered',\n            method: 'POST',\n            json: { \"recipientId\": recipientId}\n        })\n    }).catch(error =>{\n        console.log('error');\n        console.log(error);\n    });\n}\n\nfunction createOrder(recipientId){\n    let userData = getData(recipientId);\n    Object.assign(userData, {'order': new Map()});\n    return getData(recipientId, 'order')\n}\n\nfunction checkSchedulesDeliveryPointSale(recipientId){\n    let pointSale = getData(recipientId, 'pointSale');\n    let params = {\n        pointSale: pointSale.objectId,\n        date: (new Date()).toJSON().slice(0, 10)\n    };\n\n    return Parse.Cloud.run('getSchedulesDeliveryPointSale', params).then((result) => {\n        return result;\n    }).fail(error => {\n        console.log('Error code: ' + error.message);\n    });\n}\n\nfunction renderShoppingCartOptions(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Opciones del carrito\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Borrar carrito\",\n                    \"payload\": \"ClearAndSendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction updateCart(recipientId){\n    let consumerCart = new Cart();\n    let localCart = getData(recipientId, 'cart');\n\n    new Parse.Query(consumerCart).get(localCart.id).then(\n        cart => {\n            console.log(cart);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    );\n}\n\nfunction setPayment(recipientId, id){\n\n}\n\nfunction sendRegisterFacebookUser(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Registro exitoso.\",\n\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nbot.app.get('/login', function(req, res) {\n    res.sendFile(path.join(__dirname+'/views/login.html'));\n});\n\nbot.app.post('/registerUser', function (req, res) {\n    let data = req.body;\n\n    signUp(data.psid, data.uid, data.accessToken).then(user =>{\n        sendMenu(data.psid);\n    });\n\n    res.status(200).end();\n});\n\nbot.app.get('/creditCard', function(req, res) {\n    console.log('creditCard');\n    res.sendFile(path.join(__dirname+'/views/cardForm.html'));\n});\n\nbot.app.post('/registerCreditCard', function (req, res) {\n    console.log('registerCreditCard');\n    let data = req.body;\n    let consumerID = data['consumerID'];\n\n    new Parse.Query(Consumer).get(consumerID).then(consumer => {\n        if(consumer){\n            new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                let username = user.get('username');\n                let recipientId = consumer.get('conversationId');\n\n                Parse.User.logIn(username, username, {\n                    success: function(userData) {\n                        addCreditCard(recipientId, userData.getSessionToken(), data)\n                    },\n                    error: function(user, error) {\n                        console.log('error');\n                        console.log(error);\n                    }\n                });\n            });\n\n            res.sendFile(path.join(__dirname+'/views/cardRegistered.html'));\n        }\n    },\n    (object, error) => {\n        console.log(error);\n    });\n});\n\nbot.app.post('/creditCardRegistered', function (req, res) {\n    console.log('creditCardRegistered');\n    let data = req.body;\n    let userBuffer = bot.buffer[data.recipientId];\n\n    if (typeof userBuffer != 'undefined') {\n        if (userBuffer.creditCardPayload == 'SendCreditCards') {\n            sendRegisteredCreditCards(data.recipientId);\n            delete userBuffer.creditCardPayload\n        }\n        else {\n            sendCreditCards(data.recipientId)\n        }\n    }\n    else {\n        sendCreditCards(data.recipientId)\n    }\n})\n\nbot.app.post('/changeOrderState', function (req, res) {\n    console.log('changeOrderState');\n    let data = req.body;\n\n    new Parse.Query(Consumer).get(data['consumerID']).then(consumer => {\n            if(consumer){\n                new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                    let username = user.get('username');\n                    let recipientId = consumer.get('conversationId');\n\n                    new Parse.Query(OrderState).get(data['stateID']).then(orderState => {\n                        store.dispatch(Actions.setOrderState(recipientId, orderState)).then(() => {\n                            sendOrderState(recipientId);\n                        })\n                    })\n                    .fail(error => {\n                        console.log('Error code: ' + error.message);\n                    });\n                });\n            }\n        },\n        (object, error) => {\n            console.log(error);\n        });\n\n    res.json({result: 'OK'});\n});\n\nlet paymentTypes = new Map();\n\nnew Parse.Query(PaymentMethod).find().then(methods => {\n    for(let method of methods){\n        let tmpMethod = extractParseAttributes(method);\n        if(tmpMethod.objectId == 'Nn0joKC5VK'){\n            paymentTypes.set('Nn0joKC5VK', sendCash);\n        }\n        else if(tmpMethod.objectId == 'UdK0Ifc4IF'){\n            paymentTypes.set('UdK0Ifc4IF', sendCash);\n        }\n        else if(tmpMethod.objectId == 'CHzoYrEtiY'){\n            paymentTypes.set('CHzoYrEtiY', sendRegisteredCreditCards);\n        }\n    }\n},\n(object, error) => {\n    console.log(error);\n});\n\nlet orderStates = new Map();\n\norderStates.set('Nn0joKC5VK', sendCash);\n\nnew Parse.Query(OrderState).find().then( states => {\n    for(let state of states){\n        orderStates.set(state.get('order'), extractParseAttributes(state));\n    }\n},\n(object, error) => {\n    console.log(error);\n});\n\nlet creditCardImages = new Map();\n\ncreditCardImages.set('VISA', 'assets/images/visaCard.jpg');\ncreditCardImages.set('MASTERCARD', 'assets/images/masterCard.jpg')\ncreditCardImages.set('AMERICAN', 'assets/images/americanCard.jpg')\ncreditCardImages.set('DEFAULT', 'assets/images/creditCards.jpg')\n\n\nstore.dispatch({type: types.APP_LOADED});\n\nmodule.exports = {store, getData}"]}