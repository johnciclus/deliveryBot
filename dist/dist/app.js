'use strict';var _typeof2=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==="undefined"?"undefined":_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==="undefined"?"undefined":_typeof2(obj);};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _bot=require('./bot');var bot=_interopRequireWildcard(_bot);var _actionTypes=require('./constants/actionTypes');var types=_interopRequireWildcard(_actionTypes);var _index=require('./actions/index');var Actions=_interopRequireWildcard(_index);var _parseUtils=require('./parseUtils');var _localStore=require('./localStore');var _ParseModels=require('./models/ParseModels');var _config=require('config');var _config2=_interopRequireDefault(_config);var _requestPromise=require('request-promise');var _requestPromise2=_interopRequireDefault(_requestPromise);var _promise=require('promise');var _promise2=_interopRequireDefault(_promise);var _objectAssign=require('object-assign');var _objectAssign2=_interopRequireDefault(_objectAssign);var _geocoder=require('geocoder');var _geocoder2=_interopRequireDefault(_geocoder);var _path=require('path');var _path2=_interopRequireDefault(_path);var _datetimeConverterNodejs=require('datetime-converter-nodejs');var _datetimeConverterNodejs2=_interopRequireDefault(_datetimeConverterNodejs);var _dateformat=require('dateformat');var _dateformat2=_interopRequireDefault(_dateformat);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}var SERVER_URL=process.env.SERVER_URL?process.env.SERVER_URL:_config2.default.get('SERVER_URL');var PARSE_APP_ID=process.env.PARSE_APP_ID?process.env.PARSE_APP_ID:_config2.default.get('PARSE_APP_ID');var PARSE_SERVER_URL=process.env.PARSE_SERVER_URL?process.env.PARSE_SERVER_URL:_config2.default.get('PARSE_SERVER_URL');var PARSE_CLIENT_KEY=process.env.PARSE_CLIENT_KEY?process.env.PARSE_CLIENT_KEY:_config2.default.get('PARSE_CLIENT_KEY');var FACEBOOK_APP_ID=process.env.FACEBOOK_APP_ID?process.env.FACEBOOK_APP_ID:_config2.default.get('FACEBOOK_APP_ID');var GOOGLE_MAPS_URL=process.env.GOOGLE_MAPS_URL?process.env.GOOGLE_MAPS_URL:_config2.default.get('GOOGLE_MAPS_URL');var GOOGLE_MAPS_KEY=process.env.GOOGLE_MAPS_KEY?process.env.GOOGLE_MAPS_KEY:_config2.default.get('GOOGLE_MAPS_KEY');var BUSINESS=_config2.default.get('BUSINESS');bot.rules.set('hola',sendMenu);bot.rules.set('iniciar',sendMenu);bot.rules.set('empezar',sendMenu);bot.rules.set('comenzar',sendMenu);bot.rules.set('buenos dias',sendMenu);bot.rules.set('buenas tardes',sendMenu);bot.rules.set('menú',sendMenu);bot.rules.set('pedir domicilio',sendAddressesWithTitle);bot.rules.set('carrito',sendCart);bot.rules.set('cuenta',sendCart);bot.rules.set('mi orden',sendOrders);bot.rules.set('mis órdenes',sendOrders);bot.rules.set('mi dirección',sendAddresses);bot.rules.set('mis direcciones',sendAddresses);bot.rules.set('nueva dirección',newAddress);bot.rules.set('agregar dirección',newAddress);bot.rules.set('mi cuenta',sendAccount);bot.rules.set('mi tarjeta',sendCreditCards);bot.rules.set('mis tarjetas',sendCreditCards);bot.rules.set('nueva tarjeta',registerCreditCard);bot.rules.set('agregar tarjeta',registerCreditCard);bot.rules.set('ayuda',sendHelp);bot.rules.set('help',sendHelp);bot.rules.set('gracias',sendYouAreWelcome);bot.payloadRules.set('Greeting',sendMenu);bot.payloadRules.set('SendAddressesWithTitle',sendAddressesWithTitle);bot.payloadRules.set('SendAddresses',sendAddresses);bot.payloadRules.set('NewAddress',newAddress);bot.payloadRules.set('SetAddressComplement',setAddressComplement);bot.payloadRules.set('ConfirmAddress',confirmAddress);bot.payloadRules.set('SetAddress',setAddress);bot.payloadRules.set('EditAddress',editAddress);bot.payloadRules.set('RemoveAddress',removeAddress);bot.payloadRules.set('SendCategories',sendCategories);bot.payloadRules.set('SendProducts',sendProducts);bot.payloadRules.set('AddProduct',addProduct);bot.payloadRules.set('AddModifier',addModifier);bot.payloadRules.set('RemoveProduct',removeProduct);bot.payloadRules.set('IncreaseOneProduct',increaseOneProduct);bot.payloadRules.set('DecreaseOneProduct',decreaseOneProduct);bot.payloadRules.set('SendProductDescription',sendProductDescription);bot.payloadRules.set('SendContinueOrder',sendContinueOrder);bot.payloadRules.set('Search',searchProducts);bot.payloadRules.set('SendCart',sendCart);bot.payloadRules.set('SendCartDetails',sendCartDetails);bot.payloadRules.set('EditCart',editCart);bot.payloadRules.set('ClearCart',clearCart);bot.payloadRules.set('ClearAndSendCart',clearAndSendCart);bot.payloadRules.set('SendPurchaseOptions',sendPurchaseOptions);bot.payloadRules.set('Checkout',checkout);bot.payloadRules.set('CheckPayment',checkPayment);bot.payloadRules.set('CheckAddress',checkAddress);bot.payloadRules.set('CheckOrder',checkOrder);bot.payloadRules.set('RegisterCreditCard',registerCreditCard);bot.payloadRules.set('RegisterCreditCardAndPay',registerCreditCardAndPay);bot.payloadRules.set('SendRegisteredCreditCards',sendRegisteredCreditCards);bot.payloadRules.set('CancelRegisterCreditCard',cancelRegisterCreditCard);bot.payloadRules.set('PayWithCreditCard',payWithCreditCard);bot.payloadRules.set('SendOrders',sendOrders);bot.payloadRules.set('SendOrder',sendOrder);bot.payloadRules.set('NewOrder',newOrder);bot.payloadRules.set('CancelOrder',cancelOrder);bot.payloadRules.set('SendCreditCards',sendCreditCards);bot.payloadRules.set('RemoveCreditCard',removeCreditCard);bot.payloadRules.set('SetScore',setScore);bot.payloadRules.set('SendAccount',sendAccount);bot.payloadRules.set('SendHelp',sendHelp);bot.payloadRules.set('CustomerService',sendHelp);bot.defaultSearch=searchProducts;var initialState={userData:{},paymentTypes:{'Nn0joKC5VK':sendCash,'UdK0Ifc4IF':sendCash,'CHzoYrEtiY':sendRegisteredCreditCards},creditCardImages:{'VISA':'assets/images/visaCard.jpg','MASTERCARD':'assets/images/masterCard.jpg','AMERICAN':'assets/images/americanCard.jpg','DEFAULT':'assets/images/creditCards.jpg'}};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments[1];console.log('ACTION');console.log(action);var data=action.data;if(data&&data.hasOwnProperty('recipientId')){if(typeof state.userData[data.recipientId]=='undefined'){state.userData[data.recipientId]={};}}switch(action.type){case types.APP_LOADED:{console.log('Application is running on port',bot.app.get('port'));return _extends({},state);}case types.CUSTOMER_LOADED:{var customer=(0,_parseUtils.extractParseAttributes)(data.customer);(0,_objectAssign2.default)(state.userData[data.recipientId],{customer:customer});return _extends({},state);}case types.CONSUMER_LOADED:{var consumer=(0,_parseUtils.extractParseAttributes)(data.consumer);(0,_objectAssign2.default)(state.userData[data.recipientId],{consumer:consumer});return _extends({},state);}case types.USER_LOADED:{var user=(0,_parseUtils.extractParseAttributes)(data.user);(0,_objectAssign2.default)(state.userData[data.recipientId],{user:user});return _extends({},state);}case types.CONSUMER_ADDRESSES_LOADED:{var addresses=data.addresses.map(function(a){return(0,_parseUtils.extractParseAttributes)(a);});(0,_objectAssign2.default)(state.userData[data.recipientId],{addresses:addresses});return _extends({},state);}case types.SET_CURRENT_ADDRESS:{var address=(0,_parseUtils.extractParseAttributes)(data.address);(0,_objectAssign2.default)(state.userData[data.recipientId],{address:address});return _extends({},state);}case types.PAYMENT_METHODS_LOADED:{var paymentMethods=data.paymentMethods.map(function(p){return(0,_parseUtils.extractParseAttributes)(p);});(0,_objectAssign2.default)(state.userData[data.recipientId],{paymentMethods:paymentMethods});return _extends({},state);}case types.SET_PAYMENT_METHOD:{var paymentMethod=(0,_parseUtils.extractParseAttributes)(data.paymentMethod);(0,_objectAssign2.default)(state.userData[data.recipientId],{paymentMethod:paymentMethod});return _extends({},state);}case types.SET_ORDERS:{var ongoing=data.orders.ongoing.map(function(a){return(0,_parseUtils.extractParseAttributes)(a);});var delivered=data.orders.delivered.map(function(a){return(0,_parseUtils.extractParseAttributes)(a);});(0,_objectAssign2.default)(state.userData[data.recipientId],{orders:{ongoing:ongoing,delivered:delivered}});return _extends({},state);}case types.CONSUMER_UPDATED:{return _extends({},state);}case types.CONSUMER_NOT_FOUND:{return _extends({},state);}case types.CONSUMER_ORDERS_LOADED:{var orders=data.orders.map(function(a){return(0,_parseUtils.extractParseAttributes)(a);});(0,_objectAssign2.default)(state.userData[data.recipientId],{orders:orders});return _extends({},state);}case types.USER_CREDITCARDS_LOADED:{var creditCards=data.creditCards.map(function(a){return(0,_parseUtils.extractParseAttributes)(a);});(0,_objectAssign2.default)(state.userData[data.recipientId],{creditCards:creditCards});return _extends({},state);}case types.SET_CUSTOMER_POINT_SALE:{var pointSale=(0,_parseUtils.extractParseAttributes)(data.pointSale);(0,_objectAssign2.default)(state.userData[data.recipientId],{pointSale:pointSale});return _extends({},state);}case types.SET_ORDER:{var order=(0,_parseUtils.extractParseAttributes)(data.order);(0,_objectAssign2.default)(state.userData[data.recipientId],{order:order});return _extends({},state);}case types.SET_USER:{var _user=(0,_parseUtils.extractParseAttributes)(data.user);(0,_objectAssign2.default)(state.userData[data.recipientId],{user:_user});return _extends({},state);}case types.SET_CONSUMER:{var _consumer=(0,_parseUtils.extractParseAttributes)(data.consumer);(0,_objectAssign2.default)(state.userData[data.recipientId],{consumer:_consumer});return _extends({},state);}case types.SET_CUSTOMER:{var _customer=(0,_parseUtils.extractParseAttributes)(data.customer);(0,_objectAssign2.default)(state.userData[data.recipientId],{customer:_customer});return _extends({},state);}case types.SET_ORDER_STATE:{var orderState=(0,_parseUtils.extractParseAttributes)(data.orderState);(0,_objectAssign2.default)(state.userData[data.recipientId],{orderState:orderState});return _extends({},state);}default:return state;}};(0,_localStore.createLocalStore)(reducer);bot.app.get('/login',function(req,res){res.sendFile(_path2.default.join(__dirname+'/views/login.html'));});bot.app.post('/registerUser',function(req,res){var data=req.body;signUp(data.psid,data.psid,data.uid,data.accessToken).then(function(user){sendMenu(data.psid);});res.status(200).end();});bot.app.get('/creditCard',function(req,res){res.sendFile(_path2.default.join(__dirname+'/views/cardForm.html'));});bot.app.post('/registerCreditCard',function(req,res){var data=req.body;var consumerID=data['consumerID'];new Parse.Query(_ParseModels.Consumer).get(consumerID).then(function(consumer){if(consumer){new Parse.Query(_ParseModels.User).get(consumer.get('user').id).then(function(user){var username=user.get('username');var recipientId=consumer.get('recipientId');var senderId=consumer.get('senderId');Parse.User.logIn(username,username,{success:function success(userData){addCreditCard(recipientId,senderId,userData.getSessionToken(),data);},error:function error(user,_error){console.log('error');console.log(_error);}});});res.sendFile(_path2.default.join(__dirname+'/views/cardRegistered.html'));}},function(object,error){console.log(error);});});bot.app.post('/creditCardRegistered',function(req,res){var data=req.body;var userBuffer=bot.buffer[data.recipientId];if(typeof userBuffer!='undefined'){if(userBuffer.creditCardPayload=='SendCreditCards'){sendRegisteredCreditCards(data.recipientId,data.senderId);delete userBuffer.creditCardPayload;}else{sendCreditCards(data.recipientId,data.senderId);}}else{sendCreditCards(data.recipientId,data.senderId);}});bot.app.post('/changeOrderState',function(req,res){var data=req.body;new Parse.Query(_ParseModels.Consumer).get(data['consumerID']).then(function(consumer){if(consumer){new Parse.Query(_ParseModels.User).get(consumer.get('user').id).then(function(user){var username=user.get('username');var recipientId=consumer.get('recipientId');var senderId=consumer.get('senderId');new Parse.Query(_ParseModels.OrderState).get(data['stateID']).then(function(orderState){store.dispatch(Actions.setOrderState(recipientId,orderState)).then(function(){sendOrderState(recipientId,senderId);});}).fail(function(error){console.log('Error code: '+error.message);});});}},function(object,error){console.log(error);});res.json({result:'OK'});});function signUp(recipientId,senderId,facebookId,conversationToken){return _ParseModels.User.createUser(store,recipientId,facebookId,conversationToken).then(function(){var userObject=(0,_localStore.getData)(recipientId,'user');var user=userObject.rawParseObject;return user.createConsumer(store,recipientId,senderId,conversationToken).then(function(consumer){return new _promise2.default(function(resolve,reject){resolve(userObject);});});});}function login(username,password){return Parse.User.logIn(username,password,{success:function success(user){//let val = JSON.stringify({sessionToken: user.getSessionToken()});
//console.log(val);
return user;},error:function error(user,_error2){console.log('Failed to create new object, with error code: '+_error2.message);}});}function authentication(recipientId,senderId){return getCustomer(recipientId,senderId).then(function(customer){return getUser(recipientId).then(function(user){if(typeof user=='undefined'){//sendSignUp(recipientId)
return _ParseModels.User.createUser(store,recipientId,recipientId,BUSINESS[senderId].PAGE_ACCESS_TOKEN).then(function(){var userObject=(0,_localStore.getData)(recipientId,'user');var user=userObject.rawParseObject;return user.createConsumer(store,recipientId,senderId,BUSINESS[senderId].PAGE_ACCESS_TOKEN).then(function(consumer){return new _promise2.default(function(resolve,reject){resolve(userObject);});});});}else{return getConsumer(recipientId,user.rawParseObject).then(function(consumer){return new _promise2.default(function(resolve,reject){resolve(user);});/*Parse.Promise.as().then(() => {
                        return user;
                    });*/});}//return login(user.username, user.username).then(()=>{
//});
});});}function getCustomer(recipientId,senderId){var customer=(0,_localStore.getData)(recipientId,'customer');if(typeof customer=='undefined'){return _ParseModels.Customer.loadInStore(store,recipientId,BUSINESS[senderId].BUSINESS_ID).then(function(){return(0,_localStore.getData)(recipientId,'customer');});}else{return new _promise2.default(function(resolve,reject){resolve(customer);});}}function getUser(recipientId){var userObj=(0,_localStore.getData)(recipientId,'user');if(typeof userObj=='undefined'){return _ParseModels.User.loadInStore(store,recipientId).then(function(){return(0,_localStore.getData)(recipientId,'user');});}else{return new _promise2.default(function(resolve,reject){resolve(userObj);});}}function getConsumer(recipientId,user){var consumerObj=(0,_localStore.getData)(recipientId,'consumer');if(typeof consumerObj=='undefined'){return _ParseModels.Consumer.loadInStore(store,recipientId,user).then(function(){consumerObj=(0,_localStore.getData)(recipientId,'consumer');if(typeof consumerObj!='undefined'){return new _promise2.default(function(resolve,reject){resolve(consumerObj);});}else{console.log('create consumer');}});}else{return new _promise2.default(function(resolve,reject){resolve(consumerObj);});}}function sendSignUp(recipientId,senderId){var image_url=SERVER_URL+"assets/images/love.jpg";return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,[{"title":"Hola, soy un Bot","subtitle":"Soy tu asistente virtual. Quieres registrarte en nuestro sistema?","image_url":image_url,"buttons":[{"type":"web_url","url":SERVER_URL+"login?psid="+recipientId,"title":"Registrarme","webview_height_ratio":"full","messenger_extensions":true}]}]);});});};function sendMenu(recipientId,senderId){console.log('sendMenu');console.log(recipientId);console.log(senderId);return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var customer=(0,_localStore.getData)(recipientId,'customer');var user=(0,_localStore.getData)(recipientId,'user');var image_url=customer.image.url;return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,[{"title":"Hola "+user.first_name+", Bienvenido a "+customer.name,"subtitle":"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:","image_url":image_url,"buttons":[{"type":"postback","title":"Pedir domicilio","payload":"SendAddressesWithTitle"},{"type":"postback","title":"Servicio al cliente","payload":"CustomerService"}]}]);});});});}function sendAddressesWithTitle(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"A cual dirección vas hacer tu pedido?\n\nPuedes escoger entre agregar una nueva dirección o seleccionar una de tus direcciones guardadas").then(function(){sendAddresses(recipientId,senderId);});});});}function sendAddresses(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var consumer=(0,_localStore.getData)(recipientId,'consumer');_ParseModels.ConsumerAddress.loadInStore(store,recipientId,consumer).then(function(){var addresses=(0,_localStore.getData)(recipientId,'addresses');var elements=[];elements.push({"title":"Nueva dirección","subtitle":"Puedes agregar una nueva dirección","image_url":SERVER_URL+"assets/images/addAddress.jpg","buttons":[{"type":"postback","title":"Nueva dirección","payload":"NewAddress"}]});var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=addresses[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var address=_step.value;if(elements.length<bot.limit){elements.push({"title":address.name,"subtitle":address.address+", "+address.description+", "+address.city+", "+address.state,"image_url":GOOGLE_MAPS_URL+"?center="+address.location.lat+","+address.location.lng+"&zoom=16&size=400x400&markers=color:red%7C"+address.location.lat+","+address.location.lng+"&key="+GOOGLE_MAPS_KEY,"buttons":[{"type":"postback","title":"Seleccionar","payload":"SetAddress-"+address.objectId},{"type":"postback","title":"Modificar","payload":"EditAddress-"+address.objectId},{"type":"postback","title":"Quitar","payload":"RemoveAddress-"+address.objectId}]});}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});});});});}function sendCreditCards(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var state=store.getState();var user=(0,_localStore.getData)(recipientId,'user');var creditCardsImages=state['creditCardImages'];_ParseModels.CreditCard.loadInStore(store,recipientId,user).then(function(){var creditCards=(0,_localStore.getData)(recipientId,'creditCards');var userBuffer=bot.buffer[recipientId];var creditCardImage=void 0;var elements=[];if(typeof userBuffer!='undefined'&&userBuffer.hasOwnProperty('creditCardPayload')){delete userBuffer.creditCardPayload;}elements.push({"title":"Registro de tarjeta","subtitle":"Puedes agregar una tarjeta","image_url":SERVER_URL+"assets/images/creditCards.jpg","buttons":[{"type":"postback","title":"Nueva tarjeta","payload":"RegisterCreditCard"}]});var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=creditCards[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var creditCard=_step2.value;if(elements.length<bot.limit){creditCardImage=creditCardsImages.hasOwnProperty(creditCard.type)?creditCardsImages[creditCard.type]:creditCardsImages['DEFAULT'];elements.push({"title":creditCard.type+' '+creditCard.lastFour,"subtitle":creditCard.cardHolderName,"image_url":SERVER_URL+creditCardImage,"buttons":[{"type":"postback","title":"Quitar","payload":"RemoveCreditCard-"+creditCard.objectId}]});}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});});});});}function newAddress(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){bot.setDataBuffer(recipientId,'addressPayload','NewAddress');writeAddress(recipientId,senderId);});});}function writeAddress(recipientId,senderId){bot.setListener(recipientId,'address','text',addressCheck);bot.setListener(recipientId,'location','attachment',setLocationCheck);return bot.sendQuickReplyMessage(recipientId,senderId,"Puedes escribir o compartir tu ubicación actual?\n\nEjemplo: Calle 67 #52-20, Medellín.\n\nNo olvides escribir la ciudad al final de la dirección.",[{"content_type":"location","title":"Enviar ubicación"}]);}function sendNullMapMessage(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La dirección no ha sido encontrada en Google Maps, por favor intenta de nuevo");});});}function sendMap(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){var userBuffer=bot.buffer[recipientId];return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendImageMessage(recipientId,senderId,GOOGLE_MAPS_URL+"?center="+userBuffer.location.lat+","+userBuffer.location.lng+"&zoom=16&size=400x400&markers=color:red%7C"+userBuffer.location.lat+","+userBuffer.location.lng+"&key="+GOOGLE_MAPS_KEY).then(function(){sendMapConfirmation(recipientId,senderId);});});});}function sendMapConfirmation(recipientId,senderId){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Es correcta?",[{"content_type":"text","title":"Si","payload":"SetAddressComplement"},{"content_type":"text","title":"No","payload":"NewAddress"}]);});}function addressCheck(recipientId,senderId){var userBuffer=bot.buffer[recipientId];_geocoder2.default.geocode(userBuffer.address,function(error,data){if(!error&&data.status=='OK'){setAddressComponetsInBuffer(recipientId,senderId,data.results[0]);}else{console.log('Geocode not found');console.log(error);sendNullMapMessage(recipientId,senderId).then(function(){newAddress(recipientId,senderId);});}});}function setAddressComponetsInBuffer(recipientId,senderId,data){return bot.sendTypingOn(recipientId,senderId).then(function(){var userBuffer=bot.buffer[recipientId];userBuffer.address=data.formatted_address;userBuffer.location=data.geometry.location;var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=data.address_components[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var component=_step3.value;if(component.types.includes('route')){userBuffer.route=component.long_name;}else if(component.types.includes('street_number')){userBuffer.street_number=component.short_name;}else if(component.types.includes('locality')){userBuffer.locality=component.short_name;}else if(component.types.includes('administrative_area_level_1')){userBuffer.state=component.short_name;}else if(component.types.includes('administrative_area_level_2')){userBuffer.administrative_area=component.short_name;}else if(component.types.includes('country')){userBuffer.country=component.long_name;userBuffer.country_code=component.short_name;}else if(component.types.includes('postal_code')){userBuffer.postal_code=component.short_name;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Encontré esta dirección en Google Maps:\n\n"+userBuffer.address).then(function(){sendMap(recipientId,senderId);});});});}function setAddressComplement(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){bot.setListener(recipientId,'complement','text',confirmAddress);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Por favor escribe el complemento de tu dirección actual.\n\nEjemplo: Apto 303, edificio el palmar.\n\nNo olvides colocar el nombre del edificio o del barrio");});});}function confirmAddress(recipientId,senderId){var userBuffer=bot.buffer[recipientId];var addressPayload=userBuffer['addressPayload'];if(addressPayload=='NewAddress'){return bot.sendTypingOn(recipientId,senderId).then(function(){bot.setListener(recipientId,'address_name','text',saveAddress);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Por favor coloca un nombre a esta dirección para guardarla. \n\nEjemplo: casa, apartamento o oficina");});});}else if(addressPayload.startsWith('EditAddress')){return bot.sendTypingOn(recipientId,senderId).then(function(){var data=addressPayload.split('-');var location=new Parse.GeoPoint({latitude:parseFloat(userBuffer.location.lat),longitude:parseFloat(userBuffer.location.lng)});new Parse.Query(_ParseModels.ConsumerAddress).get(data[1]).then(function(consumerAddress){consumerAddress.set('address',userBuffer.route+" # "+userBuffer.street_number);consumerAddress.set('location',location);consumerAddress.set('country',userBuffer.country);consumerAddress.set('countryCode',userBuffer.country_code);consumerAddress.set('postalCode',userBuffer.postal_code);consumerAddress.set('state',userBuffer.state);consumerAddress.set('description',userBuffer.complement);consumerAddress.save(undefined,{success:function success(address){delete userBuffer.address;delete userBuffer.location;delete userBuffer.complement;return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La dirección ha sido actualizada.").then(function(){setAddress(recipientId,senderId,address.id);});});},error:function error(user,_error3){console.log('Failed to create new object, with error code: '+_error3.message);}});});});}}function saveAddress(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){var consumer=(0,_localStore.getData)(recipientId,'consumer');var userBuffer=bot.buffer[recipientId];var location=new Parse.GeoPoint({latitude:parseFloat(userBuffer.location.lat),longitude:parseFloat(userBuffer.location.lng)});var consumerAddress=new _ParseModels.ConsumerAddress();consumerAddress.set('name',userBuffer.address_name);consumerAddress.set('address',userBuffer.route+" # "+userBuffer.street_number);consumerAddress.set('consumer',{__type:"Pointer",className:"Consumer",objectId:consumer.objectId});consumerAddress.set('location',location);consumerAddress.set('city',userBuffer.locality);consumerAddress.set('country',userBuffer.country);consumerAddress.set('countryCode',userBuffer.country_code);consumerAddress.set('postalCode',userBuffer.postal_code);consumerAddress.set('state',userBuffer.state);consumerAddress.set('description',userBuffer.complement);consumerAddress.save(undefined,{success:function success(result){delete userBuffer.address;delete userBuffer.location;delete userBuffer.complement;delete userBuffer['address_name'];return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La dirección ha sido almacenada.").then(function(){setAddress(recipientId,senderId,result.id);});});},error:function error(user,_error4){console.log('Failed to create new object, with error code: '+_error4.message);}});});}function setEmail(recipientId,senderId){bot.setListener(recipientId,'email','text',setEmailCheck);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Por favor escribe tu email:");});}function setEmailCheck(recipientId,senderId){var userBuffer=bot.buffer[recipientId];var consumer=(0,_localStore.getData)(recipientId,'consumer').rawParseObject;consumer.setEmail(userBuffer.email);consumer.saveInStore(store,recipientId).then(function(){delete userBuffer.email;checkOrder(recipientId,senderId);});}function setTelephone(recipientId,senderId){bot.setListener(recipientId,'telephone','text',setTelephoneCheck);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Por favor escribe tu número telefónico:");});}function setTelephoneCheck(recipientId,senderId){var userBuffer=bot.buffer[recipientId];var consumer=(0,_localStore.getData)(recipientId,'consumer').rawParseObject;consumer.setPhone(userBuffer.telephone);consumer.saveInStore(store,recipientId).then(function(){delete userBuffer.telephone;checkOrder(recipientId,senderId);});}function setLocationCheck(recipientId,senderId){var userBuffer=bot.buffer[recipientId];_geocoder2.default.reverseGeocode(userBuffer.location.lat,userBuffer.location.lng,function(error,data){if(!error&&data.status=='OK'){setAddressComponetsInBuffer(recipientId,senderId,data.results[0]);}else{console.log('Geocode not found');console.log(error);sendNullMapMessage(recipientId,senderId).then(function(){newAddress(recipientId,senderId);});}});}function setAddress(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){store.dispatch(Actions.setAddress(recipientId,id)).then(function(){var address=(0,_localStore.getData)(recipientId,'address');Parse.Cloud.run('getProducts',{businessId:BUSINESS[senderId].BUSINESS_ID,lat:address.location.lat,lng:address.location.lng}).then(function(result){var pointSale=result.pointSale;store.dispatch(Actions.setCustomerPointSale(recipientId,pointSale.id)).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Perfecto, ya seleccioné tu dirección para este pedido").then(function(){sendCategories(recipientId,senderId,0);});});});},function(error){if(error.code=='141'){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La dirección seleccionada no está dentro de la cobertura de nuestras sedes, por favor intenta con otra dirección").then(function(){sendAddressesWithTitle(recipientId,senderId);});});}else{console.log('error');console.log(error);}});});});}function editAddress(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){bot.setDataBuffer(recipientId,'addressPayload','EditAddress-'+id);writeAddress(recipientId,senderId);});});}function removeAddress(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){new Parse.Query(_ParseModels.ConsumerAddress).get(id).then(function(consumerAddress){consumerAddress.destroy().then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La dirección ha sido eliminada.").then(function(){sendAddresses(recipientId,senderId);});});});});});}function removeCreditCard(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){new Parse.Query(_ParseModels.CreditCard).get(id).then(function(creditCard){creditCard.destroy().then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"La tarjeta de credito ha sido eliminada.").then(function(){sendCreditCards(recipientId,senderId);});});});});});}function sendCategories(recipientId,senderId,index){return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){Parse.Cloud.run('getProducts',{businessId:BUSINESS[senderId].BUSINESS_ID}).then(function(result){if(result.pointSaleIsOpen){if(typeof index=='undefined')index=0;else if(typeof index=='string')index=parseInt(index);if(index==0){bot.sendTypingOff(recipientId,senderId).then(function(){bot.sendTextMessage(recipientId,senderId,"A continuación te presentamos las categorías de productos disponibles.").then(function(){sendCategoriesDetail(recipientId,senderId,result.categories,index);});});}else{bot.sendTypingOff(recipientId,senderId).then(function(){sendCategoriesDetail(recipientId,senderId,result.categories,index);});}}else{sendScheduleRestriction(recipientId,result.pointSaleSchedules);}},function(error){console.log('error');console.log(error);});});});}function splitCategories(recipientId,categories,index){var customer=(0,_localStore.getData)(recipientId,'customer');var image_url=void 0;var idx=0;var elements=[];categories.forEach(function(item){if(item&&item.get('name')){if(idx>=index*bot.limit&&idx<(index+1)*bot.limit){var image=item.get('image');image_url=typeof image!='undefined'?image.url():customer.image.url;elements.push({title:item.get('name'),image_url:image_url,buttons:[{type:"postback",title:'Ver categoría',payload:"SendProducts-"+item.id+"-0"}]});}idx=idx+1;}});return elements;}function sendCategoriesDetail(recipientId,senderId,categories,index){var elements=splitCategories(recipientId,categories,index);var idx=Object.keys(categories).length;var buttons=[];var catIni=(index+1)*bot.limit;var catFin=idx>catIni+bot.limit?catIni+bot.limit:idx;if(idx>(index+1)*bot.limit){buttons.push({type:"postback",title:"Categorías "+(catIni+1)+"-"+catFin,payload:"SendCategories-"+(index+1)});elements.push({title:"Ver más categorias ",subtitle:"Categorías disponibles",buttons:buttons});}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});}function sendProducts(recipientId,senderId,categoryId,proIdx){return bot.sendTypingOn(recipientId,senderId).then(function(){proIdx=parseInt(proIdx);if(proIdx==0){new Parse.Query(_ParseModels.Category).get(categoryId).then(function(category){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Selecciona "+category.get('name')+":").then(function(){getProducts(recipientId,senderId,categoryId,proIdx);});});},function(object,error){console.log(error);});}else{getProducts(recipientId,senderId,categoryId,proIdx);}});}function getProducts(recipientId,senderId,categoryId,proIdx){Parse.Cloud.run('getProducts',{businessId:BUSINESS[senderId].BUSINESS_ID,category:categoryId}).then(function(result){if(result.hasOwnProperty('categories')){sendCategoriesDetail(recipientId,senderId,result.categories,0);}else{if(result.products.length==0){bot.sendTypingOff(recipientId,senderId).then(function(){bot.sendQuickReplyMessage(recipientId,senderId,"No existen productos en esta categoría",[{"content_type":"text","title":"Seguir pidiendo","payload":"SendContinueOrder"},{"content_type":"text","title":"Ver carrito","payload":"SendCart"}]);});}else{sendProductsDetail(recipientId,senderId,categoryId,result.products,proIdx);}}},function(error){console.log('error');console.log(error);});}function splitProducts(recipientId,products,proIdx){var customer=(0,_localStore.getData)(recipientId,'customer');var image_url=void 0;var idx=0;var elements=[];products.forEach(function(product){if(product&&product.get('name')){if(idx>=proIdx*bot.limit&&idx<(proIdx+1)*bot.limit){var image=product.get('image');image_url=typeof image!='undefined'?image.url():customer.image.url;elements.push({title:product.get('name')+": $"+product.get('priceDefault'),subtitle:product.get('description'),image_url:image_url,buttons:[{type:"postback",title:"Agregar",payload:"AddProduct-"+product.id},{type:"postback",title:'Ver descripción',payload:"SendProductDescription-"+product.id}]});}idx=idx+1;}});return elements;}function sendProductsDetail(recipientId,senderId,categoryId,products,index){var elements=splitProducts(recipientId,products,index);var idx=Object.keys(products).length;var buttons=[];var catIni=(index+1)*bot.limit;var catFin=idx>catIni+bot.limit?catIni+bot.limit:idx;if(idx>(index+1)*bot.limit){buttons.push({type:"postback",title:"Productos "+(catIni+1)+"-"+catFin,payload:"SendProducts-"+categoryId+"-"+(index+1)});elements.push({title:"Ver más productos ",subtitle:"Productos disponibles",buttons:buttons});}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});}function createCart(recipientId){var userData=(0,_localStore.getData)(recipientId);Object.assign(userData,{'cart':{items:new Map()}});return userData.cart;}function addProduct(recipientId,senderId,productId){var cart=(0,_localStore.getData)(recipientId,'cart');if(typeof cart=='undefined'){cart=createCart(recipientId);}var items=cart.items;new Parse.Query(_ParseModels.Product).get(productId).then(function(product){var productObject=(0,_parseUtils.extractParseAttributes)(product);var item=items.get(productId);var promises=[];if(typeof item=='undefined'){items.set(productId,{quantity:1,price:productObject.priceDefault});item=items.get(productId);}else{item.quantity+=1;}if(typeof item.modifiers=='undefined'){item.modifiers=[];}if(typeof productObject.modifiers!='undefined'){productObject.modifiers.forEach(function(obj,index,array){promises.push(new Parse.Query(_ParseModels.Modifier).get(obj.objectId).then(function(modifier){return(0,_parseUtils.extractParseAttributes)(modifier);}));});}Parse.Promise.when(promises).then(function(modifiers){var undefinedModifiers=checkModifiers(recipientId,productId,modifiers);//checkModifiersComplete(recipientId, productId, modifiers).then(result =>{
//    console.log('result: '+result);
//});
if(undefinedModifiers.length>0){//Show multiples modifiers
promises=[];undefinedModifiers[0].items.forEach(function(modifierItem){promises.push(new Parse.Query(_ParseModels.ModifierItem).get(modifierItem.objectId).then(function(modifierItem){return(0,_parseUtils.extractParseAttributes)(modifierItem);}));});Parse.Promise.when(promises).then(function(modifierItems){sendModifierMenu(recipientId,senderId,productId,undefinedModifiers[0],modifierItems);});}else{saveCart(recipientId);sendAddProductNenu(recipientId,senderId,productId);}});},function(object,error){console.log(error);});}function sendAddProductNenu(recipientId,senderId,productId){return new Parse.Query(_ParseModels.Product).get(productId).then(function(product){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"El producto "+product.get('name')+" ha sido agregado.\n\nDeseas seguir pidiendo o ver tu carrito?",[{"content_type":"text","title":"Seguir pidiendo","payload":"SendContinueOrder"},{"content_type":"text","title":"Ver carrito","payload":"SendCart"}]);});},function(object,error){console.log(error);});}function sendContinueOrder(recipientId,senderId){return bot.sendTypingOff(recipientId,senderId).then(function(){bot.sendTextMessage(recipientId,senderId,"Puedes escribir el nombre de un producto, ej: Ensalada mediterranea, o seleccionarlo en el siguiente menú:").then(function(){sendCategories(recipientId,senderId,0);});});}function sendModifierMenu(recipientId,senderId,productId,modifier,items){var quick_replies=[];items.forEach(function(item){if(quick_replies.length<=bot.limit){quick_replies.push({"content_type":"text","title":item.name,"payload":"AddModifier-"+productId+"-"+modifier.objectId+"-"+item.objectId});}});return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Escoge "+modifier.name+":",quick_replies);});}function addModifier(recipientId,senderId,productId,modifierId,itemId){var cart=(0,_localStore.getData)(recipientId,'cart');var items=cart.items;var item=items.get(productId);var orderItemModifier=new _ParseModels.OrderItemModifier();orderItemModifier.set('modifier',{__type:"Pointer",className:"Modifier",objectId:modifierId});orderItemModifier.set('modifierItem',{__type:"Pointer",className:"ModifierItem",objectId:itemId});//orderItemModifier.set('price', itemId.price)
orderItemModifier.save(undefined,{success:function success(result){item.modifiers.push({__type:"Pointer",className:"OrderItemModifier",objectId:result.id});saveCart(recipientId);sendAddProductNenu(recipientId,senderId,productId);},error:function error(user,_error5){console.log('Failed to create new object, with error code: '+_error5.message);}});}function checkModifiers(recipientId,productId,modifiers){var cart=(0,_localStore.getData)(recipientId,'cart');var items=cart.items;var item=items.get(productId);var exist=false;var result=[];modifiers.forEach(function(modifier){exist=false;item.modifiers.forEach(function(itemModifier){console.log(itemModifier.objectId);//exist true
});if(!exist){result.push(modifier);}});return result;}function checkModifiersComplete(recipientId,senderId,productId,modifiers){var cart=(0,_localStore.getData)(recipientId,'cart');var items=cart.items;var item=items.get(productId);var promises=[];console.log(modifiers);console.log(modifiers.length);console.log(cart.items);console.log(item);console.log(item.modifiers.length);if(modifiers.length!=item.modifiers.length){promises=[];modifiers.forEach(function(modifier){modifier.items.forEach(function(modifierItem){promises.push(new Parse.Query(_ParseModels.ModifierItem).get(modifierItem.objectId).then(function(modifierItem){return(0,_parseUtils.extractParseAttributes)(modifierItem);}));});return Parse.Promise.when(promises).then(function(elements){sendModifierMenu(recipientId,productId,modifier,elements);return true;});});}}function removeProduct(recipientId,senderId,productId){var cart=(0,_localStore.getData)(recipientId,'cart');if(cart==undefined){cart=createCart(recipientId);}var items=cart.items;var item=items.get(productId);new Parse.Query(_ParseModels.OrderItem).get(item.id,{success:function success(orderItem){orderItem.destroy({});items.delete(productId);var itemsPointers=[];var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=items[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var _step4$value=_slicedToArray(_step4.value,2),key=_step4$value[0],value=_step4$value[1];itemsPointers.push({"__type":"Pointer","className":"OrderItem","objectId":value.id});}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}cart.itemsPointers=itemsPointers;if(items.size==0){sendCart(recipientId,senderId);}else{sendCartDetails(recipientId,senderId);}},error:function error(orderItem,_error6){console.log('error');console.log(_error6);}});}function increaseOneProduct(recipientId,senderId,productId){var cart=(0,_localStore.getData)(recipientId,'cart');if(cart==undefined){cart=createCart(recipientId);}var items=cart.items;var item=items.get(productId);item.quantity++;new Parse.Query(_ParseModels.OrderItem).get(item.id,{success:function success(orderItem){orderItem.set('amount',item.quantity);orderItem.save();sendCartDetails(recipientId,senderId);},error:function error(orderItem,_error7){console.log('error');console.log(_error7);}});}function decreaseOneProduct(recipientId,senderId,productId){var cart=(0,_localStore.getData)(recipientId,'cart');if(cart==undefined){cart=createCart(recipientId);}var items=cart.items;var item=items.get(productId);item.quantity--;if(item.quantity>0){new Parse.Query(_ParseModels.OrderItem).get(item.id,{success:function success(orderItem){orderItem.set('amount',item.quantity);orderItem.save();sendCartDetails(recipientId,senderId);},error:function error(orderItem,_error8){console.log('error');console.log(_error8);}});}else{removeProduct(recipientId,productId);}}function sendProductDescription(recipientId,senderId,productId){var product=new _ParseModels.Product();new Parse.Query(product).get(productId).then(function(product){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,product.get('name')+": "+product.get('description'),[{"content_type":"text","title":"Agregar","payload":"AddProduct-"+productId},{"content_type":"text","title":"Seguir pidiendo","payload":"SendContinueOrder"},{"content_type":"text","title":"Ver carrito","payload":"SendCart"}]);});},function(object,error){console.log(error);});}function saveCart(recipientId){var consumerCart=new _ParseModels.Cart();var consumer=(0,_localStore.getData)(recipientId,'consumer');var address=(0,_localStore.getData)(recipientId,'address');var cart=(0,_localStore.getData)(recipientId,'cart');var paymentMethod=(0,_localStore.getData)(recipientId,'paymentMethod');var items=[];var item=void 0;var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=cart.items[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var _step5$value=_slicedToArray(_step5.value,2),id=_step5$value[0],properties=_step5$value[1];item=new _ParseModels.OrderItem();if(properties.hasOwnProperty('id')){item.set('id',properties.id);}item.set('product',{__type:"Pointer",className:"Product",objectId:id});item.set('price',properties.price);item.set('amount',properties.quantity);item.set('modifiers',properties.modifiers);item.set('modifiersGroups',[]);items.push(item);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}Parse.Object.saveAll(items,{success:function success(result){var itemsPointers=[];var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=result[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var _item=_step6.value;var itemId=_item.get('product').objectId;cart.items.get(itemId).id=_item.id;itemsPointers.push({"__type":"Pointer","className":"OrderItem","objectId":_item.id});}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}if(cart.hasOwnProperty('id')){consumerCart.set('id',cart.id);}if(typeof paymentMethod!='undefined'){consumerCart.set('paymentMethod',paymentMethod.method);}consumerCart.set('consumerAddress',{__type:"Pointer",className:"ConsumerAddress",objectId:address.objectId});consumerCart.set('consumer',{__type:"Pointer",className:"Consumer",objectId:consumer.objectId});consumerCart.set('items',itemsPointers);consumerCart.save(undefined,{success:function success(result){cart['id']=result.id;cart['rawParseObject']=result;cart['itemsPointers']=itemsPointers;},error:function error(user,_error9){console.log('Failed to create new object, with error code: '+_error9.message);}});},error:function error(user,_error10){console.log('Failed to create new object, with error code: '+_error10.message);}});}function saveOrder(recipientId,senderId){getOrderState(0).then(function(state){var order=new _ParseModels.Order();var consumer=(0,_localStore.getData)(recipientId,'consumer');var customer=(0,_localStore.getData)(recipientId,'customer');var cart=(0,_localStore.getData)(recipientId,'cart');var address=(0,_localStore.getData)(recipientId,'address');var paymentMethod=(0,_localStore.getData)(recipientId,'paymentMethod');var pointSale=(0,_localStore.getData)(recipientId,'pointSale');var total=0;cart.items.forEach(function(value,key){total+=value.quantity*value.price;});order.set('consumer',{__type:'Pointer',className:'Consumer',objectId:consumer.objectId});order.set('consumerAddress',{__type:'Pointer',className:'ConsumerAddress',objectId:address.objectId});order.set('pointSale',{__type:'Pointer',className:'CustomerPointSale',objectId:pointSale.objectId});order.set('state',{__type:'Pointer',className:'OrderState',objectId:state.objectId});order.set('items',cart.itemsPointers);order.set('deliveryCost',pointSale.deliveryCost);order.set('total',total);order.set('paymentMethod',paymentMethod.method);order.set('name',consumer.name);order.set('email',consumer.email);order.set('phone',consumer.phone);order.set('platform','Bot');order.save(undefined,{success:function success(order){store.dispatch(Actions.setOrder(recipientId,order)).then(function(){clearCart(recipientId);});},error:function error(user,_error11){console.log('Failed to create new object, with error code: '+_error11.message);console.log(_error11);}});});}function sendPurchaseOptions(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Tenemos las siguientes opciones disponibles:",[{"content_type":"text","title":"Ver categorias","payload":"SendCategories-0"},{"content_type":"text","title":"Ver carrito","payload":"SendCart"}]);});});}function sendEmptyCartOptions(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Tenemos las siguientes opciones disponibles:",[{"content_type":"text","title":"Ver categorias","payload":"SendCategories-0"},{"content_type":"text","title":"Mis órdenes","payload":"SendOrders"}]);});});}function sendCart(recipientId,senderId){bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var user=(0,_localStore.getData)(recipientId,'user');var customer=(0,_localStore.getData)(recipientId,'customer');var cart=(0,_localStore.getData)(recipientId,'cart');var customer_image_url=void 0;if(typeof customer!='undefined'){customer_image_url=customer.image.url;}if(cart==undefined){cart=createCart(recipientId);}var items=cart.items;var elements=[];var element={};var total=0;var orderLimit=items.size;var ind=0;var image=void 0;var image_url=void 0;if(orderLimit==0){bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Tu carrito de compras está vacío.").then(function(){sendEmptyCartOptions(recipientId,senderId);});});}else{items.forEach(function(value,key){var product=new Parse.Query(_ParseModels.Product);product.get(key,{success:function success(item){image=item.get('image');image_url=customer_image_url;if(image){image_url=image.url();}element={};element['title']=item.get('name');element['subtitle']=item.get('description');element['quantity']=value.quantity;element['price']=parseInt(item.get('priceDefault'));element['currency']="COP";element['image_url']=image_url;elements.push(element);total+=element['quantity']*element['price'];ind++;if(ind==orderLimit){sendCartReceipt(recipientId,senderId,cart.id,elements,total);}},error:function error(_error12){alert("Error: "+_error12.code+" "+_error12.message);}});});}});});}function sendCartReceipt(recipientId,senderId,cartId,elements,total){var user=(0,_localStore.getData)(recipientId,'user');var consumer=(0,_localStore.getData)(recipientId,'consumer');var address=(0,_localStore.getData)(recipientId,'address');var pointSale=(0,_localStore.getData)(recipientId,'pointSale');var payment_method=(0,_localStore.getData)(recipientId,'payment_method');var addressData=undefined;if(typeof pointSale=='undefined'){bot.sendTextMessage(recipientId,senderId,"No has registrado una dirección correcta, por favor registrala para visualizar el carrito").then(function(){sendAddresses(recipientId,senderId);});}else{if(typeof address!='undefined'){addressData={street_1:address.address?address.address:'Dirección no definida',street_2:address.description?address.description:'Sin complemento',city:address.city?address.city:'No definida',postal_code:address.postalCode?address.postalCode:'No definido',state:address.state?address.state:'No definido',country:address.countryCode?address.countryCode:'No definido'};}if(typeof payment_method=='undefined'){payment_method={name:'Sin definir'};}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendReceiptMessage(recipientId,senderId,{template_type:"receipt",recipient_name:user.first_name+" "+user.last_name,order_number:cartId,currency:"COP",payment_method:payment_method.name,timestamp:Math.trunc(Date.now()/1000).toString(),elements:elements,address:addressData,summary:{subtotal:total,shipping_cost:pointSale.deliveryCost,total_cost:total+pointSale.deliveryCost}},[{"content_type":"text","title":"Finalizar pedido","payload":"CheckOrder"},{"content_type":"text","title":"Seguir Pidiendo","payload":"SendContinueOrder"},{"content_type":"text","title":"Modificar carrito","payload":"SendCartDetails"},{"content_type":"text","title":"Borrar carrito","payload":"ClearAndSendCart"}]);});}}function sendCartDetails(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){var cart=(0,_localStore.getData)(recipientId,'cart');var customer=(0,_localStore.getData)(recipientId,'customer');var consumer=(0,_localStore.getData)(recipientId,'consumer');var image_url=customer.image.url;var items=cart.items;var promises=[];items.forEach(function(value,key){if(promises.length<=bot.limit){promises.push(new Parse.Query(_ParseModels.Product).get(key).then(function(product){var image=product.get('image');if(image){image_url=image.url();}return{"title":product.get('name')+": $"+value.price,"subtitle":"Cantidad solicitada: "+value.quantity,"image_url":image_url,"buttons":[{"type":"postback","title":"Quitar","payload":"RemoveProduct-"+key},{"type":"postback","title":"Aumentar 1","payload":"IncreaseOneProduct-"+key},{"type":"postback","title":"Disminuir 1","payload":"DecreaseOneProduct-"+key}]};}));}});return Parse.Promise.when(promises).then(function(elements){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements).then(function(){sendEditCartOptions(recipientId,senderId);});});});});}function sendEditCartOptions(recipientId,senderId){return bot.sendQuickReplyMessage(recipientId,senderId,"Opciones del carrito:",[{"content_type":"text","title":"Finalizar pedido","payload":"CheckOrder"},{"content_type":"text","title":"Seguir pidiendo","payload":"SendContinueOrder"}]);}function editCart(recipientId,senderId){var cart=(0,_localStore.getData)(recipientId,'cart');bot.sendTypingOn(recipientId,senderId);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,[{"title":"Opciones","image_url":SERVER_URL+"assets/thinking.jpg","buttons":[{"type":"web_url","url":SERVER_URL+"cart?"+cart.id,"title":"Remover producto","webview_height_ratio":"full","messenger_extensions":true}]}]);});}function clearCart(recipientId){var cart=(0,_localStore.getData)(recipientId,'cart');if(typeof cart!='undefined'){(function(){var items=cart.items;cart.itemsPointers=[];items.forEach(function(value,key){items.delete(key);});})();}return new _promise2.default(function(resolve,reject){resolve();});}function clearAndSendCart(recipientId,senderId){clearCart(recipientId).then(function(){sendCart(recipientId,senderId);});}function checkOrder(recipientId,senderId){var cart=(0,_localStore.getData)(recipientId,'cart');var consumer=(0,_localStore.getData)(recipientId,'consumer');var pointSale=(0,_localStore.getData)(recipientId,'pointSale');var total=0;if(typeof cart!='undefined'){cart.items.forEach(function(value,key){total+=value.quantity*value.price;});}else{cart=createCart(recipientId);}if(typeof pointSale=='undefined'){bot.sendTextMessage(recipientId,senderId,"No has registrado una dirección correcta, por favor registrala para visualizar el carrito").then(function(){sendAddresses(recipientId,senderId);});}else{if(pointSale.minOrderPrice&&pointSale.minOrderPrice>total){sendMinOrderPriceRestriction(recipientId,senderId);}else if(typeof consumer.phone=='undefined'||consumer.phone==''){setTelephone(recipientId,senderId);}else if(typeof consumer.email=='undefined'||consumer.email==''){setEmail(recipientId,senderId);}else{checkPayment(recipientId,senderId);}}}function checkAddress(recipientId,senderId){}function checkPayment(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){store.dispatch(Actions.loadPaymentMethods(recipientId,senderId)).then(function(){var paymentMethods=(0,_localStore.getData)(recipientId,'paymentMethods');var quick_replies=[];for(var i in paymentMethods){quick_replies.push({"content_type":"text","title":paymentMethods[i].name.substring(0,20),"payload":"Checkout-"+paymentMethods[i].objectId});}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Como vas a pagar tu pedido? (Tu pedido se cobra cuando lo recibes)",quick_replies);});});});}function checkout(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){store.dispatch(Actions.setPaymentMethod(recipientId,id)).then(function(){var state=store.getState();var paymentTypes=state['paymentTypes'];var paymentMethod=(0,_localStore.getData)(recipientId,'paymentMethod');var paymentFunction=paymentTypes[paymentMethod.method.objectId];paymentFunction(recipientId,senderId);});});}function sendMinOrderPriceRestriction(recipientId,senderId){var pointSale=(0,_localStore.getData)(recipientId,'pointSale');return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"El valor minimo de una orden con domicilio es "+pointSale.minOrderPrice+", \npor favor modifica tu pedido para cumplir este requisito").then(function(){sendPurchaseOptions(recipientId,senderId);});});}function sendScheduleRestriction(recipientId,senderId,pointSaleSchedules){var pointSale=(0,_localStore.getData)(recipientId,'pointSale');var days=['Domingo','Lunes','Martes','Miercoles','Jueves','Viernes','Sabado','Domingo'];var text='En este momento nuestros puntos de venta estan cerrados, \npor favor solicita tu domicilio en los siguientes horarios:\n\n';var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=pointSaleSchedules[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var pointSaleSchedule=_step7.value;var daysActive=pointSaleSchedule.get('daysActive');var allDay=pointSaleSchedule.get('allDay');for(var dayID in daysActive){if(daysActive.length-1!=dayID){text+=days[daysActive[dayID]-1]+", ";}else{text+="y "+days[daysActive[dayID]-1]+" ";}}if(allDay){text+='las 24 horas\n';}else{text+="desde las "+pointSaleSchedule.get('hourStart')+" ";text+="hasta las "+pointSaleSchedule.get('hourEnd');}text+="\n";}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,text).then(function(){sendMenu(recipientId);});});}function sendCash(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){var paymentMethod=(0,_localStore.getData)(recipientId,'paymentMethod');saveCart(recipientId);return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Se ha registrado el pago con "+paymentMethod.name).then(function(){orderConfirmation(recipientId,senderId);});});});}function registerCreditCard(recipientId,senderId){bot.sendTypingOn(recipientId,senderId);authentication(recipientId,senderId).then(function(){var consumer=(0,_localStore.getData)(recipientId,'consumer');return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,[{"title":"Registro de tarjeta de credito y finalización de tu pedido.\n\nEstas de acuerdo?","image_url":SERVER_URL+"assets/images/creditCards.jpg","subtitle":"Por razones de seguridad te redireccionaremos a una página web segura.","buttons":[{"type":"web_url","title":"Si","url":SERVER_URL+"creditCard?id="+consumer.objectId,"webview_height_ratio":"full","messenger_extensions":true},{"type":"postback","title":"No","payload":"CancelRegisterCreditCard"}]}]);});});}function registerCreditCardAndPay(recipientId,senderId){bot.setDataBuffer(recipientId,'creditCardPayload','SendCreditCards');registerCreditCard(recipientId,senderId);}function cancelRegisterCreditCard(recipientId,senderId){bot.sendTypingOn(recipientId,senderId).then(function(){var userBuffer=bot.buffer[recipientId];return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Si no ingresas los datos de tu tarjeta en nuestro sitio seguro, no podras comprar con tarjeta online").then(function(){if(typeof userBuffer!='undefined'&&userBuffer.hasOwnProperty('creditCardPayload')){checkPayment(recipientId);}else{sendAccount(recipientId,senderId);}});});});}function sendRegisteredCreditCards(recipientId,senderId){bot.sendTypingOn(recipientId,senderId).then(function(){var user=(0,_localStore.getData)(recipientId,'user');var consumer=(0,_localStore.getData)(recipientId,'consumer');_ParseModels.CreditCard.loadInStore(store,recipientId,user).then(function(){var creditCards=(0,_localStore.getData)(recipientId,'creditCards');if(creditCards.length==0){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Aun no tienes tarjetas registradas, deseas registrar una tarjeta?",[{"content_type":"text","title":"Si","payload":"RegisterCreditCardAndPay"},{"content_type":"text","title":"No","payload":"CheckPayment"}]);});}else{var _ret2=function(){var creditCards=(0,_localStore.getData)(recipientId,'creditCards');var quick_replies=[];quick_replies.push({"content_type":"text","title":"Agregar tarjeta","payload":"RegisterCreditCardAndPay"});var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=creditCards[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var card=_step8.value;if(quick_replies.length<bot.limit){quick_replies.push({"content_type":"text","title":card.type+" "+card.lastFour,"payload":"PayWithCreditCard-"+card.lastFour});}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}return{v:bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Con cual tarjeta quieres pagar?",quick_replies);})};}();if((typeof _ret2==='undefined'?'undefined':_typeof(_ret2))==="object")return _ret2.v;}});});}function payWithCreditCard(recipientId,senderId,creditCardId){return bot.sendTypingOn(recipientId,senderId).then(function(){orderConfirmation(recipientId,senderId);});}function orderConfirmation(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){saveOrder(recipientId);getOrderState(0).then(function(state){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,state.messagePush+"\n\nEn un momento te estaremos dando información en tiempo real sobre tu pedido");});});});}function sendorderMapState(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Buenas noticias, Tu pedido ha sido Enviado. \n\nHaz click en el mapa para vel tu pedido").then(function(){sendserviceRating(recipientId,senderId);});});});}function sendOrderState(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){var orderState=(0,_localStore.getData)(recipientId,'orderState');var pointSale=(0,_localStore.getData)(recipientId,'pointSale');return bot.sendTypingOff(recipientId,senderId).then(function(){switch(orderState.order){case 1:return bot.sendTextMessage(recipientId,senderId,"Tu pedido ha sido Aceptado. \n\nLo estan preparando en nuestra sede y te lo enviaremos en aproximadamente "+pointSale.deliveryTime+" minutos");break;case 5:return bot.sendTextMessage(recipientId,senderId,orderState.messagePush).then(function(){sendserviceRating(recipientId,senderId);});break;case 6:return new _promise2.default(function(resolve,reject){resolve();});break;case 8:return bot.sendTextMessage(recipientId,senderId,orderState.messagePush).then(function(){sendOrders(recipientId,senderId);});break;default:return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,orderState.messagePush);});break;}});});}function sendserviceRating(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendQuickReplyMessage(recipientId,senderId,"Califica tu experiencia para ayudarnos a mejorar. \n\nDe 1 a 5 cuantas extrellas merece nuestro servicio?",[{"content_type":"text","title":"5 (Excelente)","payload":"SetScore-5"},{"content_type":"text","title":"4 (Bien)","payload":"SetScore-4"},{"content_type":"text","title":"3 (Regular)","payload":"SetScore-3"},{"content_type":"text","title":"2 (Mal)","payload":"SetScore-2"},{"content_type":"text","title":"2 (Muy mal)","payload":"SetScore-1"}]);});});}function setScore(recipientId,senderId,score){var order=(0,_localStore.getData)(recipientId,'order');return bot.sendTypingOn(recipientId,senderId).then(function(){Parse.Cloud.run('rateOrder',{orderId:order.objectId,score:Number(score),comment:''}).then(function(result){return bot.sendTypingOff(recipientId,senderId).then(function(){thank(recipientId,senderId);});},function(error){console.log('error');console.log(error);});});}function thank(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Gracias, esperamos tener el gusto de atenderle nuevamente");});});}function searchProducts(recipientId,senderId,query,index){return bot.sendTypingOn(recipientId,senderId).then(function(){Parse.Cloud.run('search',{businessId:BUSINESS[senderId].BUSINESS_ID,q:query}).then(function(result){if(result.length==0){renderSearchEmpty(recipientId,senderId);}else if(result.length==1&&result[0].type=='Category'){sendProducts(recipientId,senderId,result[0].id,0);}else{if(index==undefined)index=0;else if(typeof index=='string')index=parseInt(index);if(index==0){renderSearchInitial(recipientId,senderId);}splitSearchResult(recipientId,result,index).then(function(elements){var idx=Object.keys(result).length;var buttons=[];var catIni=(index+1)*bot.limit;var catFin=idx>catIni+bot.limit?catIni+bot.limit:idx;if(idx>(index+1)*bot.limit){buttons.push({type:"postback",title:"Productos "+(catIni+1)+"-"+catFin,payload:"Search-"+(index+1)});elements.push({title:"Ver más productos ",subtitle:"Productos disponibles",buttons:buttons});}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});});}},function(error){console.log('error');console.log(error);});});}function renderSearchInitial(recipientId,senderId){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"Se han encontrado los siguientes productos:");});}function renderSearchEmpty(recipientId,senderId){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"No se han encontrado productos que coincidan");});}function splitSearchResult(recipientId,products,index){var customer=(0,_localStore.getData)(recipientId,'customer');var image_url=void 0;var idx=0;var elements=[];var promises=[];products.forEach(function(item){if(item&&item.name&&item.type=='Product'){if(idx>=index*bot.limit&&idx<(index+1)*bot.limit){promises.push(new Parse.Query(_ParseModels.Product).get(item.id).then(function(product){return(0,_parseUtils.extractParseAttributes)(product);}));idx=idx+1;}}});return Parse.Promise.when(promises).then(function(productObjects){productObjects.forEach(function(product){var image=product.image;image_url=typeof image!='undefined'?image.url:customer.image.url;elements.push({title:product.name+": $"+product.priceDefault,subtitle:product.description,image_url:image_url,buttons:[{type:"postback",title:'Agregar',payload:"AddProduct-"+product.objectId},{type:"postback",title:'Ver descripción',payload:"SendProductDescription-"+product.objectId}]});});return elements;});//    subtitle: item.get('description'),
}function sendHelp(recipientId,senderId){bot.sendTypingOn(recipientId,senderId);renderHelp(recipientId,senderId).then(function(){sendContactUs(recipientId,senderId);});}function renderHelp(recipientId,senderId){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"InOut Bot.\n\nTe permite visualizar las opciones de productos, agregarlos al carrito y realizar tu compra por medio del chat de facebook.\n\nFuncionalidades disponibles: \n\n'Hola', para iniciar la conversación\n'Pedir Domicilio', si quieres realizar un domicilio\n'Carrito', para ver el estado actual de tu carrito");});}function sendContactUs(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId," Para mayor información puedes contactarnos en:\n\n Web: http://www.inoutdelivery.com/\n\n Email: soporte@inoutdelivery.com");});});}function sendOrders(recipientId,senderId){bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var consumer=(0,_localStore.getData)(recipientId,'consumer');Parse.Cloud.run('ordersBot',{businessId:BUSINESS[senderId].BUSINESS_ID,consumerId:consumer.objectId}).then(function(orders){store.dispatch(Actions.setOrders(recipientId,orders)).then(function(){renderOrders(recipientId,senderId);});}).fail(function(error){console.log('error');console.log(error);});});});}function renderOrders(recipientId,senderId){var customer=(0,_localStore.getData)(recipientId,'customer');var orders=(0,_localStore.getData)(recipientId,'orders');var elements=[];elements.push({"title":"Nueva orden","subtitle":"Puedes realizar una orden","image_url":SERVER_URL+"assets/images/newOrden.jpg","buttons":[{"type":"postback","title":"Nueva orden","payload":"NewOrder"}]});var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=orders.ongoing[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var order=_step9.value;var pointSale=order.pointSale;if(elements.length<bot.limit){var datetime=_datetimeConverterNodejs2.default.dateString(order.createdAt);var image_url=customer.image.url;var title=order.orderNumber?'Orden: '+order.orderNumber:'Orden: '+(0,_dateformat2.default)(datetime,"h:MM:ss TT dd/mm/yyyy");elements.push({"title":title,"subtitle":'Estado: '+order.state.name+', Valor: $'+(order.total+pointSale.deliveryCost),"image_url":image_url,"buttons":[{"type":"postback","title":"Ver orden","payload":"SendOrder-"+order.objectId},{"type":"postback","title":"Cancelar orden","payload":"CancelOrder-"+order.objectId}]});}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});}function sendOrder(recipientId,senderId,id){return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){var orders=(0,_localStore.getData)(recipientId,'orders');var customer=(0,_localStore.getData)(recipientId,'customer');var customer_image_url=customer.image.url;var currentOrder=void 0;var elements=[];var element=void 0;var image_url=void 0;var product=void 0;var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=orders.ongoing[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var order=_step10.value;if(order.objectId==id){currentOrder=order;}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=currentOrder.items[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var item=_step11.value;product=item.product;image_url=customer_image_url;if(product.image){image_url=product.image.url;}element={};element['title']=product.name;element['quantity']=item.amount;element['price']=item.price;element['currency']="COP";element['image_url']=image_url;elements.push(element);}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}renderOrder(recipientId,senderId,currentOrder,elements);});});}function renderOrder(recipientId,senderId,order,elements){var user=(0,_localStore.getData)(recipientId,'user');var consumer=(0,_localStore.getData)(recipientId,'consumer');var address=order.consumerAddress;var pointSale=order.pointSale;var payment_method=order.paymentMethod;var addressData=undefined;if(typeof payment_method=='undefined'){payment_method={name:'Sin definir'};}if(typeof address!='undefined'){addressData={street_1:address.address?address.address:'Dirección no definida',street_2:address.description?address.description:'Sin complemento',city:address.city?address.city:'No definida',postal_code:address.postalCode?address.postalCode:'No definido',state:address.state?address.state:'No definido',country:address.countryCode?address.countryCode:'No definido'};}return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendReceiptMessage(recipientId,senderId,{template_type:"receipt",recipient_name:user.first_name+" "+user.last_name,order_number:order.objectId,currency:"COP",payment_method:payment_method.name,timestamp:Math.trunc(Date.now()/1000).toString(),elements:elements,address:addressData,summary:{subtotal:order.total,shipping_cost:pointSale.deliveryCost,total_cost:order.total+pointSale.deliveryCost}},[{"content_type":"text","title":"Nueva orden","payload":"NewOrder"},{"content_type":"text","title":"Ver órdenes","payload":"SendOrders"},{"content_type":"text","title":"Cancelar orden","payload":"CancelOrder-"+order.objectId}]);});}function newOrder(recipientId,senderId){clearCart(recipientId).then(function(){sendAddressesWithTitle(recipientId,senderId);});}function cancelOrder(recipientId,senderId,id){Parse.Cloud.run('changeStatusOrder',{status:"canceledByUser",orderId:id}).then(function(){}).fail(function(error){console.log('error');console.log(error);});}function sendAccount(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){authentication(recipientId,senderId).then(function(){renderAccount(recipientId,senderId);});});}function renderAccount(recipientId,senderId){var user=(0,_localStore.getData)(recipientId,'user');var consumer=(0,_localStore.getData)(recipientId,'consumer');var elements=[{"title":'Ver direcciones',"subtitle":'Editar y eliminar direcciones',"image_url":SERVER_URL+"assets/images/addresses.jpg","buttons":[{"type":"postback","title":'Ver direcciones',"payload":"SendAddresses"}]},{"title":'Ver tarjetas de credito',"subtitle":'Editar y eliminar tarjetas de credito',"image_url":SERVER_URL+"assets/images/creditCards.jpg","buttons":[{"type":"postback","title":'Ver tarjetas',"payload":"SendCreditCards"}]}];return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendGenericMessage(recipientId,senderId,elements);});}function sendYouAreWelcome(recipientId,senderId){return bot.sendTypingOn(recipientId,senderId).then(function(){return bot.sendTypingOff(recipientId,senderId).then(function(){return bot.sendTextMessage(recipientId,senderId,"De nada, gracias por usar nuestros servicios");});});}function addCreditCard(recipientId,senderId,token,data){var expiration=data['expiry'].replace(/\s+/g,"").split('/');return(0,_requestPromise2.default)({uri:PARSE_SERVER_URL+'/functions/addCreditCard',headers:{'Content-Type':'text/plain;charset=UTF-8','X-Parse-Application-Id':PARSE_APP_ID,'X-Parse-Session-Token':token},method:'POST',json:{"businessId":BUSINESS[senderId].BUSINESS_ID,"number":data['number'].replace(/\s+/g,""),"holderName":data['holderName'],"verificationNumber":data['cvc'],"expirationMonth":expiration[0],"expirationYear":expiration[1]}}).then(function(body){(0,_requestPromise2.default)({uri:SERVER_URL+'creditCardRegistered',method:'POST',json:{"recipientId":recipientId,"senderId":senderId}});}).catch(function(error){console.log('error');console.log(error);var response=error.response;//console.log(JSON.stringify(error, null, 1));
console.log(JSON.stringify(response.body,null,1));});}function getOrderState(orderStateNumber){return new Parse.Query(_ParseModels.OrderState).equalTo('order',orderStateNumber).find().then(function(state){return(0,_parseUtils.extractParseAttributes)(state[0]);},function(object,error){console.log(error);});}module.exports={store:store,getData:_localStore.getData};store.dispatch({type:types.APP_LOADED});
//# sourceMappingURL=app.js.map