{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["import * as bot from './bot';\nimport * as types from './constants/actionTypes';\nimport * as Actions from './actions/index';\nimport { extractParseAttributes } from './parseUtils';\nimport {createLocalStore, getData} from './localStore'\nimport {Customer, User, Consumer, ConsumerAddress, Category, Product, Cart, Order, OrderItem, OrderState, Modifier, ModifierItem, OrderItemModifier, PaymentMethod, CreditCard} from './models/ParseModels';\n\nimport config from 'config';\nimport rp from 'request-promise';\nimport Promise from 'promise';\nimport objectAssign from 'object-assign';\nimport geocoder from 'geocoder';\nimport path from 'path';\nimport DateTime from 'datetime-converter-nodejs';\nimport dateFormat from 'dateformat'\n\nconst APP_SECRET = (process.env.MESSENGER_APP_SECRET) ? process.env.MESSENGER_APP_SECRET : config.get('APP_SECRET');\n\nconst PAGE_ACCESS_TOKEN = (process.env.MESSENGER_PAGE_ACCESS_TOKEN) ? (process.env.MESSENGER_PAGE_ACCESS_TOKEN) : config.get('PAGE_ACCESS_TOKEN');\n\nconst SERVER_URL = (process.env.SERVER_URL) ? (process.env.SERVER_URL) : config.get('SERVER_URL');\n\nconst PARSE_APP_ID = (process.env.PARSE_APP_ID) ? (process.env.PARSE_APP_ID) : config.get('PARSE_APP_ID');\n\nconst PARSE_SERVER_URL = (process.env.PARSE_SERVER_URL) ? (process.env.PARSE_SERVER_URL) : config.get('PARSE_SERVER_URL');\n\nconst PARSE_CLIENT_KEY = (process.env.PARSE_CLIENT_KEY) ? (process.env.PARSE_CLIENT_KEY) : config.get('PARSE_CLIENT_KEY');\n\nconst FACEBOOK_APP_ID = (process.env.FACEBOOK_APP_ID) ? (process.env.FACEBOOK_APP_ID) : config.get('FACEBOOK_APP_ID');\n\nconst REDIRECT_URI = (process.env.REDIRECT_URI) ? (process.env.REDIRECT_URI) : config.get('REDIRECT_URI');\n\nconst BUSINESS_ID = (process.env.BUSINESS_ID) ? (process.env.BUSINESS_ID) : config.get('BUSINESS_ID');\n\nconst GOOGLE_MAPS_URL = (process.env.GOOGLE_MAPS_URL) ? (process.env.GOOGLE_MAPS_URL) : config.get('GOOGLE_MAPS_URL');\n\nconst GOOGLE_MAPS_KEY = (process.env.GOOGLE_MAPS_KEY) ? (process.env.GOOGLE_MAPS_KEY) : config.get('GOOGLE_MAPS_KEY');\n\nbot.rules.set('hola', sendMenu);\nbot.rules.set('iniciar', sendMenu);\nbot.rules.set('empezar', sendMenu);\nbot.rules.set('comenzar', sendMenu);\nbot.rules.set('buenos dias', sendMenu);\nbot.rules.set('buenas tardes', sendMenu);\nbot.rules.set('menú', sendMenu);\nbot.rules.set('pedir domicilio', sendAddressesWithTitle);\nbot.rules.set('carrito', sendCart);\nbot.rules.set('cuenta', sendCart);\nbot.rules.set('mi orden', sendOrders);\nbot.rules.set('mis órdenes', sendOrders);\nbot.rules.set('mi dirección', sendAddresses);\nbot.rules.set('mi cuenta', sendAccount);\nbot.rules.set('mis direcciones', sendAddresses);\nbot.rules.set('mi tarjeta', sendCreditCards);\nbot.rules.set('mis tarjetas', sendCreditCards);\nbot.rules.set('ayuda', sendHelp);\nbot.rules.set('help', sendHelp);\nbot.rules.set('gracias', renderYouAreWelcome);\n\nbot.payloadRules.set('Greeting', sendMenu);\n\nbot.payloadRules.set('SendAddressesWithTitle', sendAddressesWithTitle);\nbot.payloadRules.set('SendAddresses', sendAddresses);\nbot.payloadRules.set('NewAddress', newAddress);\nbot.payloadRules.set('SetAddressComplement', setAddressComplement);\nbot.payloadRules.set('ConfirmAddress', confirmAddress);\nbot.payloadRules.set('SetAddress', setAddress);\nbot.payloadRules.set('EditAddress', editAddress);\nbot.payloadRules.set('RemoveAddress', removeAddress);\n\nbot.payloadRules.set('SendCategories', sendCategories);\nbot.payloadRules.set('SendProducts', sendProducts);\nbot.payloadRules.set('AddProduct', addProduct);\nbot.payloadRules.set('AddModifier', addModifier);\nbot.payloadRules.set('RemoveProduct', removeProduct);\nbot.payloadRules.set('IncreaseOneProduct', increaseOneProduct);\nbot.payloadRules.set('DecreaseOneProduct', decreaseOneProduct);\nbot.payloadRules.set('SendProductDescription', sendProductDescription);\nbot.payloadRules.set('SendContinueOrder', sendContinueOrder);\n\nbot.payloadRules.set('Search', searchProducts);\nbot.payloadRules.set('SendCart', sendCart);\nbot.payloadRules.set('SendCartDetails', sendCartDetails);\nbot.payloadRules.set('EditCart', editCart);\nbot.payloadRules.set('ClearCart', clearCart);\nbot.payloadRules.set('ClearAndSendCart', clearAndSendCart);\nbot.payloadRules.set('SendPurchaseOptions', sendPurchaseOptions);\n\nbot.payloadRules.set('Checkout', checkout);\nbot.payloadRules.set('CheckPayment', checkPayment);\nbot.payloadRules.set('CheckAddress', checkAddress);\nbot.payloadRules.set('CheckOrder', checkOrder);\nbot.payloadRules.set('RegisterCreditCard', registerCreditCard);\nbot.payloadRules.set('RegisterCreditCardAndPay', registerCreditCardAndPay);\n\nbot.payloadRules.set('SendRegisteredCreditCards', sendRegisteredCreditCards);\nbot.payloadRules.set('CancelRegisterCreditCard', cancelRegisterCreditCard);\nbot.payloadRules.set('PayWithCreditCard', payWithCreditCard);\nbot.payloadRules.set('SendOrders', sendOrders);\nbot.payloadRules.set('SendOrder', sendOrder);\nbot.payloadRules.set('NewOrder', newOrder);\nbot.payloadRules.set('CancelOrder', cancelOrder);\nbot.payloadRules.set('SendCreditCards', sendCreditCards);\nbot.payloadRules.set('RemoveCreditCard', removeCreditCard);\nbot.payloadRules.set('SetScore', setScore);\nbot.payloadRules.set('SendAccount', sendAccount);\nbot.payloadRules.set('SendHelp', sendHelp);\nbot.payloadRules.set('CustomerService', sendHelp);\n\nbot.defaultSearch = searchProducts;\n\nconst initialState = {\n    userData: {}\n\n    /*\n    geocodedLocation: {lat: -1, lng: -1},\n    addresses: [],\n    mapBounds: {},\n    mapAddress: '',\n    useSubCategories: false,\n    products: [],\n    pointOfSales: [],\n    categories: [],\n    paymentMethods: [],\n    consumer: {},\n    customer: {},\n    orders: { ongoing: [], delivered: [] },\n    orderToRate: null,\n    currentOrder: {\n        consumerAddress:{},\n        items: []\n    },\n    locationZoom: 3,\n    profileIsOpen: false,\n    mapAddressIsOpen: false,\n    addressFormIsOpen: false,\n    addressListIsOpen: false,\n    savingAddress: false,\n    creatingOrder: false,\n    paymentMethodNotSelected: false,\n    cartTotalIsBelowMinimumPrice: false,\n    currentCategory: {},\n    consumerNotFound: false,\n    updatingConsumer: false,\n    currentUser: {},\n    pendingOrder: false*/\n};\n\nconst reducer = (state = initialState, action) => {\n    console.log('ACTION');\n    console.log(action);\n    let data = action.data;\n\n    if(data && data.hasOwnProperty('recipientId')){\n        if(typeof state.userData[data.recipientId] != 'object'){\n            state.userData[data.recipientId] = {};\n        }\n    }\n\n    switch (action.type) {\n        case types.APP_LOADED: {\n            console.log('Application is running on port', bot.app.get('port'));\n            return {...state};\n        }\n        case types.CUSTOMER_LOADED: {\n            let customer = extractParseAttributes(data.customer);\n\n            if(typeof state.userData[data.recipientId] != 'object'){\n                state.userData[data.recipientId] = {};\n            }\n            objectAssign(state.userData[data.recipientId], {customer});\n            return {...state};\n        }\n        case types.CONSUMER_LOADED: {\n            let consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n        }\n        case types.USER_LOADED: {\n            let user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n        }\n        case types.CONSUMER_ADDRESSES_LOADED: {\n            let addresses = data.addresses.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {addresses});\n            return {...state};\n        }\n        case types.SET_CURRENT_ADDRESS: {\n            let address = extractParseAttributes(data.address);\n            objectAssign(state.userData[data.recipientId], {address});\n            return {...state};\n        }\n        case types.PAYMENT_METHODS_LOADED: {\n            let paymentMethods = data.paymentMethods.map(p => extractParseAttributes(p))\n            objectAssign(state.userData[data.recipientId], {paymentMethods})\n            return {...state};\n        }\n        case types.SET_PAYMENT_METHOD: {\n            let paymentMethod = extractParseAttributes(data.paymentMethod);\n            objectAssign(state.userData[data.recipientId], {paymentMethod});\n            return {...state};\n        }\n        case types.SET_ORDERS: {\n            let ongoing = data.orders.ongoing.map(a => extractParseAttributes(a));\n            let delivered = data.orders.delivered.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {orders: {ongoing: ongoing, delivered: delivered}});\n            return {...state};\n        }\n        case types.CONSUMER_UPDATED: {\n            return {...state};\n        }\n        case types.CONSUMER_NOT_FOUND: {\n            return {...state};\n        }\n        case types.CONSUMER_ORDERS_LOADED: {\n            let orders = data.orders.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {orders});\n            return {...state};\n        }\n        case types.USER_CREDITCARDS_LOADED: {\n            let creditCards = data.creditCards.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {creditCards});\n            return {...state};\n        }\n        case types.SET_CUSTOMER_POINT_SALE: {\n            let pointSale = extractParseAttributes(data.pointSale);\n            objectAssign(state.userData[data.recipientId], {pointSale});\n            return {...state};\n        }\n        case types.SET_ORDER: {\n            let order = extractParseAttributes(data.order);\n            objectAssign(state.userData[data.recipientId], {order});\n            return {...state};\n        }\n        case types.SET_USER: {\n            let user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n        }\n        case types.SET_CONSUMER: {\n            let consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n        }\n        case types.SET_CUSTOMER:{\n            let customer = extractParseAttributes(data.customer);\n            objectAssign(state.userData[data.recipientId], {customer});\n            return {...state};\n        }\n        case types.SET_ORDER_STATE: {\n            let orderState = extractParseAttributes(data.orderState);\n            objectAssign(state.userData[data.recipientId], {orderState});\n            return {...state};\n        }\n        case types.RENDER_MENU: {\n            renderMenu()\n            return state;\n        }\n        case types.RENDER_ADDRESS_MENU: {\n            renderAddress();\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\ncreateLocalStore(reducer);\n\nfunction signUp(recipientId, facebookId, conversationToken){\n    return User.createUser(store, recipientId, facebookId, conversationToken).then(()=>{\n        let userObject = getData(recipientId, 'user');\n        let user = userObject.rawParseObject;\n\n        return user.createConsumer(store, recipientId, conversationToken).then(consumer => {\n            return new Promise(function(resolve, reject){\n                resolve(userObject)\n            });\n        });\n    });\n}\n\nfunction login(username, password){\n    return Parse.User.logIn(username, password, {\n        success : user => {\n            //let val = JSON.stringify({sessionToken: user.getSessionToken()});\n            //console.log(val);\n            return user;\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }});\n}\n\nfunction authentication(recipientId){\n    return getCustomer(recipientId).then(customer => {\n        return getUser(recipientId).then(user => {\n            if(typeof user == 'undefined'){\n                //sendSignUp(recipientId)\n                return User.createUser(store, recipientId, recipientId, PAGE_ACCESS_TOKEN).then(()=>{\n                    let userObject = getData(recipientId, 'user');\n                    let user = userObject.rawParseObject;\n\n                    return user.createConsumer(store, recipientId, PAGE_ACCESS_TOKEN).then(consumer => {\n                        return new Promise(function(resolve, reject){\n                            resolve(userObject)\n                        });\n                    });\n                })\n            }\n            else{\n                return getConsumer(recipientId, user.rawParseObject).then(consumer => {\n                    return new Promise(function(resolve, reject){\n                        resolve(user)\n                    });\n\n                    /*Parse.Promise.as().then(() => {\n                        return user;\n                    });*/\n                });\n            }\n            //return login(user.username, user.username).then(()=>{\n\n            //});\n        });\n    });\n}\n\nfunction getCustomer(recipientId){\n    let customer = getData(recipientId, 'customer');\n    if(typeof customer == 'undefined'){\n        return Customer.loadInStore(store, recipientId, BUSINESS_ID).then(()=>{\n            return getData(recipientId, 'customer');\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return customer;\n        })\n    }\n}\n\nfunction getUser(recipientId){\n    let userObj = getData(recipientId, 'user');\n    if(typeof userObj == 'undefined'){\n        return User.loadInStore(store, recipientId).then(()=>{\n            return getData(recipientId, 'user');\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return userObj;\n        })\n    }\n}\n\nfunction getConsumer(recipientId, user){\n    let consumerObj = getData(recipientId, 'consumer');\n\n    if(typeof consumerObj == 'undefined'){\n        return Consumer.loadInStore(store, recipientId, user).then(()=>{\n            consumerObj = getData(recipientId, 'consumer');\n\n            if(typeof consumerObj != 'undefined'){\n                return Parse.Promise.as().then(() => {\n                    return consumerObj;\n                })\n            }else{\n                console.log('create consumer');\n                /*return createConsumer(recipientId, user).then( () => {\n                    return getData(recipientId, 'consumer');\n                });*/\n            }\n        });\n    }\n    else{\n        return Parse.Promise.as().then(() => {\n            return consumerObj;\n        })\n    }\n}\n\nfunction sendSignUp(recipientId) {\n    bot.sendTypingOn(recipientId);\n\n    renderSignUp(recipientId);\n}\n\nfunction renderSignUp(recipientId) {\n    let image_url = SERVER_URL+\"assets/images/love.jpg\";\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        \"title\":     \"Hola, soy un Bot\",\n                        \"subtitle\":  \"Soy tu asistente virtual. Quieres registrarte en nuestro sistema?\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\": \"web_url\",\n                                \"url\": SERVER_URL + \"login?psid=\"+recipientId,\n                                \"title\": \"Registrarme\",\n                                \"webview_height_ratio\": \"full\",\n                                \"messenger_extensions\": true\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMenu(recipientId) {\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then(() =>{\n        renderMenu(recipientId);\n    });\n}\n\nfunction renderMenu(recipientId) {\n    let customer = getData(recipientId, 'customer');\n    let user = getData(recipientId, 'user');\n\n    let image_url = customer.image.url;\n\n    //bot.sendGeneric(title, subtitle, image_url, buttons)\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        \"title\":     \"Hola \"+user.first_name+\", Bienvenido a \"+customer.name,\n                        \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir domicilio\",\n                                \"payload\": \"SendAddressesWithTitle\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Servicio al cliente\",\n                                \"payload\": \"CustomerService\"\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendAddressesWithTitle(recipientId){\n    renderAddressTitle(recipientId).then(()=>{\n        sendAddresses(recipientId);\n    });\n}\n\nfunction renderAddressTitle(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A cual dirección vas hacer tu pedido?\\n\\nPuedes escoger entre agregar una nueva dirección o seleccionar una de tus direcciones guardadas\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendAddresses(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let consumer = getData(recipientId, 'consumer');\n\n        ConsumerAddress.loadInStore(store, recipientId, consumer).then(() => {\n            renderAddress(recipientId);\n        });\n    });\n}\n\nfunction renderAddress(recipientId){\n    let addresses = getData(recipientId, 'addresses');\n    let elements = [];\n\n    elements.push({\n        \"title\": \"Nueva dirección\",\n        \"subtitle\": \"Puedes agregar una nueva dirección\",\n        \"image_url\": SERVER_URL+\"assets/images/addAddress.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva dirección\",\n                \"payload\": \"NewAddress\"\n            }\n        ]\n    });\n\n    for(let address of addresses) {\n        if (elements.length < bot.limit){\n            elements.push({\n                \"title\": address.name,\n                \"subtitle\": address.address +\", \"+address.description+\", \"+address.city+\", \"+address.state,\n                \"image_url\": GOOGLE_MAPS_URL+ \"?center=\"+address.location.lat+\",\"+address.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+address.location.lat+\",\"+address.location.lng+\"&key=\"+GOOGLE_MAPS_KEY,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Seleccionar\",\n                        \"payload\": \"SetAddress-\"+address.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Modificar\",\n                        \"payload\": \"EditAddress-\"+address.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Quitar\",\n                        \"payload\": \"RemoveAddress-\"+address.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n    \n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCreditCards(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let user = getData(recipientId, 'user');\n        CreditCard.loadInStore(store, recipientId, user).then(() => {\n            renderCreditCards(recipientId);\n        });\n\n    });\n}\n\nfunction renderCreditCards(recipientId){\n    let creditCards = getData(recipientId, 'creditCards');\n    let elements = [];\n    let userBuffer = bot.buffer[recipientId];\n    let creditCardImage;\n\n    if(typeof userBuffer != 'undefined' && userBuffer.hasOwnProperty('creditCardPayload')){\n        delete userBuffer.creditCardPayload;\n    }\n\n    elements.push({\n        \"title\": \"Registro de tarjeta\",\n        \"subtitle\": \"Puedes agregar una tarjeta\",\n        \"image_url\": SERVER_URL+\"assets/images/creditCards.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva tarjeta\",\n                \"payload\": \"RegisterCreditCard\"\n            }\n        ]\n    });\n\n    for(let creditCard of creditCards) {\n        if (elements.length < bot.limit){\n            creditCardImage = creditCardImages.has(creditCard.type) ? creditCardImages.get(creditCard.type) : creditCardImages.get('DEFAULT')\n            elements.push({\n                \"title\": creditCard.type+' '+creditCard.lastFour,\n                \"subtitle\": creditCard.cardHolderName,\n                \"image_url\": SERVER_URL+creditCardImage,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Quitar\",\n                        \"payload\": \"RemoveCreditCard-\"+creditCard.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction newAddress(recipientId){\n    bot.sendTypingOff(recipientId);\n    bot.setDataBuffer(recipientId, 'addressPayload', 'NewAddress');\n    writeAddress(recipientId);\n}\n\nfunction writeAddress(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Puedes escribir o compartir tu ubicación actual?\\n\\nEjemplo: Calle 67 #52-20, Medellín.\\n\\nNo olvides escribir la ciudad al final de la dirección.\",\n            \"quick_replies\":[\n                {\n                    \"content_type\": \"location\",\n                    \"title\": \"Enviar ubicación\"\n                }\n            ]\n        }\n    };\n\n    bot.setListener(recipientId, 'address', 'text', addressCheck);\n    bot.setListener(recipientId, 'location', 'attachment', setLocationCheck);\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderMapMessage(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"text\": \"Encontré esta dirección en Google Maps:\\n\\n\"+userBuffer.address+\"\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderNullMapMessage(recipientId){\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"text\": \"La dirección no ha sido encontrada en Google Maps, por favor intenta de nuevo\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMap(recipientId){\n    renderMap(recipientId).then(() => {\n        sendMapConfirmation(recipientId);\n    });\n}\n\nfunction renderMap(recipientId){\n    bot.sendTypingOff(recipientId);\n    let userBuffer = bot.buffer[recipientId];\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"attachment\": {\n                \"type\": \"image\",\n                \"payload\": {\n                    \"url\": GOOGLE_MAPS_URL+\"?center=\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&key=\"+GOOGLE_MAPS_KEY\n                }\n            }\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendMapConfirmation(recipientId){\n    renderMapConfirmation(recipientId)\n}\n\nfunction renderMapConfirmation(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Es correcta?\",\n            \"quick_replies\":[\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Si\",\n                    \"payload\": \"SetAddressComplement\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"No\",\n                    \"payload\": \"NewAddress\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction addressCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n\n    geocoder.geocode(userBuffer.address, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            setAddressComponetsInBuffer(recipientId, data.results[0]);\n        }\n        else{\n            console.log('Geocode not found');\n            console.log(error);\n            renderNullMapMessage(recipientId).then(()=>{\n                newAddress(recipientId)\n            });\n        }\n    });\n}\n\nfunction setAddressComponetsInBuffer(recipientId, data){\n    let userBuffer = bot.buffer[recipientId];\n    userBuffer.address = data.formatted_address;\n    userBuffer.location = data.geometry.location;\n\n    for(let component of data.address_components){\n        if(component.types.includes('route')){\n            userBuffer.route = component.long_name;\n        }\n        else if(component.types.includes('street_number')){\n            userBuffer.street_number = component.short_name;\n        }\n        else if(component.types.includes('locality')){\n            userBuffer.locality = component.short_name;\n        }\n        else if(component.types.includes('administrative_area_level_1')){\n            userBuffer.state = component.short_name;\n        }\n        else if(component.types.includes('administrative_area_level_2')){\n            userBuffer.administrative_area = component.short_name;\n        }\n        else if(component.types.includes('country')){\n            userBuffer.country = component.long_name;\n            userBuffer.country_code = component.short_name\n        }\n        else if(component.types.includes('postal_code')){\n            userBuffer.postal_code = component.short_name;\n        }\n    }\n\n    renderMapMessage(recipientId).then(() => {\n        sendMap(recipientId);\n    });\n}\n\nfunction setAddressComplement(recipientId){\n    bot.sendTypingOff(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe el complemento de tu dirección actual.\\n\\nEjemplo: Apto 303, edificio el palmar.\\n\\nNo olvides colocar el nombre del edificio o del barrio\"\n        }\n    };\n    bot.setListener(recipientId, 'complement', 'text', confirmAddress);\n    return bot.callSendAPI(messageData);\n}\n\nfunction confirmAddress(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let addressPayload = userBuffer['addressPayload'];\n\n    if(addressPayload == 'NewAddress'){\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": \"Por favor coloca un nombre a esta dirección para guardarla. \\n\\nEjemplo: casa, apartamento o oficina\"\n            }\n        };\n        bot.setListener(recipientId, 'address_name', 'text', saveAddress);\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    }\n    else if(addressPayload.startsWith('EditAddress')){\n        let data = addressPayload.split('-');\n        let location = new Parse.GeoPoint({latitude: parseFloat(userBuffer.location.lat), longitude: parseFloat(userBuffer.location.lng)});\n\n        new Parse.Query(ConsumerAddress).get(data[1]).then((consumerAddress) => {\n\n            consumerAddress.set('address', userBuffer.route+\" # \"+userBuffer.street_number);\n            consumerAddress.set('location', location);\n            consumerAddress.set('country', userBuffer.country);\n            consumerAddress.set('countryCode', userBuffer.country_code);\n            consumerAddress.set('postalCode', userBuffer.postal_code);\n            consumerAddress.set('state', userBuffer.state);\n            consumerAddress.set('description', userBuffer.complement);\n\n            consumerAddress.save(undefined, {\n                success: function(address) {\n                    delete userBuffer.address;\n                    delete userBuffer.location;\n                    delete userBuffer.complement;\n\n                    renderAddressUpdate(recipientId).then(() => {\n                        setAddress(recipientId, address.id)\n                    });\n                },\n                error: function(user, error) {\n                   console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n        });\n    }\n}\n\nfunction renderAddressUpdate(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido actualizada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction saveAddress(recipientId){\n    let consumer = getData(recipientId, 'consumer');\n    let userBuffer = bot.buffer[recipientId];\n    let location = new Parse.GeoPoint({latitude: parseFloat(userBuffer.location.lat), longitude: parseFloat(userBuffer.location.lng)});\n\n    let consumerAddress = new ConsumerAddress();\n    consumerAddress.set('name', userBuffer.address_name);\n    consumerAddress.set('address', userBuffer.route+\" # \"+userBuffer.street_number);\n    consumerAddress.set('consumer', {\n        __type: \"Pointer\",\n        className: \"Consumer\",\n        objectId: consumer.objectId\n    });\n    consumerAddress.set('location', location);\n    consumerAddress.set('city', userBuffer.locality);\n    consumerAddress.set('country', userBuffer.country);\n    consumerAddress.set('countryCode', userBuffer.country_code);\n    consumerAddress.set('postalCode', userBuffer.postal_code);\n    consumerAddress.set('state', userBuffer.state);\n    consumerAddress.set('description', userBuffer.complement);\n\n    consumerAddress.save(undefined, {\n        success: function(result) {\n\n            delete userBuffer.address;\n            delete userBuffer.location;\n            delete userBuffer.complement;\n            delete userBuffer['address_name'];\n\n            renderAddressSave(recipientId).then(() => {\n                setAddress(recipientId, result.id)\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction renderAddressSave(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido almacenada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction setEmail(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu email:\"\n        }\n    };\n    bot.setListener(recipientId, 'email', 'text', setEmailCheck);\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setEmailCheck(recipientId, value){\n    let userBuffer = bot.buffer[recipientId];\n    let consumer = getData(recipientId, 'consumer').rawParseObject;\n\n    consumer.setEmail(userBuffer.email);\n    consumer.saveInStore(store, recipientId).then(()=>{\n        delete userBuffer.email;\n        checkOrder(recipientId)\n    });\n}\n\nfunction setTelephone(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu número telefónico:\"\n        }\n    };\n    bot.setListener(recipientId, 'telephone', 'text', setTelephoneCheck);\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setTelephoneCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    let consumer = getData(recipientId, 'consumer').rawParseObject;\n\n    consumer.setPhone(userBuffer.telephone);\n    consumer.saveInStore(store, recipientId).then(()=>{\n        delete userBuffer.telephone;\n        checkOrder(recipientId)\n    });\n}\n\nfunction setLocationCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n\n    geocoder.reverseGeocode( userBuffer.location.lat, userBuffer.location.lng, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            setAddressComponetsInBuffer(recipientId, data.results[0])\n        }\n        else{\n            console.log('Geocode not found');\n            console.log(error);\n            renderNullMapMessage(recipientId).then(()=>{\n                newAddress(recipientId)\n            });\n        }\n    });\n}\n\nfunction setAddress(recipientId, id){\n    bot.sendTypingOn(recipientId);\n\n    store.dispatch(Actions.setAddress(recipientId, id)).then(() => {\n            let address = getData(recipientId, 'address');\n\n            Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, lat: address.location.lat, lng: address.location.lng}).then(\n                function(result){\n                    let pointSale = result.pointSale;\n\n                    store.dispatch(Actions.setCustomerPointSale(recipientId, pointSale.id)).then(() => {\n                        renderAddressConfirmation(recipientId).then(()=>{\n                            sendCategories(recipientId, 0);\n                        });\n                    });\n                },\n                function(error) {\n                    if(error.code == '141'){\n                        renderAddressOutOfCoverage(recipientId).then(()=>{\n                            sendAddressesWithTitle(recipientId)\n                        });\n                    }\n                    else{\n                        console.log('error');\n                        console.log(error);\n                    }\n                });\n        }\n    );\n}\n\nfunction editAddress(recipientId, id){\n    bot.sendTypingOff(recipientId);\n    bot.setDataBuffer(recipientId, 'addressPayload', 'EditAddress-'+id);\n\n    writeAddress(recipientId);\n\n}\n\nfunction removeAddress(recipientId, id){\n    new Parse.Query(ConsumerAddress).get(id).then((consumerAddress) => {\n        consumerAddress.destroy().then(()=>{\n            renderRemoveAddress(recipientId).then(()=>{\n                sendAddresses(recipientId);\n            });\n        });\n    });\n}\n\nfunction renderRemoveAddress(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección ha sido eliminada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction removeCreditCard(recipientId, id){\n    new Parse.Query(CreditCard).get(id).then((creditCard) => {\n        creditCard.destroy().then(()=>{\n            renderRemoveCreditCard(recipientId).then(()=> {\n                sendCreditCards(recipientId);\n            });\n        });\n    });\n}\n\nfunction renderRemoveCreditCard(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La tarjeta de credito ha sido eliminada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderAddressOutOfCoverage(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección seleccionada no está dentro de la cobertura de nuestras sedes, por favor intenta con otra dirección\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderAddressConfirmation(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Perfecto, ya seleccioné tu dirección para este pedido\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction renderCategoriesInitialMessage(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A continuación te presentamos las categorías de productos disponibles.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCategories(recipientId, index){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then(()=>{\n        Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID }).then(function(result){\n            if(result.pointSaleIsOpen) {\n                if(typeof index == 'undefined')\n                    index = 0;\n                else if( typeof index == 'string')\n                    index = parseInt(index);\n\n                if(index == 0){\n                    renderCategoriesInitialMessage(recipientId)\n                    bot.sendTypingOn(recipientId);\n                }\n\n                renderCategories(recipientId, result.categories, index);\n\n            }else{\n                sendScheduleRestriction(recipientId, result.pointSaleSchedules);\n            }\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n    });\n}\n\nfunction splitCategories(recipientId, categories, index){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n\n    let idx = 0;\n    let elements = [];\n\n    categories.forEach(function(item){\n        if(item && item.get('name')){\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                let image = item.get('image');\n                image_url = (typeof image != 'undefined') ? image.url() : customer.image.url;\n                elements.push({\n                    title: item.get('name'),\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: 'Ver categoría',\n                        payload: \"SendProducts-\"+item.id+\"-0\",\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction renderCategories(recipientId, categories, index){\n    let elements = splitCategories(recipientId, categories, index);\n    let idx = Object.keys(categories).length;\n    let buttons = [];\n    let catIni = (index + 1) * bot.limit;\n    let catFin = (idx > catIni + bot.limit) ? catIni + bot.limit : idx;\n\n    if (idx > (index + 1) * bot.limit) {\n        buttons.push({\n            type: \"postback\",\n            title: \"Categorías \" + (catIni + 1) + \"-\" + catFin,\n            payload: \"SendCategories-\" + (index + 1),\n        });\n\n        elements.push({\n            title: \"Ver más categorias \",\n            subtitle: \"Categorías disponibles\",\n            buttons: buttons\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: elements\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderProductsInitialMessage(recipientId, categoryId){\n    return new Parse.Query(Category).get(categoryId).then(\n        category => {\n            let messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    text: \"Selecciona \"+category.get('name')+\":\"\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            return bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    )\n}\n\nfunction sendProducts(recipientId, categoryId, proIdx){\n    bot.sendTypingOn(recipientId);\n    proIdx = parseInt(proIdx);\n    if(proIdx == 0){\n        renderProductsInitialMessage(recipientId, categoryId);\n        bot.sendTypingOn(recipientId);\n    }\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, category: categoryId }).then(result => {\n        if(result.hasOwnProperty('categories')){\n            renderCategories(recipientId, result.categories, 0);\n        }else{\n            if(result.products.length == 0){\n                renderEmptyProducts(recipientId)\n            }\n            else{\n                renderProducts(recipientId, categoryId, result.products, proIdx);\n            }\n        }\n    },\n    function(error) {\n        console.log('error');\n        console.log(error);\n    })\n}\n\nfunction splitProducts(recipientId, products, proIdx){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n\n    let idx = 0;\n    let elements = [];\n\n    products.forEach(function(product){\n        if(product && product.get('name')){\n            if(idx >= (proIdx)*bot.limit && idx < (proIdx+1)*bot.limit){\n                let image = product.get('image');\n                image_url = (typeof image != 'undefined') ? image.url() : customer.image.url;\n\n                elements.push({\n                    title: product.get('name') +\": $\"+ product.get('priceDefault'),\n                    subtitle: product.get('description'),\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: \"Agregar\",\n                        payload: \"AddProduct-\"+product.id,\n                    },\n                    {\n                        type: \"postback\",\n                        title: 'Ver descripción',\n                        payload: \"SendProductDescription-\"+product.id,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction renderProducts(recipientId, categoryId, products, index){\n    let elements = splitProducts(recipientId, products, index);\n    let idx = Object.keys(products).length;\n    let buttons = [];\n    let catIni = (index+1)*bot.limit;\n    let catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n    if(idx > (index+1)*bot.limit){\n        buttons.push({\n            type: \"postback\",\n            title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n            payload: \"SendProducts-\"+categoryId+\"-\"+(index+1),\n        });\n\n        elements.push({\n            title: \"Ver más productos \",\n            subtitle: \"Productos disponibles\",\n            buttons: buttons\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderEmptyProducts(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"No existen productos en esta categoría\",\n            \"quick_replies\": [\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Seguir pidiendo\",\n                    \"payload\": \"SendContinueOrder\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Ver carrito\",\n                    \"payload\": \"SendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction createCart(recipientId){\n    let userData = getData(recipientId);\n    Object.assign(userData, {'cart': {items: new Map()}});\n    return userData.cart;\n}\n\nfunction addProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(typeof cart == 'undefined'){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n\n    new Parse.Query(Product).get(productId).then(product => {\n        let productObject = extractParseAttributes(product);\n        let item = items.get(productId);\n        let promises = [];\n\n        if(typeof item == 'undefined'){\n            items.set(productId, {quantity: 1, price: productObject.priceDefault});\n            item = items.get(productId);\n        }\n        else{\n            item.quantity += 1;\n        }\n\n        if(typeof item.modifiers == 'undefined'){\n            item.modifiers = [];\n        }\n\n        if(typeof productObject.modifiers != 'undefined'){\n            productObject.modifiers.forEach(function(obj, index, array){\n                promises.push(new Parse.Query(Modifier).get(obj.objectId).then(modifier => {\n                    return extractParseAttributes(modifier);\n                }));\n            });\n        }\n\n        Parse.Promise.when(promises).then(function(modifiers) {\n            let undefinedModifiers = checkModifiers(recipientId, productId, modifiers);\n\n            console.log(undefinedModifiers);\n\n            //checkModifiersComplete(recipientId, productId, modifiers).then(result =>{\n            //    console.log('result: '+result);\n            //});\n            if(undefinedModifiers.length > 0){\n                //Show multiples modifiers\n                promises = [];\n\n                undefinedModifiers[0].items.forEach(function (modifierItem) {\n                    promises.push(new Parse.Query(ModifierItem).get(modifierItem.objectId).then(modifierItem => {\n                        return extractParseAttributes(modifierItem);\n                    }));\n                });\n\n                Parse.Promise.when(promises).then(function (modifierItems) {\n                    renderModifierMenu(recipientId, productId, undefinedModifiers[0], modifierItems);\n                })\n            }\n            else{\n                saveCart(recipientId);\n                renderAddProduct(recipientId, productId);\n            }\n        });\n    },\n    (object, error) => {\n        console.log(error);\n    });\n}\n\nfunction renderAddProduct(recipientId, productId){\n    return new Parse.Query(Product).get(productId).then(product => {\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": \"El producto \" + product.get('name') + \" ha sido agregado.\\n\\nDeseas seguir pidiendo o ver tu carrito?\",\n                \"quick_replies\": [\n                    {\n                        \"content_type\": \"text\",\n                        \"title\": \"Seguir pidiendo\",\n                        \"payload\": \"SendContinueOrder\"\n                    },\n                    {\n                        \"content_type\": \"text\",\n                        \"title\": \"Ver carrito\",\n                        \"payload\": \"SendCart\"\n                    }\n                ]\n            }\n        };\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    },\n    (object, error) => {\n        console.log(error);\n    })\n}\n\nfunction sendContinueOrder(recipientId){\n    renderContinueOrder(recipientId).then( ()=> {\n        sendCategories(recipientId, 0);\n    });\n}\n\nfunction renderContinueOrder(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Puedes escribir el nombre de un producto, ej: Ensalada mediterranea, o seleccionarlo en el siguiente menú:\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderModifierMenu(recipientId, productId, modifier, items){\n    let quick_replies = [];\n\n    items.forEach(function (item){\n        if(quick_replies.length <= bot.limit){\n            quick_replies.push({\n                \"content_type\": \"text\",\n                \"title\": item.name,\n                \"payload\": \"AddModifier-\"+productId+\"-\"+modifier.objectId+\"-\"+item.objectId\n            });\n        }\n    });\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Escoge \" + modifier.name + \":\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction addModifier(recipientId, productId, modifierId, itemId){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let orderItemModifier = new OrderItemModifier();\n\n    orderItemModifier.set('modifier', {\n        __type: \"Pointer\",\n        className: \"Modifier\",\n        objectId: modifierId\n    });\n\n    orderItemModifier.set('modifierItem', {\n        __type: \"Pointer\",\n        className: \"ModifierItem\",\n        objectId: itemId\n    });\n\n    //orderItemModifier.set('price', itemId.price)\n\n    orderItemModifier.save(undefined, {\n        success: function(result) {\n            item.modifiers.push({\n                __type: \"Pointer\",\n                className: \"OrderItemModifier\",\n                objectId: result.id\n            });\n\n            saveCart(recipientId);\n            renderAddProduct(recipientId, productId)\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n\n}\n\nfunction checkModifiers(recipientId, productId, modifiers){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let exist = false;\n    let result = [];\n\n    modifiers.forEach(function (modifier) {\n        exist = false;\n\n        item.modifiers.forEach(function (itemModifier){\n            console.log(itemModifier.objectId)\n            //exist true\n        });\n\n        if(!exist){\n            result.push(modifier);\n        }\n    });\n\n    return result;\n}\n\nfunction checkModifiersComplete(recipientId, productId, modifiers){\n    let cart = getData(recipientId, 'cart');\n    let items = cart.items;\n    let item = items.get(productId);\n    let promises = [];\n\n    console.log(modifiers);\n    console.log(modifiers.length)\n    console.log(cart.items);\n    console.log(item);\n    console.log(item.modifiers.length);\n\n    if(modifiers.length != item.modifiers.length){\n        promises = [];\n        modifiers.forEach(function (modifier) {\n            modifier.items.forEach(function (modifierItem) {\n                promises.push(new Parse.Query(ModifierItem).get(modifierItem.objectId).then(modifierItem => {\n                    return extractParseAttributes(modifierItem);\n                }));\n            });\n\n            return Parse.Promise.when(promises).then(function (elements) {\n                renderModifierMenu(recipientId, productId, modifier, elements);\n                return true;\n            });\n        });\n    }\n\n}\n\nfunction removeProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    new Parse.Query(OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.destroy({});\n            items.delete(productId);\n            let itemsPointers = [];\n\n            for(let [key, value] of items) {\n                itemsPointers.push({\"__type\": \"Pointer\", \"className\": \"OrderItem\", \"objectId\": value.id})\n            }\n\n            cart.itemsPointers = itemsPointers;\n            if(items.size == 0){\n                sendCart(recipientId);\n            }\n            else{\n                sendCartDetails(recipientId)\n            }\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction increaseOneProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    item.quantity++;\n\n    new Parse.Query(OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.set('amount', item.quantity);\n            orderItem.save();\n            sendCartDetails(recipientId)\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction decreaseOneProduct(recipientId, productId){\n    let cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    let items = cart.items;\n    let item = items.get(productId);\n\n    item.quantity--;\n\n    if(item.quantity > 0){\n        new Parse.Query(OrderItem).get(item.id, {\n            success: (orderItem) => {\n                orderItem.set('amount', item.quantity);\n                orderItem.save();\n                sendCartDetails(recipientId)\n            },\n            error: (orderItem, error) => {\n                console.log('error');\n                console.log(error);\n            }\n        });\n    }\n    else{\n        removeProduct(recipientId, productId)\n    }\n}\n\nfunction sendProductDescription(recipientId, productId){\n    let product = new Product();\n\n    new Parse.Query(product).get(productId).then(\n        product => {\n            let messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    \"text\": product.get('name')+\": \"+product.get('description'),\n                    \"quick_replies\":[\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Agregar\",\n                            \"payload\":\"AddProduct-\"+productId\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Seguir pidiendo\",\n                            \"payload\":\"SendContinueOrder\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Ver carrito\",\n                            \"payload\":\"SendCart\"\n                        }\n                    ]\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            return bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    );\n}\n\nfunction saveCart(recipientId){\n    let consumerCart = new Cart();\n    let consumer = getData(recipientId, 'consumer');\n    let address = getData(recipientId, 'address');\n    let cart = getData(recipientId, 'cart');\n    let paymentMethod = getData(recipientId, 'paymentMethod');\n    let items = [];\n    let item;\n\n    for(let [id, properties] of cart.items){\n\n        item = new OrderItem();\n\n        if(properties.hasOwnProperty('id')){\n            item.set('id', properties.id);\n        }\n\n        item.set('product', {\n            __type: \"Pointer\",\n            className: \"Product\",\n            objectId: id\n        });\n        item.set('price', properties.price);\n        item.set('amount', properties.quantity);\n        item.set('modifiers', properties.modifiers);\n        item.set('modifiersGroups', []);\n        items.push(item);\n    }\n\n    Parse.Object.saveAll(items, {\n        success: function(result) {\n            let itemsPointers = [];\n            for(let item of result){\n                let itemId = item.get('product').objectId;\n                cart.items.get(itemId).id = item.id;\n\n                itemsPointers.push({\"__type\":\"Pointer\", \"className\": \"OrderItem\", \"objectId\": item.id})\n            }\n\n            if(cart.hasOwnProperty('id')){\n                consumerCart.set('id', cart.id);\n            }\n\n            if(typeof paymentMethod != 'undefined'){\n                consumerCart.set('paymentMethod', paymentMethod.method)\n            }\n\n            consumerCart.set('consumerAddress', {\n                __type: \"Pointer\",\n                className: \"ConsumerAddress\",\n                objectId: address.objectId\n            });\n            consumerCart.set('consumer', {\n                __type: \"Pointer\",\n                className: \"Consumer\",\n                objectId: consumer.objectId\n            });\n            consumerCart.set('items', itemsPointers);\n\n            consumerCart.save(undefined, {\n                success: function(result) {\n                    cart['id'] = result.id;\n                    cart['rawParseObject'] = result;\n                    cart['itemsPointers'] = itemsPointers;\n                },\n                error: function(user, error) {\n                    console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction saveOrder(recipientId){\n    let order = new Order();\n    let consumer = getData(recipientId, 'consumer');\n    let customer = getData(recipientId, 'customer');\n    let cart = getData(recipientId, 'cart');\n    let address = getData(recipientId, 'address');\n    let paymentMethod = getData(recipientId, 'paymentMethod');\n    let pointSale = getData(recipientId, 'pointSale');\n    let state0 = orderStates.get(0);\n    let total = 0 ;\n\n    cart.items.forEach(function(value, key){\n        total += value.quantity * value.price;\n    });\n\n    order.set('consumer', { __type: 'Pointer', className: 'Consumer', objectId: consumer.objectId });\n    order.set('consumerAddress', { __type: 'Pointer', className: 'ConsumerAddress', objectId: address.objectId });\n    order.set('pointSale', { __type: 'Pointer', className: 'CustomerPointSale', objectId: pointSale.objectId });\n    order.set('state', { __type: 'Pointer', className: 'OrderState', objectId: state0.objectId });\n    order.set('items', cart.itemsPointers);\n    order.set('deliveryCost', pointSale.deliveryCost);\n    order.set('total', total);\n    order.set('paymentMethod', paymentMethod.method);\n    order.set('name', consumer.name);\n    order.set('email', consumer.email);\n    order.set('phone', consumer.phone);\n    order.set('platform', 'Bot');\n\n    order.save(undefined, {\n        success: function(order) {\n\n            store.dispatch(Actions.setOrder(recipientId, order)).then(() => {\n                clearCart(recipientId);\n            });\n        },\n        error: function(user, error) {\n            console.log('Failed to create new object, with error code: ' + error.message);\n            console.log(error);\n        }\n    });\n}\n\nfunction sendPurchaseOptions(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tenemos las siguientes opciones disponibles:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver categorias\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver carrito\",\n                    \"payload\":\"SendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendEmptyCartOptions(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tenemos las siguientes opciones disponibles:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver categorias\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Mis órdenes\",\n                    \"payload\":\"SendOrders\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendCart(recipientId){\n    authentication(recipientId).then( () =>{\n        let user = getData(recipientId, 'user');\n        let customer = getData(recipientId, 'customer');\n        let consumer = getData(recipientId, 'consumer');\n        let cart = getData(recipientId, 'cart');\n        let address = getData(recipientId, 'address');\n        let customer_image_url;\n\n        if(typeof customer != 'undefined'){\n            customer_image_url = customer.image.url;\n        }\n\n        if(cart == undefined){\n            cart = createCart(recipientId);\n        }\n\n        let items = cart.items;\n\n        bot.sendTypingOn(recipientId);\n\n        let elements = [];\n        let element = {};\n        let total = 0;\n        let orderLimit = items.size;\n        let ind = 0;\n        let image;\n        let image_url;\n\n        if(orderLimit == 0){\n            renderCartEmpty(recipientId).then(()=>{\n                sendEmptyCartOptions(recipientId);\n            });\n        }\n        else{\n            items.forEach(function(value, key){\n                let product = new Parse.Query(Product);\n\n                product.get(key, {\n                    success: function (item) {\n                        image = item.get('image');\n                        image_url = customer_image_url\n                        if(image){\n                            image_url = image.url();\n                        }\n\n                        element = {};\n                        element['title'] = item.get('name');\n                        element['subtitle'] = item.get('description');\n                        element['quantity'] = value.quantity;\n                        element['price'] = parseInt(item.get('priceDefault'));\n                        element['currency'] = \"COP\";\n                        element['image_url'] = image_url;\n\n                        elements.push(element);\n                        total += element['quantity']*element['price'];\n\n                        ind++;\n\n                        if(ind == orderLimit){\n                            renderCart(recipientId, cart.id, elements, total)\n                        }\n                    },\n                    error: function (error) {\n                        alert(\"Error: \" + error.code + \" \" + error.message);\n                    }\n                })\n            });\n        }\n    });\n}\n\nfunction renderCart(recipientId, cartId, elements, total){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let address = getData(recipientId, 'address');\n    let pointSale = getData(recipientId, 'pointSale');\n    let payment_method = getData(recipientId, 'payment_method');\n    let addressData = undefined;\n\n    if(typeof payment_method == 'undefined'){\n        payment_method = {name: 'Sin definir'}\n    }\n\n    if(typeof address != 'undefined'){\n        addressData = {\n            street_1: address.address ? address.address : 'Dirección no definida',\n            street_2: address.description ? address.description : 'Sin complemento',\n            city: address.city ? address.city : 'No definida',\n            postal_code: address.postalCode ? address.postalCode : 'No definido',\n            state: address.state ? address.state : 'No definido',\n            country: address.countryCode ? address.countryCode : 'No definido'\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message:{\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"receipt\",\n                    recipient_name: user.first_name+\" \"+user.last_name,\n                    order_number: cartId,\n                    currency: \"COP\",\n                    payment_method: payment_method.name,\n                    timestamp: Math.trunc(Date.now()/1000).toString(),\n                    elements: elements,\n                    address: addressData,\n                    summary: {\n                        subtotal: total,\n                        shipping_cost: pointSale.deliveryCost,\n                        total_cost: total+pointSale.deliveryCost\n                    }\n                }\n            },\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir Pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Modificar carrito\",\n                    \"payload\":\"SendCartDetails\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Borrar carrito\",\n                    \"payload\": \"ClearAndSendCart\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction sendCartDetails(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderCartDetails(recipientId).then(()=>{\n        renderEditCartOptions(recipientId)\n    });\n}\n\nfunction renderCartDetails(recipientId){\n    let cart = getData(recipientId, 'cart');\n    let customer = getData(recipientId, 'customer');\n    let consumer = getData(recipientId, 'consumer');\n    let image_url = customer.image.url;\n    let items = cart.items;\n    let promises = [];\n\n    items.forEach(function(value, key) {\n        if (promises.length <= bot.limit) {\n            promises.push(new Parse.Query(Product).get(key).then(product => {\n                let image = product.get('image');\n                if(image){\n                    image_url = image.url();\n                }\n\n                return {\n                    \"title\": product.get('name')+\": $\"+value.price,\n                    \"subtitle\": \"Cantidad solicitada: \"+value.quantity,\n                    \"image_url\": image_url,\n                    \"buttons\": [\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Quitar\",\n                            \"payload\": \"RemoveProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Aumentar 1\",\n                            \"payload\": \"IncreaseOneProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Disminuir 1\",\n                            \"payload\": \"DecreaseOneProduct-\" + key\n                        }\n                    ]\n                };\n            }));\n        }\n    });\n\n    return Parse.Promise.when(promises).then(function(elements) {\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\":{\n                    \"type\": \"template\",\n                    \"payload\":{\n                        \"template_type\": \"generic\",\n                        \"elements\": elements\n                    }\n                }\n            }\n        };\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData)\n    });\n}\n\nfunction renderEditCartOptions(recipientId){\n\n    let messageData = {\n        \"recipient\": {\n            \"id\": recipientId\n        },\n        \"message\": {\n            \"text\": \"Opciones del carrito:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                }\n            ]\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderCartEmpty(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu carrito de compras está vacío.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction editCart(recipientId){\n    let cart = getData(recipientId, 'cart');\n\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\": {\n                \"type\": \"template\",\n                \"payload\": {\n                    \"template_type\": \"generic\",\n                    \"elements\": [\n                        {\n                            \"title\": \"Opciones\",\n                            \"image_url\": SERVER_URL+\"assets/thinking.jpg\",\n                            \"buttons\": [\n                                {\n                                    \"type\": \"web_url\",\n                                    \"url\": SERVER_URL+\"cart?\"+cart.id,\n                                    \"title\": \"Remover producto\",\n                                    \"webview_height_ratio\": \"full\",\n                                    \"messenger_extensions\": true\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction clearCart(recipientId){\n    let cart = getData(recipientId, 'cart');\n\n    if(typeof cart != 'undefined'){\n        let items = cart.items;\n        cart.itemsPointers = [];\n\n        items.forEach(function(value, key){\n            items.delete(key);\n        });\n    }\n    return Parse.Promise.as()\n}\n\nfunction clearAndSendCart(recipientId){\n    clearCart(recipientId).then(()=>{\n        sendCart(recipientId)\n    });\n}\n\nfunction checkOrder(recipientId){\n    let cart = getData(recipientId, 'cart');\n    let consumer = getData(recipientId, 'consumer');\n    let pointSale = getData(recipientId, 'pointSale');\n    let total = 0;\n\n    cart.items.forEach(function(value, key){\n        total += value.quantity * value.price;\n    });\n\n    if(pointSale.minOrderPrice && pointSale.minOrderPrice > total ){\n        sendMinOrderPriceRestriction(recipientId);\n    }\n    else if(typeof consumer.phone == 'undefined' || consumer.phone == ''){\n        setTelephone(recipientId)\n    }\n    else if(typeof consumer.email == 'undefined' || consumer.email == ''){\n        setEmail(recipientId)\n    }\n    else{\n        checkPayment(recipientId);\n    }\n\n}\n\nfunction checkAddress(recipientId){\n\n}\n\nfunction checkPayment(recipientId){\n    bot.sendTypingOn(recipientId);\n    store.dispatch(Actions.loadPaymentMethods(recipientId)).then(() => {\n        renderCheckPayment(recipientId)\n    });\n}\n\nfunction renderCheckPayment(recipientId){\n    let paymentMethods = getData(recipientId, 'paymentMethods');\n    let quick_replies = [];\n\n    for(let i in paymentMethods){\n\n        quick_replies.push({\n            \"content_type\": \"text\",\n            \"title\": paymentMethods[i].name.substring(0,20),\n            \"payload\": \"Checkout-\"+paymentMethods[i].objectId\n        });\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Como vas a pagar tu pedido? (Tu pedido se cobra cuando lo recibes)\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction checkout(recipientId, id){\n    bot.sendTypingOn(recipientId);\n\n    store.dispatch(Actions.setPaymentMethod(recipientId, id)).then(() => {\n        let paymentMethod = getData(recipientId, 'paymentMethod');\n        let paymentFunction = paymentTypes.get(paymentMethod.method.objectId);\n\n        paymentFunction(recipientId);\n    });\n}\n\nfunction sendMinOrderPriceRestriction(recipientId){\n    renderMinOrderPriceRestriction(recipientId).then(()=>{\n        sendPurchaseOptions(recipientId);\n    });\n}\n\nfunction renderMinOrderPriceRestriction(recipientId){\n    let pointSale = getData(recipientId, 'pointSale');\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"El valor minimo de una orden con domicilio es \"+pointSale.minOrderPrice+\", \\npor favor modifica tu pedido para cumplir este requisito\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendScheduleRestriction(recipientId, pointSaleSchedules){\n    let pointSale = getData(recipientId, 'pointSale');\n\n    let days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado', 'Domingo'];\n    let text ='En este momento nuestros puntos de venta estan cerrados, \\npor favor solicita tu domicilio en los siguientes horarios:\\n\\n';\n\n    for(let pointSaleSchedule of pointSaleSchedules) {\n        let daysActive = pointSaleSchedule.get('daysActive');\n        let allDay = pointSaleSchedule.get('allDay');\n\n        for(let dayID in daysActive){\n            if((daysActive.length-1) != dayID){\n                text += days[daysActive[dayID]-1]+\", \"\n            }\n            else{\n                text += \"y \"+days[daysActive[dayID]-1]+\" \"\n            }\n        }\n\n        if(allDay){\n            text += 'las 24 horas\\n'\n        }\n        else{\n            text += \"desde las \"+pointSaleSchedule.get('hourStart')+\" \";\n            text += \"hasta las \"+pointSaleSchedule.get('hourEnd');\n        }\n        text +=\"\\n\"\n    }\n    renderScheduleRestriction(recipientId, text).then(()=>{\n        sendMenu(recipientId)\n    });\n}\n\nfunction renderScheduleRestriction(recipientId, text){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": text\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendCash(recipientId){\n    saveCart(recipientId);\n\n    renderCash(recipientId).then(()=>{\n        orderConfirmation(recipientId);\n    });\n}\n\nfunction renderCash(recipientId){\n    let paymentMethod = getData(recipientId, 'paymentMethod')\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se ha registrado el pago con \"+paymentMethod.name\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction registerCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n    authentication(recipientId).then( () => {\n        let consumer = getData(recipientId, 'consumer');\n\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\": {\n                    \"type\": \"template\",\n                    \"payload\": {\n                        \"template_type\": \"generic\",\n                        \"elements\": [{\n                            \"title\": \"Registro de tarjeta de credito y finalización de tu pedido.\\n\\nEstas de acuerdo?\",\n                            \"image_url\": SERVER_URL + \"assets/images/creditCards.jpg\",\n                            \"subtitle\": \"Por razones de seguridad te redireccionaremos a una página web segura.\",\n                            \"buttons\": [\n                                {\n                                    \"type\": \"web_url\",\n                                    \"title\": \"Si\",\n                                    \"url\": SERVER_URL + \"creditCard?id=\" + consumer.objectId,\n                                    \"webview_height_ratio\": \"full\",\n                                    \"messenger_extensions\": true\n                                },\n                                {\n                                    \"type\": \"postback\",\n                                    \"title\": \"No\",\n                                    \"payload\": \"CancelRegisterCreditCard\"\n                                }]\n                        }]\n                    }\n                }\n            }\n        };\n\n        bot.sendTypingOff(recipientId);\n        return bot.callSendAPI(messageData);\n    });\n}\n\nfunction registerCreditCardAndPay(recipientId){\n    bot.setDataBuffer(recipientId, 'creditCardPayload', 'SendCreditCards');\n\n    registerCreditCard(recipientId)\n}\n\nfunction cancelRegisterCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    let userBuffer = bot.buffer[recipientId];\n\n    renderCancelRegisterCreditCard(recipientId).then(()=> {\n        if (typeof userBuffer != 'undefined' && userBuffer.hasOwnProperty('creditCardPayload')) {\n            checkPayment(recipientId);\n        }\n        else{\n            sendAccount(recipientId);\n        }\n    });\n}\n\nfunction renderCancelRegisterCreditCard(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Si no ingresas los datos de tu tarjeta en nuestro sitio seguro, no podras comprar con tarjeta online\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendRegisteredCreditCards(recipientId){\n    bot.sendTypingOn(recipientId);\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n\n    CreditCard.loadInStore(store, recipientId, user).then(() => {\n        let creditCards = getData(recipientId, 'creditCards');\n        if (creditCards.length == 0) {\n            renderNoRegisteredCreditCards(recipientId);\n        }\n        else {\n            renderRegisteredCreditCards(recipientId);\n        }\n    });\n}\n\nfunction renderNoRegisteredCreditCards(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Aun no tienes tarjetas registradas, deseas registrar una tarjeta?\",\n            \"quick_replies\": [\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Si\",\n                    \"payload\":\"RegisterCreditCardAndPay\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"No\",\n                    \"payload\":\"CheckPayment\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderRegisteredCreditCards(recipientId){\n    let creditCards = getData(recipientId, 'creditCards');\n    let quick_replies = [];\n\n    quick_replies.push({\n        \"content_type\": \"text\",\n        \"title\": \"Agregar tarjeta\",\n        \"payload\": \"RegisterCreditCardAndPay\"\n    });\n\n    for(let card of creditCards){\n        if (quick_replies.length < bot.limit) {\n            quick_replies.push({\n                \"content_type\": \"text\",\n                \"title\": card.type+\" \"+card.lastFour,\n                \"payload\": \"PayWithCreditCard-\" + card.lastFour\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Con cual tarjeta quieres pagar?\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction payWithCreditCard(recipientId, creditCardId){\n    bot.sendTypingOn(recipientId);\n\n    orderConfirmation(recipientId)\n}\n\nfunction orderConfirmation(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    saveOrder(recipientId);\n\n    renderOrderConfirmation(recipientId).then(()=>{\n        bot.sendTypingOff(recipientId);\n    });\n}\n\nfunction renderOrderConfirmation(recipientId){\n    let state0 = orderStates.get(0);\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": state0.messagePush+\"\\n\\nEn un momento te estaremos dando información en tiempo real sobre tu pedido\"\n        }\n    };\n\n    return bot.callSendAPI(messageData)\n}\n\nfunction orderState(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderOrderState(recipientId).then(()=>{\n        orderSent(recipientId)\n    });\n}\n\nfunction renderOrderState(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu pedido ha sido Aceptado. \\n\\nLo estan preparando en nuestra sede y te lo enviaremos en aproximadamente 10 minutos\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction orderSent(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderOrderSent(recipientId).then(()=>{\n        serviceRating(recipientId);\n    });\n}\n\nfunction renderOrderSent(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Buenas noticias, Tu pedido ha sido Enviado. \\n\\nHaz click en el mapa para vel tu pedido\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendOrderState(recipientId){\n    let orderState = getData(recipientId, 'orderState');\n    bot.sendTypingOn(recipientId);\n\n\n    renderOrderState(recipientId).then(()=>{\n        if(orderState.order == 5){\n            serviceRating(recipientId);\n        }\n    });\n}\n\nfunction renderOrderState(recipientId){\n    let orderState = getData(recipientId, 'orderState');\n    if(orderState.order == 6){\n        return Parse.Promise.as()\n    }\n    else{\n        let messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"text\": orderState.messagePush\n            }\n        };\n        bot.sendTypingOff(recipientId);\n\n        return bot.callSendAPI(messageData);\n    }\n}\n\nfunction serviceRating(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Califica tu experiencia para ayudarnos a mejorar. \\n\\nDe 1 a 5 cuantas extrellas merece nuestro servicio?\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"5 (Excelente)\",\n                    \"payload\":\"SetScore-5\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"4 (Bien)\",\n                    \"payload\":\"SetScore-4\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"3 (Regular)\",\n                    \"payload\":\"SetScore-3\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Mal)\",\n                    \"payload\":\"SetScore-2\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Muy mal)\",\n                    \"payload\":\"SetScore-1\"\n                },\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction setScore(recipientId, score){\n    let order = getData(recipientId, 'order');\n\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('rateOrder', { orderId: order.objectId, score: Number(score), comment: ''}).then(\n        function(result){\n            thank(recipientId)\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n}\n\nfunction thank(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Gracias, esperamos tener el gusto de atenderle nuevamente\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction searchProducts(recipientId, query, index){\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('search', { businessId: BUSINESS_ID, q: query }).then(\n        function(result){\n            if(result.length == 0){\n                renderSearchEmpty(recipientId);\n            }\n            else if(result.length == 1 && result[0].type == 'Category'){\n                sendProducts(recipientId, result[0].id, 0)\n            }\n            else{\n                if(index == undefined)\n                    index = 0;\n                else if( typeof index == 'string')\n                    index = parseInt(index);\n\n                if(index == 0){\n                    renderSearchInitial(recipientId);\n                    bot.sendTypingOn(recipientId);\n                }\n\n                splitSearchResult(recipientId, result, index).then(elements => {\n                    let idx = Object.keys(result).length;\n                    let buttons = [];\n                    let catIni = (index+1)*bot.limit;\n                    let catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n                    if(idx > (index+1)*bot.limit){\n                        buttons.push({\n                            type: \"postback\",\n                            title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n                            payload: \"Search-\"+(index+1),\n                        });\n\n                        elements.push({\n                            title: \"Ver más productos \",\n                            subtitle: \"Productos disponibles\",\n                            buttons: buttons\n                        });\n                    }\n\n                    let messageData = {\n                        recipient: {\n                            id: recipientId\n                        },\n                        message: {\n                            attachment: {\n                                type: \"template\",\n                                payload: {\n                                    template_type: \"generic\",\n                                    elements: elements\n                                }\n                            }\n                        }\n                    };\n\n                    bot.sendTypingOff(recipientId);\n                    return bot.callSendAPI(messageData);\n                });\n            }\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        }\n    );\n}\n\nfunction renderSearchInitial(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se han encontrado los siguientes productos:\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderSearchEmpty(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"No se han encontrado productos que coincidan\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction splitSearchResult(recipientId, products, index){\n    let customer = getData(recipientId, 'customer');\n    let image_url;\n    let idx = 0;\n    let elements = [];\n    let promises = [];\n\n    products.forEach(function(item){\n        if(item && item.name && item.type == 'Product'){\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                promises.push(new Parse.Query(Product).get(item.id).then(product => {\n                    return extractParseAttributes(product);\n                }));\n                idx = idx+1;\n            }\n        }\n    });\n\n    return Parse.Promise.when(promises).then(function(productObjects) {\n        productObjects.forEach(function(product) {\n            let image = product.image;\n            image_url = (typeof image != 'undefined') ? image.url : customer.image.url;\n            elements.push({\n                title: product.name +\": $\"+ product.priceDefault,\n                subtitle: product.description,\n                image_url: image_url,\n                buttons: [{\n                    type: \"postback\",\n                    title: 'Agregar',\n                    payload: \"AddProduct-\"+product.objectId,\n                },\n                    {\n                        type: \"postback\",\n                        title: 'Ver descripción',\n                        payload: \"SendProductDescription-\"+product.objectId,\n                    }]\n            });\n        })\n        return elements;\n    });\n\n    //    subtitle: item.get('description'),\n}\n\nfunction sendHelp(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderHelp(recipientId).then(()=>{\n        sendContactUs(recipientId);\n    });\n}\n\nfunction renderHelp(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"InOut Bot.\\n\\nTe permite visualizar las opciones de productos, agregarlos al carrito y realizar tu compra por medio del chat de facebook.\\n\\nFuncionalidades disponibles: \\n\\n'Hola', para iniciar la conversación\\n'Pedir Domicilio', si quieres realizar un domicilio\\n'Carrito', para ver el estado actual de tu carrito\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData)\n}\n\nfunction sendContactUs(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \" Para mayor información puedes contactarnos en:\\n\\n Web: http://www.inoutdelivery.com/\\n\\n Email: soporte@inoutdelivery.com\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendOrders(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( () =>{\n        let consumer = getData(recipientId, 'consumer');\n        Parse.Cloud.run('ordersBot', { businessId: BUSINESS_ID, consumerId: consumer.objectId}).then( orders => {\n            store.dispatch(Actions.setOrders(recipientId, orders)).then(() => {\n                renderOrders(recipientId);\n            });\n        }).fail(error => {\n            console.log('error');\n            console.log(error);\n        });\n    });\n}\n\nfunction renderOrders(recipientId){\n    let customer = getData(recipientId, 'customer');\n    let orders = getData(recipientId, 'orders');\n    let elements = [];\n\n    elements.push({\n        \"title\": \"Nueva orden\",\n        \"subtitle\": \"Puedes realizar una orden\",\n        \"image_url\": SERVER_URL+\"assets/conversation.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva orden\",\n                \"payload\": \"NewOrder\"\n            }\n        ]\n    });\n\n    for(let order of orders.ongoing) {\n        if (elements.length < bot.limit){\n            let datetime = DateTime.dateString(order.createdAt);\n            let image_url = customer.image.url;\n            let title = (order.orderNumber)? 'Orden: '+order.orderNumber :  'Orden: '+dateFormat(datetime, \"h:MM:ss TT dd/mm/yyyy\")\n\n            elements.push({\n                \"title\": title,\n                \"subtitle\": 'Estado: '+order.state.name+', Valor: $'+order.total,\n                \"image_url\": image_url,\n                \"buttons\": [\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Ver orden\",\n                        \"payload\": \"SendOrder-\"+order.objectId\n                    },\n                    {\n                        \"type\": \"postback\",\n                        \"title\": \"Cancelar orden\",\n                        \"payload\": \"CancelOrder-\"+order.objectId\n                    }\n                ]\n            });\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendOrder(recipientId, id){\n    bot.sendTypingOn(recipientId);\n    authentication(recipientId).then( () =>{\n        let orders = getData(recipientId, 'orders');\n        let customer = getData(recipientId, 'customer');\n        let customer_image_url = customer.image.url;\n        let currentOrder;\n        let elements = [];\n        let element;\n        let image_url;\n        let product;\n\n        for(let order of orders.ongoing){\n            if(order.objectId == id){\n                currentOrder = order;\n            }\n        }\n\n        for(let item of currentOrder.items){\n            product = item.product;\n            image_url = customer_image_url;\n\n            if(product.image){\n                image_url = product.image.url;\n            }\n\n            element = {};\n            element['title'] = product.name;\n            element['quantity'] = item.amount;\n            element['price'] = item.price;\n            element['currency'] = \"COP\";\n            element['image_url'] = image_url;\n\n            elements.push(element);\n        }\n\n        renderOrder(recipientId, currentOrder, elements)\n    });\n}\n\nfunction renderOrder(recipientId, order, elements){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let address = order.consumerAddress;\n    let pointSale = order.pointSale;\n    let payment_method = order.paymentMethod;\n    let addressData = undefined;\n\n    if(typeof payment_method == 'undefined'){\n        payment_method = {name: 'Sin definir'}\n    }\n\n    if(typeof address != 'undefined'){\n        addressData = {\n            street_1: address.address ? address.address : 'Dirección no definida',\n            street_2: address.description ? address.description : 'Sin complemento',\n            city: address.city ? address.city : 'No definida',\n            postal_code: address.postalCode ? address.postalCode : 'No definido',\n            state: address.state ? address.state : 'No definido',\n            country: address.countryCode ? address.countryCode : 'No definido'\n        }\n    }\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message:{\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"receipt\",\n                    recipient_name: user.first_name+\" \"+user.last_name,\n                    order_number: order.objectId,\n                    currency: \"COP\",\n                    payment_method: payment_method.name,\n                    timestamp: Math.trunc(Date.now()/1000).toString(),\n                    elements: elements,\n                    address: addressData,\n                    summary: {\n                        subtotal: order.total,\n                        shipping_cost: pointSale.deliveryCost,\n                        total_cost: order.total+pointSale.deliveryCost\n                    }\n                }\n            },\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Nueva orden\",\n                    \"payload\":\"NewOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver órdenes\",\n                    \"payload\":\"SendOrders\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Cancelar orden\",\n                    \"payload\":\"CancelOrder-\"+order.objectId\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n\n}\n\nfunction newOrder(recipientId){\n    clearCart(recipientId).then(()=>{\n        sendCart(recipientId);\n        sendAddressesWithTitle(recipientId);\n    });\n\n}\n\nfunction cancelOrder(recipientId, id){\n    Parse.Cloud.run('changeStatusOrder', { status: \"canceledByUser\", orderId: id}).then( () => {\n        renderCancelOrder(recipientId).then(()=>{\n            sendOrders(recipientId);\n        });\n    }).fail(error => {\n        console.log('error');\n        console.log(error);\n    });\n}\n\nfunction renderCancelOrder(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La orden ha sido cancelada.\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction sendAccount(recipientId){\n    bot.sendTypingOn(recipientId);\n\n    authentication(recipientId).then( ()=> {\n        renderAccount(recipientId)\n    });\n}\n\nfunction renderAccount(recipientId){\n    let user = getData(recipientId, 'user');\n    let consumer = getData(recipientId, 'consumer');\n    let elements = [{\n        \"title\": 'Ver direcciones',\n        \"subtitle\": 'Editar y eliminar direcciones',\n        \"image_url\": SERVER_URL+\"assets/thinking.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": 'Ver direcciones',\n                \"payload\": \"SendAddresses\"\n            }\n        ]\n    },{\n        \"title\": 'Ver tarjetas de credito',\n        \"subtitle\": 'Editar y eliminar tarjetas de credito',\n        \"image_url\": SERVER_URL+\"assets/money.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": 'Ver tarjetas',\n                \"payload\": \"SendCreditCards\"\n            }\n        ]\n    }];\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction renderYouAreWelcome(recipientId){\n    bot.sendTypingOff(recipientId);\n\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"De nada, gracias por usar nuestros servicios\"\n        }\n    };\n\n    return bot.callSendAPI(messageData);\n}\n\nfunction addCreditCard(recipientId, token, data){\n    console.log('addCreditCard');\n    let expiration = data['expiry'].replace(/\\s+/g,\"\").split('/');\n\n    return rp({\n        uri: PARSE_SERVER_URL+'/functions/addCreditCard',\n        headers: {\n            'Content-Type': 'text/plain;charset=UTF-8',\n            'X-Parse-Application-Id': PARSE_APP_ID,\n            'X-Parse-Session-Token': token\n        },\n        method: 'POST',\n        json: { \"number\": data['number'].replace(/\\s+/g,\"\"),\n            \"holderName\": data['holderName'],\n            \"verificationNumber\": data['cvc'],\n            \"expirationMonth\": expiration[0],\n            \"expirationYear\": expiration[1]\n        }\n    }).then( body => {\n        rp({\n            uri: SERVER_URL+'creditCardRegistered',\n            method: 'POST',\n            json: { \"recipientId\": recipientId}\n        })\n    }).catch(error =>{\n        console.log('error');\n        console.log(error);\n    });\n}\n\nfunction createOrder(recipientId){\n    let userData = getData(recipientId);\n    Object.assign(userData, {'order': new Map()});\n    return getData(recipientId, 'order')\n}\n\nfunction checkSchedulesDeliveryPointSale(recipientId){\n    let pointSale = getData(recipientId, 'pointSale');\n    let params = {\n        pointSale: pointSale.objectId,\n        date: (new Date()).toJSON().slice(0, 10)\n    };\n\n    return Parse.Cloud.run('getSchedulesDeliveryPointSale', params).then((result) => {\n        return result;\n    }).fail(error => {\n        console.log('Error code: ' + error.message);\n    });\n}\n\nfunction renderShoppingCartOptions(recipientId){\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Opciones del carrito\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir pidiendo\",\n                    \"payload\":\"SendContinueOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Borrar carrito\",\n                    \"payload\": \"ClearAndSendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nfunction updateCart(recipientId){\n    let consumerCart = new Cart();\n    let localCart = getData(recipientId, 'cart');\n\n    new Parse.Query(consumerCart).get(localCart.id).then(\n        cart => {\n            console.log(cart);\n        },\n        (object, error) => {\n            console.log(error);\n        }\n    );\n}\n\nfunction setPayment(recipientId, id){\n\n}\n\nfunction sendRegisterFacebookUser(recipientId){\n    bot.sendTypingOn(recipientId);\n    let messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Registro exitoso.\",\n\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    return bot.callSendAPI(messageData);\n}\n\nbot.app.get('/login', function(req, res) {\n    res.sendFile(path.join(__dirname+'/views/login.html'));\n});\n\nbot.app.post('/registerUser', function (req, res) {\n    let data = req.body;\n\n    signUp(data.psid, data.uid, data.accessToken).then(user =>{\n        sendMenu(data.psid);\n    });\n\n    res.status(200).end();\n});\n\nbot.app.get('/creditCard', function(req, res) {\n    console.log('creditCard');\n    res.sendFile(path.join(__dirname+'/views/cardForm.html'));\n});\n\nbot.app.post('/registerCreditCard', function (req, res) {\n    console.log('registerCreditCard');\n    let data = req.body;\n    let consumerID = data['consumerID'];\n\n    new Parse.Query(Consumer).get(consumerID).then(consumer => {\n        if(consumer){\n            new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                let username = user.get('username');\n                let recipientId = consumer.get('conversationId');\n\n                Parse.User.logIn(username, username, {\n                    success: function(userData) {\n                        addCreditCard(recipientId, userData.getSessionToken(), data)\n                    },\n                    error: function(user, error) {\n                        console.log('error');\n                        console.log(error);\n                    }\n                });\n            });\n\n            res.sendFile(path.join(__dirname+'/views/cardRegistered.html'));\n        }\n    },\n    (object, error) => {\n        console.log(error);\n    });\n});\n\nbot.app.post('/creditCardRegistered', function (req, res) {\n    console.log('creditCardRegistered');\n    let data = req.body;\n    let userBuffer = bot.buffer[data.recipientId];\n\n    if (typeof userBuffer != 'undefined') {\n        if (userBuffer.creditCardPayload == 'SendCreditCards') {\n            sendRegisteredCreditCards(data.recipientId);\n            delete userBuffer.creditCardPayload\n        }\n        else {\n            sendCreditCards(data.recipientId)\n        }\n    }\n    else {\n        sendCreditCards(data.recipientId)\n    }\n})\n\nbot.app.post('/changeOrderState', function (req, res) {\n    console.log('changeOrderState');\n    let data = req.body;\n\n    new Parse.Query(Consumer).get(data['consumerID']).then(consumer => {\n            if(consumer){\n                new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                    let username = user.get('username');\n                    let recipientId = consumer.get('conversationId');\n\n                    new Parse.Query(OrderState).get(data['stateID']).then(orderState => {\n                        store.dispatch(Actions.setOrderState(recipientId, orderState)).then(() => {\n                            sendOrderState(recipientId);\n                        })\n                    })\n                    .fail(error => {\n                        console.log('Error code: ' + error.message);\n                    });\n                });\n            }\n        },\n        (object, error) => {\n            console.log(error);\n        });\n\n    res.json({result: 'OK'});\n});\n\nlet paymentTypes = new Map();\n\nnew Parse.Query(PaymentMethod).find().then(methods => {\n    for(let method of methods){\n        let tmpMethod = extractParseAttributes(method);\n        if(tmpMethod.objectId == 'Nn0joKC5VK'){\n            paymentTypes.set('Nn0joKC5VK', sendCash);\n        }\n        else if(tmpMethod.objectId == 'UdK0Ifc4IF'){\n            paymentTypes.set('UdK0Ifc4IF', sendCash);\n        }\n        else if(tmpMethod.objectId == 'CHzoYrEtiY'){\n            paymentTypes.set('CHzoYrEtiY', sendRegisteredCreditCards);\n        }\n    }\n},\n(object, error) => {\n    console.log(error);\n});\n\nlet orderStates = new Map();\n\norderStates.set('Nn0joKC5VK', sendCash);\n\nnew Parse.Query(OrderState).find().then( states => {\n    for(let state of states){\n        orderStates.set(state.get('order'), extractParseAttributes(state));\n    }\n},\n(object, error) => {\n    console.log(error);\n});\n\nlet creditCardImages = new Map();\n\ncreditCardImages.set('VISA', 'assets/images/visaCard.jpg');\ncreditCardImages.set('MASTERCARD', 'assets/images/masterCard.jpg')\ncreditCardImages.set('AMERICAN', 'assets/images/americanCard.jpg')\ncreditCardImages.set('DEFAULT', 'assets/images/creditCards.jpg')\n\n\nstore.dispatch({type: types.APP_LOADED});\n\nmodule.exports = {store, getData}"]}