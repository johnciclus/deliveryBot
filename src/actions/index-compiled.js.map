{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/* @flow */\nimport * as types from '../constants/actionTypes'\nimport Parse from 'parse'\n//import { push } from 'react-router-redux'\nimport config from 'config'\nimport GetProductsParams from '../models/GetProductsParams'\nimport {\n  Cart,\n  Consumer,\n  ConsumerAddress,\n  CustomerPointSale,\n  Modifier,\n  ModifierGroup,\n  ModifierItem,\n  Order,\n  OrderItem,\n  OrderItemModifier,\n  OrderItemModifierGroup\n} from '../ParseModels'\nconst BUSINESS_ID = (process.env.BUSINESS_ID) ? (process.env.BUSINESS_ID) : config.get('BUSINESS_ID');\n//const geocoder = new google.maps.Geocoder()\n\n/**\n* Load products from Parse.\n*/\nexport function loadProducts(\n  lat, lng, category, pointSale\n) {\n  return (dispatch, getState) => {\n    let params = new GetProductsParams(BUSINESS_ID)\n    if (lat && lng) {\n      params.lat = lat\n      params.lng = lng\n    }\n    const currentCategory = getState().routing.locationBeforeTransitions.query.category\n    if (category) {\n      params.category = category\n    } else if (currentCategory) {\n      params.category = currentCategory\n    }\n    if (pointSale) {\n      params.pointSale = pointSale\n    }\n    dispatch({type: types.LOADING_PRODUCTS})\n    Parse.Cloud.run('getProducts', params).then((results) => {\n      dispatch({\n        type: types.PRODUCTS_LOADED,\n        data: results\n      })\n    }).fail((e) => {\n      dispatch({type: types.PRODUCTS_LOAD_ERROR})\n      try {\n        if (e.message.code === 1001) {\n          dispatch({type: types.OUT_OF_COVERAGE, data: {lat, lng}})\n          dispatch(loadPointSales())\n        }\n      } catch (e) {}\n    })\n  }\n}\n\n/**\n* Filter products by given category\n*/\nexport function filterProductsByCategory(category) {\n  return {\n    type: types.FILTER_PRODUCTS_BY_CATEGORY,\n    data: category\n  }\n}\n\n/**\n* Add Product to cart action\n*/\nexport function addProductToCart(cartItem) {\n  return (dispatch, getState) => {\n    const { cart } = getState()\n    if (cart.consumerAddress.location.isValid()) {\n      dispatch({\n        type: types.ADD_TO_CART,\n        data: cartItem\n      })\n    } else {\n      dispatch(showAddressSearchModal())\n    }\n  }\n}\n\n/**\n* Empty cart action\n*/\nexport function emptyCart() {\n  return { type: types.EMPTY_CART }\n}\n\n/**\n* Load User's Facebook data.\n*/\nfunction loadFacebookUserData(accessToken, dispatch) {\n  FB.api('/me', {\n    fields: 'email, first_name, last_name',\n    access_token: accessToken\n  }, function (res) {\n    if (!res.error) {\n      dispatch(facebookDataLoaded(res))\n    } else {\n      //TODO dispatch error event\n    }\n  })\n}\n\n/**\n* Facebook Data Loaded\n*/\nexport function facebookDataLoaded(data) {\n  return {type: types.FACEBOOK_USER_DATA_LOADED, data}\n}\n\n/**\n* Load Consumer Addresses and dispatch action with the results.\n*/\nfunction loadConsumerAddresses(consumer) {\n  if (consumer == null) return\n  return dispatch => {\n    const query = new Parse.Query(ConsumerAddress).equalTo('consumer', consumer)\n    query.find().then(addresses => {\n      dispatch(consumerAddressesLoaded(addresses))\n    }).fail(e => {\n      //TODO dispatch action with error\n    })\n  }\n\n}\n\n/**\n* Load Consumer of given user\n*/\nexport function loadConsumer(user, mainDispatch) {\n  return dispatch => {\n    new Parse.Query(Consumer).equalTo('user', user).first().then(consumer => {\n      if (consumer) {\n        dispatch({type: types.CONSUMER_LOADED, data: {consumer}})\n        dispatch(loadConsumerAddresses(consumer))\n        dispatch(loadConsumerOrders())\n        //mainDispatch(push('/'))\n      } else {\n        const authData = user.get('authData')\n        if (authData && authData.hasOwnProperty('facebook')) {\n          if (FB) {\n            loadFacebookUserData(authData.facebook.access_token, dispatch)\n          }\n        }\n        dispatch({type: types.CONSUMER_NOT_FOUND, data: {user}})\n      }\n    }).fail(e => {\n      dispatch({type: types.CONSUMER_NOT_FOUND, data: {user}})\n    })\n  }\n}\n\n/**\n* Create Consumer\n*/\nexport function createConsumer(consumerData, mainDispatch) {\n  return dispatch => {\n    const consumer = new Consumer()\n    consumer.save(consumerData).then( consumer => {\n      dispatch({type: types.CONSUMER_CREATED, data: {\n        user: consumerData.user, consumer\n      }})\n      dispatch({type: types.CONSUMER_LOADED, data: {consumer}})\n      mainDispatch(push('/'))\n    }).fail(e => {\n      dispatch({type: types.CONSUMER_NOT_FOUND, data: {user: consumerData.user}})\n    })\n  }\n}\n\n/**\n* Update Consumer.\n* Update consumer's user in success callback.\n* It only dispatches CONSUMER_UPDATED if Consumer and ParseUser were\n* saved successfully.\n*/\nexport function updateConsumer(consumerData) {\n  return dispatch => {\n    dispatch({type: types.UPDATE_CONSUMER, data: consumerData})\n    const consumer = new Consumer()\n    consumer.objectId = consumerData.objectId\n    consumer.save(consumerData).then( consumer => {\n      let username = consumer.get('email') + BUSINESS_ID\n      consumer.get('user').save({username}).then(u => {\n        dispatch({type: types.CONSUMER_UPDATED, data: {consumer}})\n        dispatch({type: types.HIDE_PROFILE})\n      }).fail(e => {\n        dispatch({type: types.CONSUMER_UPDATE_ERROR, data: {consumer}})\n      })\n    }).fail(e => {\n      dispatch({type: types.CONSUMER_UPDATE_ERROR, data: {consumer}})\n    })\n  }\n}\n\n/**\n* Facebook Login Success\n*/\nexport function facebookLogin (mainDispatch) {\n  return dispatch => {\n    Parse.FacebookUtils.logIn(null, {\n      success: function(user) {\n        if (!user.existed()) {\n          dispatch({type: types.FACEBOOK_REGISTER_SUCCESS})\n        } else {\n          dispatch({type: types.FACEBOOK_LOGIN_SUCCESS, data: user})\n        }\n        mainDispatch(push('/'))\n        dispatch(loadConsumer(user, mainDispatch))\n      },\n      error: function(user, error) {\n        alert(\"Login cancelado.\")\n      }\n    })\n  }\n}\n\n/**\n* Logout\n*/\nexport function logout(mainDispatch) {\n  return dispatch =>{\n\n    if(Parse.User.current()) {\n      Parse.User.logOut()\n    }\n\n    mainDispatch(push('/'))\n    window.location = \"/\"\n    dispatch({type: types.LOGOUT})\n  }\n}\n\n/**\n* Email Login Action\n*/\nexport function emailLogin(userData, mainDispatch) {\n  mainDispatch({type: types.EMAIL_LOGIN})\n  return dispatch => {\n    Parse.User.logIn(userData.email + BUSINESS_ID, userData.password).then(user => {\n      dispatch({\n        type: types.EMAIL_LOGIN_SUCCESS,\n        data: user\n      })\n      mainDispatch(push('/'))\n      dispatch(loadConsumer(user, mainDispatch))\n    }).fail(e => {\n      dispatch({\n        type: types.EMAIL_LOGIN_ERROR,\n        data: e\n      })\n    })\n  }\n}\n\n/**\n* Email Login Action\n*/\nexport function emailRegister(userData, mainDispatch) {\n  mainDispatch({type: types.EMAIL_REGISTER})\n  return dispatch => {\n    Parse.User.signUp(userData.email + BUSINESS_ID, userData.password).then(user => {\n      dispatch({\n        type: types.EMAIL_REGISTER_SUCCESS,\n        data: {user, userData}\n      })\n      delete userData.password\n      delete userData.passwordConfirmation\n      userData.user = user\n      dispatch(createConsumer(userData, mainDispatch))\n    }).fail(e => {\n      dispatch({\n        type: types.EMAIL_REGISTER_ERROR,\n        data: e\n      })\n    })\n  }\n}\n\n/**\n* Geolocation Position Acquired action.\n*/\nexport function geolocationPositionAcquired(ll, mainDispatch) {\n  geocodeLocation(ll, mainDispatch, true)\n  return {\n    type: types.GEOLOCATION_POSITION_ACQUIRED,\n    data: ll\n  }\n}\n\n/**\n* Map Address Changed\n*/\nexport function mapAddressChanged(address) {\n  return {\n    type: types.MAP_ADDRESS_CHANGED,\n    data: address\n  }\n}\n\n/**\n* Address Saved\n*/\nexport function addressSaved(address) {\n  return {\n    type: types.ADDRESS_SAVED,\n    data: address\n  }\n}\n\n/**\n* Address Saved Error\n*/\nexport function addressSaveError() { return { type: types.ADDRESS_SAVE_ERROR } }\n\n/**\n* Geocode Given Location and dispatch MAP_ADDRESS_CHANGED action.\n*/\nfunction geocodeLocation(location, mainDispatch, fromGeoLocation) {\n  geocoder.geocode({location}, (results, status) => {\n    if (status === \"OK\") {\n      const place = results[0]\n      const address = {}\n\n      var isBetweenAddress = -1\n      isBetweenAddress = place.formatted_address.indexOf(\" a \")\n      if (isBetweenAddress === -1) {\n        address.address = place.formatted_address\n      } else {\n        let street = place.formatted_address.substr(0, isBetweenAddress)\n        let city = \"\"\n        place.address_components.forEach(component => {\n          if (component.types.indexOf(\"locality\") !== -1) city = component.short_name\n        })\n        address.address = street + \", \" + city\n      }\n\n      address.location = {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      }\n      address.fromGeoLocation = fromGeoLocation\n      mainDispatch(mapAddressChanged(address))\n    }\n  })\n}\n\n/**\n* Map Location Changed, geocode and send MAP_ADDRESS_CHANGED with geocoded result\n*/\nexport function mapBoundsChanged(mapBounds, mainDispatch) {\n  mainDispatch({\n    type: types.MAP_BOUNDS_CHANGED,\n    data: mapBounds.bounds\n  })\n  return dispatch => {\n    geocodeLocation(mapBounds.center, mainDispatch)\n  }\n}\n\n/**\n* Address Text Changed\n*/\nexport function addressTextChanged(address) {\n  return {\n    type: types.ADDRESS_TEXT_CHANGED,\n    data: address\n  }\n}\n\n/**\n* SHOW_MAP_ADDRESS action\n*/\nexport function showMapAddress() {\n  return { type: types.SHOW_MAP_ADDRESS }\n}\n\n/**\n* HIDE_MAP_ADDRESS action\n*/\nexport function hideMapAddress() {\n  return { type: types.HIDE_MAP_ADDRESS }\n}\n\n/**\n* SHOW_ADDRESS_FORM action\n*/\nexport function showAddressForm() {\n  return { type: types.SHOW_ADDRESS_FORM }\n}\n\n/**\n* HIDE_ADDRESS_FORM action\n*/\nexport function hideAddressForm() {\n  return { type: types.HIDE_ADDRESS_FORM }\n}\n\n/**\n* Save ConsumerAddress on Parse.\n*/\nfunction saveConsumerAddress(consumerAddress, dispatch, pendingOrder, cart) {\n  const ConsumerAddress = Parse.Object.extend('ConsumerAddress')\n  const parseConsumerAddress = new ConsumerAddress()\n  if (!consumerAddress.consumer) { return }\n  if (consumerAddress.objectId) {\n    parseConsumerAddress.objectId = consumerAddress.objectId\n  }\n  const consumer = consumerAddress.consumer.rawParseObject\n  const location = consumerAddress.location\n  const parseGeoPoint = new Parse.GeoPoint(location.lat, location.lng)\n  parseConsumerAddress.set('location', parseGeoPoint)\n  parseConsumerAddress.set('consumer', consumer)\n  parseConsumerAddress.set('address', consumerAddress.address)\n  parseConsumerAddress.set('name', consumerAddress.name)\n  parseConsumerAddress.set('description', consumerAddress.description)\n  parseConsumerAddress.save().then(consumerAddress => {\n    dispatch(addressSaved(consumerAddress))\n    dispatch(loadConsumerAddresses(consumer, dispatch))\n    dispatch(hideAddressForm())\n  }).fail(e => {\n    dispatch(addressSaveError())\n  })\n}\n\n/**\n* CONSUMER_ADDRESS_CHANGED action\n*/\nexport function consumerAddressChanged(consumerAddress, dispatch, pendingOrder, cart) {\n  saveConsumerAddress(consumerAddress, dispatch, pendingOrder, cart)\n  return {\n    type: types.CONSUMER_ADDRESS_CHANGED,\n    data: consumerAddress\n  }\n}\n\n/**\n* CONSUMER ADDRESS LOADED action\n*/\nexport function consumerAddressesLoaded(consumerAddresses) {\n  return {\n    type: types.CONSUMER_ADDRESSES_LOADED,\n    data: consumerAddresses\n  }\n}\n\n/**\n* SET_CURRENT_ADDRESS action\n*/\nexport function setCurrentAddress(address) {\n  return {\n    type: types.SET_CURRENT_ADDRESS,\n    data: address\n  }\n}\n\n/**\n* SHOW_ADDRESS_LIST action\n*/\nexport function showAddressList() {return {type: types.SHOW_ADDRESS_LIST}}\n\n/**\n* HIDE_ADDRESS_LIST action\n*/\nexport function hideAddressList() {return {type: types.HIDE_ADDRESS_LIST}}\n\n/**\n* Load Payment Methods.\n*/\nexport function loadPaymentMethods() {\n  return dispatch => {\n    Parse.Cloud.run('paymentMethods',{\n      languageCode: 'es'\n      //businessId: BUSINESS_ID\n    }).then((results) => {\n      dispatch({\n        type: types.PAYMENT_METHODS_LOADED,\n        data: results\n      })\n    })\n  }\n}\n\n/**\n* Select Payment Method action\n*/\nexport function selectPaymentMethod(paymentMethod) {\n  return {\n    type: types.SELECT_PAYMENT_METHOD,\n    data: paymentMethod\n  }\n}\n\n/**\n* Create New Address action\n*/\nexport function createNewAddress() { return { type: types.CREATE_NEW_ADDRESS } }\n\n/**\n* Get Geolocation\n*/\nexport function getGeoLocation(dispatch) {\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition(position => {\n      const ll = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n      dispatch(geolocationPositionAcquired(ll, dispatch))\n    })\n  }\n}\n\n/**\n* Convert Cart to Order\n*/\nfunction cartToOrder(cart, items) {\n  return {\n    items: items,\n    comment: cart.comment,\n    consumer: cart.consumer.rawParseObject,\n    pointSale: cart.pointSale.rawParseObject,\n    paymentMethod: cart.paymentMethod,\n    consumerAddress: cart.consumerAddress.rawParseObject,\n    total: cart.total,\n    deliveryCost: cart.pointSale.deliveryCost,\n    email: cart.consumer.email,\n    name: cart.consumer.name,\n    phone: cart.consumer.phone\n  }\n}\n\n/**\n* Create Order Action\n*/\nexport function createOrder(cart, mainDispatch) {\n  mainDispatch(push('/'))\n  mainDispatch({type: types.CREATE_ORDER})\n  const consumer = cart.consumerAddress.consumer\n\n  //Go to Login route if cart has no consumer\n  if (!consumer.objectId) {\n    mainDispatch({type: types.HIDE_CART})\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(push('/login'))\n  }\n\n  //Check that cart has at least 1 item.\n  if (cart.items.length === 0) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(showEmptyCartModal())\n  }\n\n  //If payment method isn't set, dispatch action to show payment method modal\n  if (!cart.paymentMethod) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(showPaymentNotSelectedModal())\n  }\n\n  //If cart total price is below point of sale minimum price dispatch action\n  //to show minimum price modal\n  if (cart.total < cart.pointSale.minOrderPrice) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(cartTotalIsBelowMinimumPrice())\n  }\n\n  //If cart hasn't consumer address show list of address.\n  if (!cart.consumerAddress.objectId) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(showAddressList())\n  }\n\n  //Check if Point of Sale is open\n  if (!cart.pointSaleIsOpen) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(showPointSaleClosedModal())\n  }\n  //Check if is inside coverage\n  if (cart.outOfCoverage) {\n    mainDispatch({type: types.CREATE_ORDER_ERROR})\n    return mainDispatch(showOufOfCoverageModal())\n  }\n\n  const items = []\n  cart.items.forEach(item => {\n    const orderItem = new OrderItem()\n    orderItem.set('modifiers', [])\n    orderItem.set('modifiersGroups', [])\n    orderItem.set('product', item.product.rawParseObject)\n    orderItem.set('amount', item.amount)\n    orderItem.set('price', item.price)\n    //Set OrderItemModifiers\n    item.modifiers.forEach(modifierItem => {\n      const m = new Modifier()\n      m.id = modifierItem.modifier.objectId\n      const i = new ModifierItem()\n      i.id = modifierItem.modifierItem.objectId\n      const orderItemModifier = new OrderItemModifier({\n        modifier: m,\n        modifierItem: i,\n        price: modifierItem.price\n      })\n      orderItem.add('modifiers', orderItemModifier)\n    })\n    //Set Modifiers Group\n    item.modifiersGroups.forEach(modifierGroupItem => {\n      const g = new ModifierGroup()\n      g.id = modifierGroupItem.group.objectId\n      const orderItemModifierGroup = new OrderItemModifierGroup({\n        group: g,\n        items: []\n      })\n      modifierGroupItem.items.forEach(modifierItem => {\n        const m = new Modifier()\n        m.id = modifierItem.modifier.objectId\n        const i = new ModifierItem()\n        i.id = modifierItem.modifierItem.objectId\n        orderItemModifierGroup.add('items', new OrderItemModifier({\n          modifier: m,\n          modifierItem: i,\n          price: modifierItem.price\n        }))\n      })\n      orderItem.add('modifiersGroups', orderItemModifierGroup)\n    })\n    items.push(orderItem)\n  })\n\n  const newOrder = new Order()\n  newOrder.set(cartToOrder(cart, items))\n  Parse.Object.saveAll(items).then(function () {\n    return newOrder.save()\n  }).then(order => {\n    mainDispatch({type: types.ORDER_CREATED, data: order})\n    mainDispatch(emptyCart())\n    mainDispatch(loadConsumerOrders())\n    mainDispatch(toggleCart(false))\n  }).fail(e => {\n    alert('Hubo un error al crear su pedido, por favor intenta nuevamente.')\n  })\n}\n\n/**\n* Change Cart Comment Action\n*/\nexport function changeCartComment(comment) {\n  return {\n    type: types.CHANGE_CART_COMMENT,\n    data: comment\n  }\n}\n\n/**\n* Show Payment not selected Modal action\n*/\nexport function showPaymentNotSelectedModal() {\n  return { type: types.PAYMENT_NOT_SELECTED }\n}\n\n/**\n* Show Cart is Empty Modal\n*/\nexport function showEmptyCartModal() {\n  return { type: types.SHOW_EMPTY_CART_MODAL }\n}\n/**\n* Hide Cart is Empty Modal\n*/\nexport function closeCartIsEmptyModal() {\n  return { type: types.HIDE_EMPTY_CART_MODAL }\n}\n/**\n* Hide Payment not selected Modal action\n*/\nexport function hidePaymentNotSelectedModal() {\n  return { type: types.PAYMENT_SELECTED }\n}\n\n/**\n* Action to show cart minimum price modal\n*/\nexport function cartTotalIsBelowMinimumPrice() {\n  return { type: types.CART_TOTAL_IS_BELOW_MIN_PRICE }\n}\n\n/**\n* Action to hide cart minimum price modal\n*/\nexport function hideOrderMinimumPriceModal() {\n  return { type: types.CART_TOTAL_IS_ABOVE_MIN_PRICE }\n}\n\n/**\n* Order Created Action\n*/\nexport function orderCreated(order) {\n  return {\n    type: types.ORDER_CREATED,\n    data: order\n  }\n}\n\nexport function unsetCurrentOrder() {\n  return {type: types.UNSET_CURRENT_ORDER}\n}\n\n/**\n* Load Orders from Parse calling 'orders' cloud function.\n* It will dispatch CONSUMER_ORDERS_LOADED with ongoing and delivered orders.\n*/\nexport function loadConsumerOrders() {\n  return dispatch => {\n    Parse.Cloud.run('orders', { businessId: BUSINESS_ID }).then(orders => {\n      dispatch({\n        type: types.CONSUMER_ORDERS_LOADED,\n        data: orders\n      })\n\n      /*//Live Query for ongoing orders.\n      const ordersObjectId = orders.ongoing.map(o => o.id)\n      const ordersQuery = new Parse.Query(Order)\n      ordersQuery.containedIn('objectId', ordersObjectId)\n      ordersQuery.find().then(function (o) { console.log(o) })\n      const subscription = ordersQuery.subscribe()\n      subscription.on('open', () => { console.log('Opened') })\n      subscription.on('create', () => { console.log('created', arguments) })\n      subscription.on('enter', () => { console.log('entered', arguments) })\n      subscription.on('leave', () => { console.log('left', arguments) })\n      subscription.on('update', (orders) => {\n        console.log('Orders Updated', orders)\n        dispatch({\n          type: types.CONSUMER_ORDERS_LOADED,\n          data: orders\n        })\n      })\n      */\n    }).fail(e => {\n      //TODO add log error\n    })\n  }\n}\n\n/**\n* Set current order action\n*/\nexport function setCurrentOrder(order) {\n  return {\n    type: types.SET_CURRENT_ORDER,\n    data: order\n  }\n}\n\n/**\n* Load Cart by Id.\n*/\nexport function loadCart(cartId) {\n  return {type: 'NOTHING'}\n  /* * /\n  //Disabled due to malfunction.\n  return dispatch => {\n    new Parse.Query(Cart).include([\"consumer\", \"pointSale\",\n        \"consumerAddress.consumer\", \"items.product\",\n        \"items.modifiers.modifier.items\", \"items.modifiers.modifierItem\",\n        \"items.modifiersGroups.group.modifiers.items\",\n        \"items.modifiersGroups.items.modifier.items\",\n        \"items.modifiersGroups.items.modifierItem\"\n      ]).get(cartId).then(cart => {dispatch({\n        type: types.CART_LOADED,\n        data: cart\n      })\n    })\n  }\n  /* */\n}\n\n/**\n* Close Point Sale Closed Modal\n*/\nexport function hidePointSaleClosedModal() {\n  return {type: types.HIDE_POINT_SALE_CLOSED_MODAL}\n}\n\n/**\n* Open Point Sale Closed Modal\n*/\nexport function showPointSaleClosedModal() {\n  return {type: types.SHOW_POINT_SALE_CLOSED_MODAL}\n}\n\nexport function hideProfile() {\n  return {type: types.HIDE_PROFILE}\n}\n\nexport function showProfile() {\n  return {type: types.SHOW_PROFILE}\n}\n\nexport function closeOutOfCoverageModal() {\n  return {type: types.HIDE_OUT_OF_COVERAGE_MODAL}\n}\n\nexport function showOufOfCoverageModal() {\n  return {type: types.SHOW_OUT_OF_COVERAGE_MODAL}\n}\n\nexport function removeItem(item) {\n  return {type: types.CART_ITEM_REMOVE, data: item}\n}\n\nexport function increaseItem(item) {\n  return {type: types.CART_ITEM_INCREASE_AMOUNT, data: item}\n}\n\nexport function decreaseItem(item) {\n  return {type: types.CART_ITEM_DECREASE_AMOUNT, data: item}\n}\n\nexport function toggleCart(isOpen) {\n  return {type: types.TOGGLE_CART, data: isOpen}\n}\n\nexport function rateOrder(orderId, score, comment) {\n  return dispatch => {\n    dispatch({type: types.RATING_ORDER})\n    Parse.Cloud.run('rateOrder', {orderId, score, comment}).then(function () {\n      dispatch({type: types.RATE_ORDER_SUCCESS})\n      return dispatch(loadConsumerOrders())\n    }).fail(function (e) {\n      return {type: types.RATE_ORDER_ERROR, data: e}\n    })\n  }\n}\n\nexport function showSiteMap () {\n  return { type: types.SHOW_SITEMAP}\n}\n\nexport function hideSiteMap () {\n  return { type: types.HIDE_SITEMAP }\n}\n\nexport function hideOutOfCoverageModal() {\n  return { type: types.HIDE_OUT_OF_COVERAGE_MODAL }\n}\n\n/**\n* Load Point of Sales of given businessId.\n*/\nexport function loadPointSales () {\n  const params = {businessId: BUSINESS_ID}\n  return dispatch => {\n    Parse.Cloud.run('getPointSales', params).then((results) => {\n      dispatch({type: types.POINT_OF_SALES_LOADED, data: results})\n    })\n  }\n}\n\n/**\n* Geolocation error.\n*/\nexport function geolocationError() {\n  return {type: types.GEOLOCATION_ERROR }\n}\n\n/**\n* Hide Geolocation Error Modal.\n*/\nexport function hideAddressSearchModal() {\n  return {type: types.HIDE_GEOLOCATION_ERROR_MODAL }\n}\n\n/**\n* Show Address Search Modal.\n*/\nexport function showAddressSearchModal() {\n  return {type: types.SHOW_ADDRESS_SEARCH_MODAL }\n}\n"]}